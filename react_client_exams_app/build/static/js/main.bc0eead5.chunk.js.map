{"version":3,"sources":["components/pages/shared/Error404/Error404.module.css","assets/components/Logo_v1.png","components/shared/Button/Button.js","components/shared/Navbar/Navbar.js","components/shared/HeroSection/HeroSection.js","components/pages/shared/Home/Home.js","components/pages/shared/About/About.js","components/pages/shared/Login/Login.js","components/pages/shared/ForgotPassword/ForgotPassword.js","components/pages/shared/Error404/Error404.js","components/shared/Footer/Footer.js","components/pages/Admin/MainPage/Reports/Reports.js","components/Admin/TestTable/TestTable.js","components/pages/Admin/MainPage/ManageTests/ManageTests.js","components/Admin/QuestionTable/QuestionTable.js","components/pages/Admin/MainPage/ManageQuestions/ManageQuestions.js","components/pages/Admin/MainPage/ReportByRespondentName/ReportByRespondentName.js","utils/content.js","components/pages/Admin/MainPage/MainPage.js","components/Admin/TagsInput/TagsInput.js","components/pages/Admin/MainPage/ManageQuestions/CreateEditQuestion/CreateEditQuestion.js","components/pages/Admin/MainPage/ManageTests/CreateEditTest/CreateEditTest.js","components/pages/Admin/MainPage/Reports/TestReport/TestReport.js","components/pages/Student/SignUp/SignUp.js","App.js","index.js"],"names":["module","exports","STYLES","SIZES","Button","props","checkButtonStyle","includes","buttonStyle","checkButtonSize","buttonSize","checkLink","link","to","className","onClick","type","children","Navbar","useState","click","setClick","setButton","closeMobileMenu","showButton","window","innerWidth","useEffect","addEventListener","src","logo","alt","id","HeroSection","autoPlay","loop","muted","Home","document","title","About","Login","email","setEmail","password","setPassword","placeholder","value","onChange","e","target","console","log","ForgotPassword","previousPassword","setPreviousPassword","newPassword","setNewPassword","verifyNewPassword","setVerifyNewPassword","Error404","body","style","backgroundColor","styles","clouds","cloud","x1","x1_5","x2","x3","x4","x5","c","_404","_1","_2","Footer","rights","handelIconClick","externalLink","open","name","Reports","tests","setTests","field","setField","testChosen","setChosenTest","dateFrom","setDateFrom","dateTo","setDateTo","dateRange","setDateRange","past","setPast","location","useLocation","history","useHistory","generateReport","push","pathname","state","test","isMounted","fetch","method","then","res","json","data","catch","err","todayDate","Date","toISOString","split","getElementById","setAttribute","onSubmit","event","preventDefault","find","testID","toString","map","testName","disabled","required","checked","substring","goBack","TestTable","handleDelete","testType","lastUpdate","version","ManageTests","filter","setFilter","filterContent","setFilterContent","QuestionTable","questions","tags","question","i","tag","length","numOfTests","ManageQuestions","setQuestions","setTags","filterByTags","setFilterByTags","filteredQuestions","setFilteredQuestions","contains","toLowerCase","newQuestions","ReportByRespondentName","students","setStudents","studentTests","setStudentTests","respondentName","setRespondentName","respondentID","setRespondentID","studentTest","studentID","calcAverageGrade","student","fullName","lastActivity","instance","grade","AdminMainPageMenu","content","MainPage","fields","setFields","process","REACT_APP_CURRENT_FIELD","f","child","handleItemClick","TagsInput","index","indexOf","removeTags","onKeyUp","key","selectedTags","addTags","CreateEditQuestion","questionTypes","setQuestionTypes","setType","questionHeader","setQuestionHeader","text","questionText","setQuestionText","questionID","setQuestionID","answers","possibleAnswers","setPossibleAnswers","answerID","setAnswerID","answersLayout","setAnswersLayout","handlePossibleAnswersChange","correctAnswer_Counter","answer","correct","handleLayoutChange","saveQuestion","headers","JSON","stringify","last_update","now","difficulty","num_of_tests","undefined","questionType","a","newPossibleAnswers","handleAnswerChanged","handleAnswerClick","htmlFor","defaultChecked","addAnswer","handleTagsChange","CreateEditTest","testTypes","setTestTypes","certificateTemplates","setCertificateTemplates","languages","setLanguages","language","setLanguage","setTestType","setTestName","passingGrade","setPassingGrade","header","setHeader","messageSuccess","setMessageSuccess","messageFailure","setMessageFailure","certificateTemplate","setCertificateTemplate","status","from","setFrom","cc","setCC","bcc","setBCC","passingSubject","passingMessageSubject","setPassingMessageSubject","passingBody","passingMessageBody","setPassingMessageBody","failingSubject","failingMessageSubject","setFailingMessageSubject","failingBody","failingMessageBody","setFailingMessageBody","questionAmount","questionsAmount","template","colspan","certificate","fontWeight","color","TestReport","setTest","countNumberOfQuestions","counter","testCode","SignUp","setName","App","path","exact","component","render","isAuthed","isAdmin","ReactDOM"],"mappings":"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","file":"static/js/main.bc0eead5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"c\":\"Error404_c__2Aeai\",\"_404\":\"Error404__404__2Fwt7\",\"_1\":\"Error404__1__eMflm\",\"_2\":\"Error404__2__2fxQu\",\"text\":\"Error404_text__36SlO\",\"right\":\"Error404_right__2nEJz\",\"cloud\":\"Error404_cloud__2WFbz\",\"x1\":\"Error404_x1__2J0Dx\",\"moveclouds\":\"Error404_moveclouds__1vJNt\",\"x1_5\":\"Error404_x1_5__2AX3I\",\"x2\":\"Error404_x2__1ej0t\",\"x3\":\"Error404_x3__1234h\",\"x4\":\"Error404_x4__ZQ2Wu\",\"x5\":\"Error404_x5__2o5WT\"};","export default __webpack_public_path__ + \"static/media/Logo_v1.5720dfb9.png\";","import React                    from 'react'\r\nimport styles                   from './Button.css';\r\nimport { Link }                 from 'react-router-dom';\r\n\r\nconst STYLES = ['btn--primary', 'btn--outline'];\r\nconst SIZES = ['btn--medium', 'btn--large'];\r\n\r\nexport const Button = (props) => {\r\n    const checkButtonStyle = STYLES.includes(props.buttonStyle) ? props.buttonStyle : STYLES[0];\r\n    const checkButtonSize  = SIZES.includes(props.buttonSize)   ? props.buttonSize  : SIZES[0];\r\n    const checkLink        = props.link != null ? props.link : '/';\r\n\r\n    return (\r\n        <Link to={checkLink} className='btn-mobile'>\r\n            <button className={`btn ${checkButtonStyle} ${checkButtonSize}`} onClick={props.onClick} type={props.type}>\r\n                {props.children}\r\n            </button>\r\n        </Link>\r\n    )\r\n};","import styles                       from './Navbar.css';\r\nimport logo                         from '../../../assets/components/Logo_v1.png';\r\nimport React, {useState, useEffect} from 'react'\r\nimport        { Link }              from 'react-router-dom';\r\nimport        { Button }            from '../Button/Button';\r\n\r\nexport default function Navbar() {\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960) {\r\n            setButton(false)\r\n        } else {\r\n            setButton(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n\r\n    // Every time the window size changes\r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <>\r\n        <nav className=\"navbar noselect\">\r\n            <div className=\"navbar-container\">\r\n                <Link to=\"/\" className=\"navbar-logo\" onClick={closeMobileMenu}>\r\n                    <img className=\"logo-img\" src={logo} alt=\"logo\"></img>\r\n                </Link>\r\n                <div className=\"menu-icon\" onClick={handleClick}>\r\n                    <i id=\"icon\" className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n                </div>\r\n                <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                    <li className='nav-item'>\r\n                        <Link to='/'        className='nav-links'   onClick={closeMobileMenu}>\r\n                            Home\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <Link to='/login'   className='nav-links'   onClick={closeMobileMenu}>\r\n                            Login\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <Link to='/sign-up' className='nav-links'   onClick={closeMobileMenu}>\r\n                            Sign-up\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <Link to='/about'   className='nav-links'   onClick={closeMobileMenu}>\r\n                            About\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                {/* {button && <Button link='/sign-up' buttonStyle='btn--outline'> Sign Up </Button>} */}\r\n            </div>\r\n        </nav>\r\n        </>\r\n    )\r\n}\r\n","import React            from 'react';\r\nimport styles           from './HeroSection.css';\r\nimport { Button }       from '../Button/Button';\r\n\r\nexport default function HeroSection() {\r\n    return (\r\n        <div className='hero__container noselect'>\r\n            <video src=\"/videos/video-1.mp4\" autoPlay loop muted />\r\n            <h1>    OI Exam System                          </h1>\r\n            <p>     It appears you are not logged in.       </p>\r\n            <div className='hero__btns'>\r\n                <Button className='btns' link='/login'      buttonStyle='btn--outline' buttonSize='btn--large'> Login   </Button>\r\n                <Button className='btns' link='/sign-up'    buttonStyle='btn--primary' buttonSize='btn--large'> Sign Up </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport '../../../../App.css';\r\nimport HeroSection from '../../../shared/HeroSection/HeroSection';\r\n\r\nexport default function Home () {\r\n    \r\n    useEffect(() => {\r\n        document.title = \"OI Exam System\";\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <HeroSection/>\r\n        </>\r\n    )\r\n};","import react from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nexport default function About() {\r\n\r\n  useEffect(() => {\r\n      document.title = \"About\";\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"about noselect\">\r\n      <h1 className=\"page__header\"> About </h1>\r\n    </div>\r\n  )\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Button } from '../../../shared/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './Login.css'\r\n\r\nexport default function Login() {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = () => {\r\n    console.log(\"submit\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = \"Login\";\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"login noselect\">\r\n      <h1 className=\"page__header\"> Login </h1>\r\n      <form className=\"login__form\">\r\n        <div className=\"form_content__container\">\r\n          <input type=\"email\"     placeholder=\"Email\"     value={email}     onChange={(e) => setEmail(e.target.value)}    />\r\n          <input type=\"password\"  placeholder=\"Password\"  value={password}  onChange={(e) => setPassword(e.target.value)} />\r\n          <Link to=\"/forgot-password\"> Forgot your password? </Link>\r\n        </div>\r\n        <button id=\"submit__button\" type=\"submit\"   onClick={handleSubmit}> Submit </button>\r\n      </form>\r\n    </div>\r\n  )\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Button } from '../../../shared/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './ForgotPassword.css';\r\n\r\nexport default function ForgotPassword() {\r\n\r\n  const [ previousPassword,   setPreviousPassword]  = useState(\"\");\r\n  const [ newPassword,        setNewPassword]       = useState(\"\");\r\n  const [ verifyNewPassword,  setVerifyNewPassword] = useState(\"\");\r\n\r\n  const handleSubmit = () => {\r\n    console.log(\"Submit\");\r\n  }\r\n\r\n  useEffect(() => {\r\n      document.title = \"Forgot Password\";\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"forgot_password noselect\">\r\n      <h1 className=\"page__header\"> Forgot Password </h1>\r\n      <form className=\"forgot_password__form\">\r\n        <div className=\"form_content__container\">\r\n          <input type=\"password\"  placeholder=\"Previous password\" value={previousPassword}   onChange={(e) => setPreviousPassword(e.target.value)}  />\r\n          <input type=\"email\"     placeholder=\"New password\"      value={newPassword}        onChange={(e) => setNewPassword(e.target.value)}       />\r\n          <input type=\"password\"  placeholder=\"Verify Password\"   value={verifyNewPassword}  onChange={(e) => setVerifyNewPassword(e.target.value)} />\r\n        </div>\r\n        <button id=\"submit__button\" type=\"submit\" onClick={handleSubmit}> Submit </button>\r\n      </form>\r\n    </div>\r\n  )\r\n};","import react from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport styles from './Error404.module.css';\r\n\r\nexport default function Error404() {\r\n\r\n  useEffect(() => {\r\n      document.title = \"Page not found!\";\r\n      document.body.style.backgroundColor = \"#353535\";\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n      <div className=\"error404 noselect\">\r\n        <div id={styles.clouds}>\r\n            <div className={`${styles.cloud} ${styles.x1}`}   ></div>\r\n            <div className={`${styles.cloud} ${styles.x1_5}`} ></div>\r\n            <div className={`${styles.cloud} ${styles.x2}`}   ></div>\r\n            <div className={`${styles.cloud} ${styles.x3}`}   ></div>\r\n            <div className={`${styles.cloud} ${styles.x4}`}   ></div>\r\n            <div className={`${styles.cloud} ${styles.x5}`}   ></div>\r\n        </div>\r\n        <div className= {`${styles.c}`}>\r\n            <div className={styles._404}  >404</div>\r\n            <hr/>\r\n            <div className={styles._1}    >THE PAGE</div>\r\n            <div className={styles._2}    >WAS NOT FOUND</div>\r\n        </div>\r\n      </div>\r\n      </>\r\n  )\r\n};","\r\nimport React, { useEffect } from 'react';\r\nimport        { Button }    from '../Button/Button';\r\nimport        { Link }      from 'react-router-dom';\r\nimport styles               from './Footer.css';\r\n\r\nexport default function Footer({ logo, rights }) {\r\n\r\n    const handelIconClick = (externalLink) => {\r\n        if (typeof externalLink === 'string') {\r\n            // Open in the same window\r\n            // window.location.href = externalLink;\r\n    \r\n            // Open in a new window\r\n            window.open(externalLink);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='footer noselect'>\r\n            <section className=\"footer-subscription\">\r\n                <p className=\"footer-subscription-heading\">\r\n                    Join us to get notifications on any relevant new tests coming up\r\n                </p>\r\n\r\n                <p className=\"footer-subscription-text\">\r\n                    You can unsubscribe at any time.\r\n                </p>\r\n                <div className=\"input-areas\">\r\n                    <form>\r\n                        <input type=\"email\" name=\"email\" placeholder='Your email' className='footer-input'/>\r\n                        <Button buttonStyle='btn--outline'> Subscribe </Button>\r\n                    </form>\r\n                </div>\r\n            </section>\r\n            <div className='footer-links'>\r\n                <div className='footer-link-wrapper'>\r\n                    <div className='footer-link-items'>\r\n                        <h2> About Us </h2>\r\n                        <Link to='/about'           > Additional Information    </Link>\r\n                        <Link to='/terms-of-service'> Terms of Service          </Link>\r\n                    </div>\r\n                    <div className='footer-link-items'>\r\n                        <h2> Contact Us </h2>\r\n                        <Link to='/contact'                                                     > Contact Information   </Link>\r\n                        <Link to='https://www.paypal.com/donate?hosted_button_id=WLXFDL7PFQ7HN' > Support Us            </Link>\r\n                    </div>\r\n                </div>\r\n                <div className='footer-link-wrapper'>\r\n                    <div className='footer-link-items'>\r\n                        <h2> Social Media </h2>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.instagram.com/ofek.itzhaki/\")}                target='_blank' aria-label='Instagram'        > Instagram     </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.facebook.com/ofek.itzhaki/\")}                 target='_blank' aria-label='Facebook'         > Facebook      </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://github.com/OfekItzhaki/\")}                        target='_blank' aria-label='Github'           > Github        </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.linkedin.com/in/ofekitzhaki/\")}               target='_blank' aria-label='Linkedin'         > Linkedin      </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.codegrepper.com/app/profile.php?id=43241/\")}  target='_blank' aria-label='Grepper'          > Grepper       </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <section className=\"social-media\">\r\n                <div className=\"social-media-wrap\">\r\n                    <div className=\"footer-logo\">\r\n                        <Link to=\"/\" className=\"social-logo\">\r\n                            {logo} {logo && <i className=\"fab fa-typo3\"></i>}\r\n                        </Link>\r\n                    </div>\r\n                    <small className=\"website-rights\"> {rights} </small>\r\n                    <div className=\"social-icons\">\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.facebook.com/ofek.itzhaki/\")}   target='_blank' aria-label='Facebook'   className=\"social-icon-link facebook\"   >\r\n                            <i className=\"fab fa-facebook-f\"></i>\r\n                        </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.instagram.com/ofek.itzhaki/\")}  target='_blank' aria-label='Instagram'  className=\"social-icon-link instagram\"  >\r\n                            <i className=\"fab fa-instagram\"></i>\r\n                        </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://github.com/OfekItzhaki/\")}          target='_blank' aria-label='Github'     className=\"social-icon-link github\"     >\r\n                            <i className=\"fab fa-github\"></i>\r\n                        </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.linkedin.com/in/ofekitzhaki/\")} target='_blank' aria-label='Linkedin'   className=\"social-icon-link linkedin\"   >\r\n                            <i className=\"fab fa-linkedin\"></i>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n};  ","import React, { useEffect, useState     }   from 'react';\r\nimport        { useHistory, useLocation }   from 'react-router-dom';\r\nimport styles                               from './Reports.css';\r\n\r\nexport const Reports = () => {\r\n\r\n    // ------------------------ Fetch Info Hooks -----------------------\r\n\r\n    const [ tests,       setTests       ]   = useState(null);\r\n    const [ field,       setField       ]   = useState(null);\r\n\r\n    // ------------------------- Content Hooks -------------------------\r\n\r\n    const [ testChosen,  setChosenTest  ]   = useState(null);\r\n    const [ dateFrom,    setDateFrom    ]   = useState(\"\");\r\n    const [ dateTo,      setDateTo      ]   = useState(\"\");\r\n    const [ dateRange,   setDateRange   ]   = useState(\"\");\r\n    const [ past,        setPast        ]   = useState(true);\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const handleDateCheckChange = (checked) => {\r\n        setPast(checked);\r\n\r\n        if (checked) {\r\n            document.getElementById(\"date__from\").value = new Date().toISOString().substring(0, 10); \r\n            document.getElementById(\"date__to\").value = new Date().toISOString().substring(0, 10);\r\n            setDateRange(`${document.getElementById(\"date__from\").value} - ${document.getElementById(\"date__to\").value}`)\r\n        } else {\r\n            setDateRange(\"any date in the past\");\r\n        }\r\n    }\r\n\r\n    const handleTestChange = (id) => {\r\n        setChosenTest(tests.find((test) => test.testID.toString() === id));\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        generateReport();\r\n    }\r\n\r\n    const generateReport = () => {\r\n        console.log(\"generate report\");\r\n        setDateRange(dateFrom - dateTo);\r\n\r\n        history.push({\r\n            pathname: '/admin/test-report',\r\n            // search: '?update=true',  // query string\r\n            state: {  // location state\r\n                // update: true,\r\n              test: testChosen,\r\n              dateRange: dateRange, \r\n              field: field\r\n            },\r\n        }); \r\n    }\r\n\r\n    const fetchTests = () => {\r\n        fetch(\"http://localhost:8000/tests\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n          setTests(data);\r\n\r\n          setChosenTest(data[0]);\r\n          setDateRange(\"any date in the past\");\r\n        })\r\n        .catch((err) => console.log('error fetching tests:' + err))\r\n    }\r\n    \r\n    useEffect(() => {\r\n        document.title = \"Reports\";\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n    \r\n        if (isMounted) {                // add conditional check\r\n            fetchTests();\r\n        }\r\n\r\n        let today = new Date();\r\n        let todayDate = today.toISOString().split(\"T\")[0];\r\n        document.getElementById(\"date__from\").setAttribute(\"min\", \"1999-01-01\");\r\n        document.getElementById(\"date__from\").setAttribute(\"max\", todayDate);\r\n\r\n        document.getElementById(\"date__to\").setAttribute(\"min\", \"1999-01-01\");\r\n        document.getElementById(\"date__to\").setAttribute(\"max\", todayDate);\r\n\r\n        setField(location.state.field);  // for location state\r\n    \r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"reports noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1> Test Report for {field} </h1>\r\n            </div>\r\n            <div id=\"content__container\">\r\n                <form id=\"report__form\" onSubmit={handleSubmit}>\r\n                    <table id=\"content__table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <label id=\"label__test_name\">       Select Test:            </label>\r\n                                </td>\r\n\r\n                                <td> <select id=\"test__select\" onChange={(e) => handleTestChange(e.target.value)}>\r\n                                     {tests && tests.map((test) => {\r\n                                         \r\n                                         return (\r\n                                             <option key={test.testID} value={test.testID}> {test.testName} </option>\r\n                                         )\r\n                                    })}\r\n                                     </select> </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label id=\"label__date_range\">      Date Range:             </label>\r\n                                </td>\r\n                                <td>\r\n                                    <label id=\"label__from\">            From:                   </label>\r\n                                    <input id=\"date__from\"  type=\"date\" onChange={ (e) => setDateFrom(e.target.value) }  disabled={past}  required/>\r\n                                </td>\r\n                                <td>\r\n                                    <label id=\"label__to\">              To:                     </label>\r\n                                    <input id=\"date__to\"    type=\"date\" onChange={ (e) => setDateTo(e.target.value)   }  disabled={past}  required/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>  </td>\r\n                                <td>\r\n                                    <label id=\"label__OR\">              OR                      </label>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>  </td>\r\n                                <td>\r\n                                    <input type=\"checkbox\" checked={past} onChange={ (e) => handleDateCheckChange(e.target.checked) } />\r\n                                    <label id=\"label__past\">                Any date in the past        </label>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div id=\"button__container\">\r\n                        <button className=\"regular__button\" onClick={() => back() }>     {`<<` } Back                </button>\r\n                        <button className=\"regular__button\" type=\"submit\">               Generate Report             </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};","import styles                   from './TestTable.css';\r\nimport { Link }                 from 'react-router-dom';\r\n\r\nexport const TestTable = ({ tests, handleDelete }) => {\r\n    return (\r\n        <table id=\"tests__table\">\r\n            <tbody>\r\n                <tr className=\"space_under header_row border_bottom\">\r\n                    <th> ID                 </th>\r\n                    <th> Link               </th>\r\n                    <th> Test Name          </th>\r\n                    <th> Num of Questions   </th>\r\n                    <th> Last Update        </th>\r\n                    <th> Type               </th>\r\n                    <th> Version            </th>\r\n                    <th>                    </th>\r\n                </tr>\r\n                \r\n\r\n                {tests.map((test) => (\r\n                <tr className=\"space_under border_bottom\" key={test.testID}>\r\n                    <td className=\"test_id\">            {test.testID}                                       </td>\r\n                    <td className=\"test_link\">          <button className=\"regular__button\"> Copy </button>   </td>\r\n                    <td className=\"test_name\">          {test.testName}                                     </td>\r\n                    <td className=\"test_amount\">        {test.testType}                                     </td>\r\n                    <td className=\"test_update\">        {test.lastUpdate}                                   </td>\r\n                    <td className=\"test_type\">          {test.testType}                                     </td>\r\n                    <td className=\"test_version\">       {test.version}                                      </td>\r\n                    <td className=\"buttons\">\r\n                        <button className=\"regular__button\"> Edit       </button>\r\n                        <button className=\"regular__button\"> Duplicate  </button>\r\n                        <label>             </label>\r\n                    </td>\r\n                </tr> ))}\r\n            \r\n            </tbody>\r\n        </table>\r\n    )\r\n};\r\n","import React, { useEffect, useState }   from 'react';\r\nimport        { TestTable }             from '../../../../Admin/TestTable/TestTable';\r\nimport        { useHistory }            from 'react-router-dom';\r\nimport styles                           from './ManageTests.css'\r\n\r\nexport const ManageTests = ({ field }) => {\r\n\r\n    // ---------------------------- Fetch Info Hooks ---------------------------\r\n\r\n    const [ tests,          setTests            ] = useState(null);\r\n\r\n    // ----------------------------- Content Hooks -----------------------------\r\n\r\n    const [filter,          setFilter           ] = useState(false);\r\n    const [filterContent,   setFilterContent    ] = useState(\"\");\r\n\r\n    // ----------------------------------------------------------------------------\r\n\r\n    const history = useHistory();\r\n\r\n    const back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const createTest = () => {\r\n        history.push(\"/admin/create-test\");\r\n    }\r\n\r\n    const fetchTests = () => {\r\n        fetch(\"http://localhost:8000/tests\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n          setTests(data); \r\n        })\r\n        .catch((err) => console.log('error fetching tests:' + err))\r\n    }\r\n\r\n    const handleFilterChange = (value) => {\r\n        setFilterContent(value);\r\n        value === \"\" ? setFilter(false) : setFilter(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = \"Manage Tests\";\r\n    }, [])\r\n\r\n    // Meant for fetching the necessary information on first render\r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n\r\n        if (isMounted) {                // add conditional check\r\n            fetchTests();\r\n        }\r\n\r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"manage_tests noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1 className=\"page__header\"> Available Tests for {field ? field : \"\"} </h1>\r\n            </div>\r\n\r\n            <div id=\"filter__container\">\r\n                <div id=\"filter_keywords__container\">    \r\n                    <label> Filter name by keywords: </label>\r\n                    <input id=\"filter__input\" type=\"text\" value={filterContent} onChange={(e) => handleFilterChange(e.target.value) } placeholder=\"Enter a list of keywords separated by commas\"/>\r\n                    <label id=\"filter_state\"> Filter is {filter === false ? \"OFF\" : \"ON\"}  </label>\r\n                </div>\r\n                <label id=\"amount_filtered\"> Showing {`AMOUNT`} of total {`AMOUNT`} </label>\r\n            </div>\r\n\r\n            <div id=\"table__container\">\r\n                { tests && <TestTable tests={tests} /> }\r\n                <label type=\"text\" id=\"showing_tests\"> showing 1-{`AMOUNT`} of available Tests </label>\r\n            </div>\r\n\r\n            <div id=\"buttons__container\">\r\n                <button className=\"regular__button\" onClick={() =>  back()         }>      {`<<` } Back            </button>\r\n                <button className=\"regular__button\" onClick={() =>  createTest()  }>      Create a Test {`>>`}    </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};","import styles                   from './QuestionTable.css';\r\nimport { useState }             from 'react';\r\n\r\nexport const QuestionTable = ({ questions, tags, handleDelete }) => {\r\n\r\n    return (\r\n        <table id=\"questions__table\">\r\n            <tbody>\r\n                <tr className=\"space_under header_row border_bottom\">\r\n                    <th> ID                     </th>\r\n                    <th> Question Text and Tags </th>\r\n                    <th> Last Update            </th>\r\n                    <th> Question Type          </th>\r\n                    <th> # of Tests             </th>\r\n                    <th></th>\r\n                </tr>\r\n                \r\n\r\n                {questions.map((question, i) => (\r\n                <tr className=\"space_under border_bottom\" key={question}>\r\n                    <td className=\"question_id\"           key={question.id}>        {question.id}                                                   </td>\r\n                    <td className=\"question_title_tags\"   key={question.title}>     {question.title} \r\n                    <br/>\r\n                        {question.tags.map((tag) => { \r\n                            return (\r\n                            <>\r\n                                <button className=\"like_link_button\" key={tag}>     {tag}                                                           </button> \r\n                                <label className=\"like_link_label\">                 {tag !== question.tags[question.tags.length - 1] ? \" | \" : \"\"}  </label>\r\n                            </>)\r\n                        })} </td>\r\n                    <td className=\"question_update\" key={question.lastUpdate}>      {question.lastUpdate}       </td>\r\n                    <td className=\"question_type\"   key={question.type}>            {question.type}             </td>\r\n                    <td className=\"question_tests\"  key={question.numOfTests}>      {question.numOfTests}       </td>\r\n                    <td className=\"buttons\">\r\n                        <button className=\"regular__button\"> Show                                               </button>\r\n                        <button className=\"regular__button\"> Edit                                               </button>\r\n                        <button className=\"regular__button\"> Duplicate                                          </button>\r\n                        <button className=\"regular__button\"  onClick={() => handleDelete(question.id)}> Delete  </button>\r\n                    </td>\r\n                </tr> ))}\r\n            \r\n            </tbody>\r\n        </table>\r\n    )\r\n};\r\n","import React, { useEffect, useState }   from 'react';\r\nimport        { QuestionTable }      from '../../../../Admin/QuestionTable/QuestionTable';\r\nimport        { useHistory }            from 'react-router-dom';\r\nimport styles                           from './ManageQuestions.css';\r\n\r\nexport const ManageQuestions = ({ field }) => {\r\n\r\n    // ---------------------------- Fetch Info Hooks ---------------------------\r\n\r\n    const [ questions,          setQuestions     ]  = useState(null);\r\n    const [ tags,               setTags          ]  = useState(null);\r\n\r\n    // ----------------------------- Content Hooks -----------------------------    \r\n\r\n    const [ filter,             setFilter        ]  = useState(false);\r\n    const [ filterByTags,       setFilterByTags  ]  = useState(true);\r\n\r\n    const [ filteredQuestions,  setFilteredQuestions  ] = useState([]);\r\n\r\n    // ----------------------------------------------------------------------------\r\n\r\n    const history = useHistory();\r\n\r\n    const back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const newQuestion = () => {\r\n        history.push(\"/admin/create-question\");\r\n    }\r\n\r\n    const next = () => {\r\n        \r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        const newQuestions = questions.filter(question => questions.id !== id);\r\n        setQuestions(newQuestions);\r\n    }\r\n\r\n    const handleFilterByChange = (value) => {\r\n        if (value === \"tags\") setFilterByTags(true);\r\n        else setFilterByTags(false);\r\n    }\r\n\r\n    const handleFilterContentChange = (value) => {\r\n        \r\n        if (value === \"\") setFilter(false);\r\n        else setFilter(true);\r\n\r\n        let newQuestionList = questions;\r\n        setFilteredQuestions(newQuestionList.filter((question) => { \r\n            \r\n            let contains = false;\r\n\r\n            if (filterByTags === true) {\r\n                question.tags.map((tag) => {\r\n                    if (tag.toLowerCase().includes(value)) contains = true;\r\n                });\r\n            } else {\r\n                if (question.title.includes(value)) contains = true;\r\n            }\r\n\r\n            if (contains === true) return question;\r\n\r\n        }));\r\n    }\r\n\r\n    const fetchTags = () => {\r\n        fetch(\"http://localhost:8000/tags\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n          setTags(data); \r\n        })\r\n        .catch((err) => console.log('error fetching tags:' + err))\r\n      }\r\n\r\n    const fetchQuestions = () => {\r\n        fetch(\"http://localhost:8000/questions\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            setQuestions(data)\r\n            setFilteredQuestions(data);\r\n        })\r\n        .catch((err) => console.log('error fetching questions:' + err))\r\n      }\r\n\r\n    // Meant for fetching the necessary information on first render\r\n    useEffect(() => {\r\n        document.title = \"Manage Questions\";\r\n\r\n        let isMounted = true;           // note mutable flag\r\n\r\n        if (isMounted) {                // add conditional check \r\n            fetchQuestions();\r\n            fetchTags();\r\n        }\r\n\r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"manage_questions noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1 className=\"page__header\"> Available Questions for {field ? field : \"\"} </h1>\r\n            </div>\r\n            <div id=\"filter__container\">\r\n                <label> Filter by: </label>\r\n                <select onChange={ (e) => handleFilterByChange(e.target.value) }>\r\n                    <option value=\"tags\">       tags       </option>\r\n                    <option value=\"content\">    content    </option>\r\n                </select>\r\n\r\n                <div id=\"filter_by__container\">\r\n                    <input id=\"filter__input\" type=\"text\" onChange={ (e) => handleFilterContentChange(e.target.value) } placeholder=\"Enter a list of keywords separated by commas\"/>\r\n                    <label id=\"filter__state\">      Filter is   {filter === false ? \"OFF\" : \"ON\"}                                                           </label>\r\n                    <label id=\"amount__filtered\">   Filtered    {filteredQuestions && filteredQuestions.length} of total {questions && questions.length}    </label>\r\n                </div>\r\n            </div>\r\n            <div id=\"questions__container\">\r\n                <div id=\"table__container\">\r\n                    {questions && <QuestionTable questions={filteredQuestions} tags={tags} handleDelete={handleDelete} /> }\r\n                </div>\r\n                <div id=\"under_table__container\">\r\n                    <label type=\"text\" id=\"showing_questions\"> showing 1-{`AMOUNT`} of filtered Questions </label>\r\n                    <button className=\"regular__button\" onClick={() =>   next()          }> Next {`>>`} </button>\r\n                    <button className=\"regular__button\" onClick={() =>   next()          }> Show All {questions && questions.length} questions </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"buttons__container\">\r\n                <button className=\"regular__button\" onClick={() =>   back()          }>  {`<<` } Back         </button>\r\n                <button className=\"regular__button\" onClick={() =>   newQuestion()   }>  New Question {`>>`}  </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};","import React, { useEffect, useState }   from 'react';\r\nimport        { filter }                from 'minimatch';\r\nimport        { useHistory }            from 'react-router-dom';\r\nimport styles                           from './ReportByRespondentName.css';\r\n\r\nexport const ReportByRespondentName = ({ title }) => {\r\n    \r\n    // ------------------------ Fetch Info Hooks -----------------------\r\n    \r\n    const [ students,            setStudents         ]       = useState(null); \r\n    const [ studentTests,        setStudentTests     ]       = useState(null); \r\n\r\n    // ------------------------- Content Hooks -------------------------\r\n\r\n    const [ filterContent,       setFilterContent    ]       = useState(\"\");\r\n    const [ respondentName,      setRespondentName   ]       = useState(\"\");\r\n    const [ respondentID,        setRespondentID     ]       = useState(null);\r\n\r\n    const handleRespondentClick = (name, id) => {\r\n        console.log(\"handle respondent click\")\r\n        setRespondentName(name);\r\n        setRespondentID(id);\r\n    }\r\n\r\n\r\n    // ?????????????????????????????\r\n    const calcAverageGrade = () => {\r\n        const tests = [];\r\n        if (studentTests !== null && respondentID !== 0) {\r\n            studentTests.filter((studentTest) => studentTest.studentID === respondentID).map((studentTest) =>\r\n                tests.push(studentTest)\r\n            );\r\n            console.log(tests);\r\n        }\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const Back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const fetchStudents = () => {\r\n        fetch(\"http://localhost:8000/students\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => setStudents(data))\r\n        .catch((err) => console.log('error fetching students:' + err))\r\n      }\r\n\r\n      const fetchStudentTests = () => {\r\n        fetch(\"http://localhost:8000/studentTests\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => setStudentTests(data))\r\n        .catch((err) => console.log('error fetching student tests:' + err))\r\n      }\r\n\r\n\r\n    useEffect(() => {\r\n        document.title = \"Report by Name\";\r\n    }, [])\r\n    \r\n\r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n\r\n        if (isMounted) {                // add conditional check \r\n            fetchStudents();\r\n            fetchStudentTests();\r\n        }\r\n\r\n        calcAverageGrade();\r\n\r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"report_by_name noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1> Report by Respondent Name </h1>\r\n            </div>\r\n\r\n            <div id=\"content__container\">\r\n                <div id=\"respondent__container\">\r\n                    <h2> Find a respondent </h2>\r\n                    <p> To find a respondent, start typing a name below, </p>\r\n                    <p> then select a respondent from the list that will appear. </p>\r\n                    <div id=\"filter_name__container\">    \r\n                        <label> Respondent's name: </label>\r\n                        <input id=\"filter__input\" type='text' value={filterContent} placeholder=\"Enter a name\" onChange={(e) => setFilterContent(e.target.value) } />\r\n                    </div>\r\n\r\n                    <table id=\"respondents__table\">\r\n                        <tbody>\r\n                            <tr className=\"header_row border_bottom\">\r\n                                <th> ID             </th>\r\n                                <th> Respondent     </th>\r\n                                <th> Email          </th>\r\n                                <th> Last Activity  </th>\r\n                            </tr>\r\n\r\n                            {students && students.filter((student) => student.fullName.includes(filterContent)).map((student) => (\r\n                            <tr key={student.id} onClick={() => handleRespondentClick(student.fullName, student.id)}>\r\n                                <td> {student.id}               </td>\r\n                                <td> {student.fullName}         </td>\r\n                                <td> {student.email}            </td>\r\n                                <td> {student.lastActivity}     </td>\r\n                            </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div id=\"activity_report__container\" className={respondentID === null ? \"hidden\" : \"visible\"}>\r\n                    <h2> Activity Report for: {respondentName} </h2>\r\n                    <div id=\"above_activity__container\">\r\n                        <label type=\"text\" id=\"explanation\">    Click a test to show its results           </label>\r\n                        <label type=\"text\" id=\"average_grade\">  Average grade for a test: {}               </label>\r\n                    </div>\r\n\r\n                    <table id=\"activity_report__table\">\r\n                        <tbody>\r\n                            <tr className=\"header_row border_bottom\">\r\n                                <th> Instance       </th>\r\n                                <th> Test ID        </th>\r\n                                <th> Test Name      </th>\r\n                                <th> Grade          </th>\r\n                                <th> Last Activity  </th>\r\n                            </tr>\r\n\r\n                            {studentTests && studentTests.filter((studentTest) => studentTest.studentID === respondentID).map((studentTest) => (\r\n                            <tr key={studentTest.id}>\r\n                                <td> {studentTest.instance}             </td>\r\n                                <td> {studentTest.testID}               </td>\r\n                                <td> {studentTest.testName}             </td>\r\n                                <td> {studentTest.grade}                </td>\r\n                                <td> {studentTest.lastActivity}         </td>\r\n                            </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div id=\"buttons__container\">\r\n                        <button className=\"regular__button\" onClick={() => Back() }> {`<<` } Back </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import { Reports }       from \"../components/pages/Admin/MainPage/Reports/Reports\";\r\nimport { ManageTests }      from \"../components/pages/Admin/MainPage/ManageTests/ManageTests\";\r\nimport { ManageQuestions }  from \"../components/pages/Admin/MainPage/ManageQuestions/ManageQuestions\";\r\nimport { ReportByRespondentName } from \"../components/pages/Admin/MainPage/ReportByRespondentName/ReportByRespondentName\";\r\n\r\nexport const AdminMainPageMenu = [\r\n    {\r\n        title: 'Manage Questions',\r\n        content: <ManageQuestions></ManageQuestions>,\r\n        link: \"/admin/manage-questions\"\r\n    },\r\n    {\r\n        title: 'Manage Tests',\r\n        content: <ManageTests></ManageTests>,\r\n        link: \"/admin/manage-tests\"\r\n    },\r\n    {\r\n        title: 'Reports',\r\n        content: <Reports></Reports>,\r\n        link: \"/admin/reports\"\r\n    },\r\n    {\r\n        title: 'Report by Respondent Name',\r\n        content: <ReportByRespondentName></ReportByRespondentName>,\r\n        link: \"/admin/report-by-name\"\r\n    }\r\n];","import React,   { useEffect, useState  }   from    'react';\r\nimport          { AdminMainPageMenu    }   from    '../../../../utils/content';\r\nimport          { Link                 }   from    'react-router-dom';\r\nimport          { useHistory           }   from 'react-router-dom';\r\nimport styles                              from    './MainPage.css';\r\n\r\nexport default function MainPage() {\r\n\r\n    const [ fields,     setFields       ] = useState(null);\r\n    const [ field,      setField        ] = useState(null); \r\n\r\n    const history = useHistory();\r\n\r\n    const handleFieldChange = (f) => {\r\n        setField(f);\r\n        console.log(f);\r\n    }\r\n    \r\n    const handleItemClick = (link, field) => {\r\n        history.push({\r\n            pathname: `${link}`,\r\n            // search: '?update=true',  // query string\r\n            state: {  // location state\r\n                // update: true, \r\n              field: field\r\n            },\r\n        }); \r\n    }\r\n\r\n    const fetchFields = () => {\r\n        fetch(\"http://localhost:8000/fields\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n            setFields(data);\r\n            setField(data[0].title);\r\n\r\n            process.env.REACT_APP_CURRENT_FIELD = data[0];\r\n        })\r\n        .catch((err) => console.log('error fetching tests:' + err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = 'Admin panel';\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n    \r\n        if (isMounted) {                // add conditional check\r\n            fetchFields();\r\n        }\r\n    \r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"admin_mainpage noselect\">\r\n            <div id=\"main__container\">\r\n                <div id=\"header__container\">\r\n                    <h1> Administrator panel </h1>\r\n                </div>\r\n                <div id=\"content__container\">\r\n                    <table id=\"content__table\">\r\n                        <tbody>\r\n                            <tr id=\"select__tr\">\r\n                                <td id=\"select__td\">\r\n                                    <label id=\"label__choose\"> Choose a field of study: </label>\r\n                                    <select id=\"fields__select\" onChange={(e) => handleFieldChange(e.target.value)}>\r\n                                        { fields && fields.map((field) => (\r\n                                            <option key={field.id} value={field.title}> {field.title} </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            { AdminMainPageMenu.map((child) => (\r\n                                <tr key={child.title}>\r\n                                    <td> <button className=\"menu_item like_link_button\" onClick={() => handleItemClick(child.link, field)}> {child.title} </button> </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport styles                         from '../TagsInput/TagsInput.scss';\r\n\r\nexport const TagsInput = props => {\r\n\r\n    const [tags, setTags] = useState([]);\r\n\r\n    const addTags = event => {\r\n        if (event.key === \"Enter\" && event.target.value !== \"\") {\r\n            setTags([...tags, event.target.value]);\r\n            props.selectedTags([...tags, event.target.value]);\r\n            event.target.value = \"\";\r\n        }\r\n    };\r\n\r\n    const removeTags = index => {\r\n        setTags([...tags.filter(tag => tags.indexOf(tag) !== index)]);\r\n    };\r\n    \r\n    return (\r\n        <div className=\"tags-input\">\r\n            {tags.map((tag, index) => (\r\n                <li key={index}>\r\n                    <span>{tag}</span>\r\n                    <i\r\n                        className=\"material-icons\"\r\n                        onClick={() => removeTags(index)} \r\n                    >\r\n                        close\r\n                    </i>\r\n                </li>\r\n            ))}\r\n            <input\r\n                type=\"text\"\r\n                onKeyUp={event => addTags(event)}\r\n                placeholder=\"Press enter to add tags\"\r\n            />\r\n        </div>\r\n    );\r\n};","import React, { useState, useEffect } from 'react';\r\nimport        { useHistory }          from 'react-router-dom';\r\nimport        { TagsInput }           from '../../../../../Admin/TagsInput/TagsInput';\r\nimport styles                         from './CreateEditQuestion.css';\r\n\r\n  export const CreateEditQuestion = ({ field, question }) => {\r\n\r\n  // ------------------------ Fetch Info Hooks -----------------------\r\n\r\n  const [questionTypes,       setQuestionTypes    ]  = useState(null);\r\n  const [questions,           setQuestions        ]  = useState(null);\r\n\r\n  // ------------------------- Content Hooks -------------------------\r\n\r\n  // *Question Table*\r\n  const [ type,               setType             ]  = useState(question ? question.type : \"\");\r\n  const [ questionHeader,     setQuestionHeader   ]  = useState(question ? question.title : \"\");\r\n  const [ questionText,       setQuestionText     ]  = useState(question ? question.text : \"\");\r\n  const [ questionID,         setQuestionID       ]  = useState(question ? question.id + 1 : 0);\r\n\r\n  // *Answers Table*\r\n  const [ possibleAnswers,    setPossibleAnswers  ]  = useState(\r\n    question ? question.answers : [\r\n      { \"id\": 0, \"answer\": \"\", \"correct\": false},\r\n      { \"id\": 1, \"answer\": \"\", \"correct\": false},\r\n      { \"id\": 2, \"answer\": \"\", \"correct\": false}\r\n    ]\r\n  );\r\n  const [ answerID,           setAnswerID         ]  = useState(possibleAnswers ? possibleAnswers[possibleAnswers.length - 1].id + 1: 0);\r\n  const [ answersLayout,      setAnswersLayout    ]  = useState(\"vertical\");\r\n\r\n  // *Tags Table*\r\n  const [ tags,               setTags             ]  = useState(question ? question.tags : \"\");\r\n\r\n  // -----------------------------------------------------------------\r\n\r\n  const selectedTags = tags => console.log(tags);\r\n\r\n  const initialState = () => {\r\n    console.log(\"returning to initial state\");\r\n    setType(questionTypes ? questionTypes[0] : \"\");\r\n    setQuestionHeader(\"\");\r\n    setQuestionText(\"\");\r\n    setQuestionID(questionID + 1);\r\n\r\n    setPossibleAnswers([\r\n      { \"id\": 0, \"answer\": \"\", \"correct\": false},\r\n      { \"id\": 1, \"answer\": \"\", \"correct\": false},\r\n      { \"id\": 2, \"answer\": \"\", \"correct\": false}\r\n    ]);\r\n\r\n    setAnswerID(possibleAnswers ? possibleAnswers[possibleAnswers.length - 1].id + 1: 0);\r\n    setTags(\"\");\r\n    setAnswersLayout(\"horizontal\");\r\n  }\r\n  \r\n  const addAnswer = (event) => {  \r\n    event.preventDefault();\r\n    let newPossibleAnswers = possibleAnswers;\r\n    newPossibleAnswers.push({ \"id\": answerID, \"answer\": \"\", correct: false });\r\n    setPossibleAnswers(newPossibleAnswers);\r\n    setAnswerID(answerID + 1);\r\n  }\r\n\r\n  const removeAnswer = (event, id) => { \r\n    event.preventDefault(); \r\n    console.log(\"remove answer id \" + id)\r\n    setPossibleAnswers(possibleAnswers.filter((answer) => answer.id !== id));\r\n  }\r\n  \r\n  const history = useHistory();\r\n  const back = () => {\r\n      history.goBack();\r\n  }\r\n\r\n  const show = () => {\r\n    \r\n  }\r\n\r\n  const handlePossibleAnswersChange = () => {\r\n    // console.log(\"possible answers changed\")\r\n    let correctAnswer_Counter = 0;\r\n    (possibleAnswers && possibleAnswers.map((answer) => {\r\n      let radio = document.getElementById(`radio_${answer.id}`);\r\n      radio.checked = answer.correct;\r\n      if (answer.correct === true) {\r\n        correctAnswer_Counter++;\r\n      }\r\n    }));\r\n\r\n    if (correctAnswer_Counter === 0) {\r\n      setType(\"\");\r\n      // console.log(\"0 correct answers\")\r\n    } else if (correctAnswer_Counter === 1) {\r\n      setType(questionTypes[0].type);\r\n      // console.log(\"1 correct answers\")\r\n    } else {\r\n      setType(questionTypes[1].type)\r\n      // console.log(\"2+ correct answers\")\r\n    }\r\n  }\r\n\r\n  const handleTagsChange = () => {\r\n    \r\n  }\r\n\r\n  const handleAnswerClick = (id) => {\r\n    console.log(\"handle answer click\");\r\n    let newPossibleAnswers = possibleAnswers;\r\n    newPossibleAnswers.filter((answer) => answer.id === id).map((answer) => {\r\n      answer.correct = !answer.correct;\r\n      console.log(`answer_${id} state - ${answer.correct}`);\r\n      // document.getElementById(`label_${id}`).text = {answer.correct === \"\"}\r\n      return answer;\r\n    });\r\n    setPossibleAnswers(newPossibleAnswers);\r\n    handlePossibleAnswersChange();\r\n  }\r\n\r\n  const handleLayoutChange = (e) => {\r\n    if (e.target.checked === true) {\r\n      setAnswersLayout(e.target.id);\r\n    }\r\n  }\r\n\r\n  const handleAnswerChanged = (id, a) => {\r\n    console.log(\"handle answer changed\");\r\n    let newPossibleAnswers = possibleAnswers;\r\n    newPossibleAnswers.filter((answer) => answer.id === id).map((answer) => {\r\n      answer.answer = a;\r\n      return answer;\r\n    });\r\n    setPossibleAnswers(newPossibleAnswers);\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    saveQuestion();\r\n  }\r\n\r\n  const saveQuestion = () => {\r\n    fetch('http://localhost:8000/questions', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n        id: questionID,\r\n        tags: tags,\r\n        last_update: Date.now,\r\n        type: type,\r\n        title: questionHeader,\r\n        text: questionText,\r\n        difficulty: (question && question.difficulty ? question.difficulty : \"low\"),\r\n        answers: possibleAnswers,\r\n        num_of_tests: (question && question.num_of_tests ? question.num_of_tests : 0),\r\n        answersLayout: answersLayout\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => { \r\n        console.log(data); \r\n        initialState(); \r\n      })\r\n      .catch((err) => console.log(`error ${err}`))\r\n  }\r\n\r\n  const fetchQuestions = () => {\r\n    fetch(\"http://localhost:8000/questions\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setQuestions(data); \r\n      setQuestionID(questionID ? questionID : data[data.length - 1].id + 1); \r\n      console.log(`Current questionID: ${data[data.length - 1].id + 1}`); \r\n    })\r\n    .catch((err) => console.log('error fetching questions:' + err))\r\n  }\r\n\r\n  const fetchQuestionTypes = () => {\r\n    fetch(\"http://localhost:8000/questionTypes\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setQuestionTypes(data); \r\n      setType(type ? type : data[0].type); \r\n    })\r\n    .catch((err) => console.log('error fetching question types:' + err))\r\n  }\r\n\r\n  // Meant to set the type according to the amount of the correct answers\r\n  useEffect(() => {\r\n    handlePossibleAnswersChange();\r\n  }, [possibleAnswers])\r\n\r\n  // Meant for setting the title of the document on the first render\r\n  useEffect(() => {\r\n    document.title = `${question === undefined ? \"Create\" : \"Edit\"} Question`;\r\n  }, [question])\r\n\r\n    // Meant for fetching the necessary information on first render\r\n  useEffect(() => {\r\n    let isMounted = true;           // note mutable flag\r\n\r\n    if (isMounted) {                // add conditional check\r\n      fetchQuestions();\r\n      fetchQuestionTypes();\r\n    }\r\n\r\n    return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"create_edit_question noselect\">\r\n      <h1 className=\"page__header\"> { question === undefined ? \"Create\" : \"Edit\" } Question </h1>\r\n      <form className=\"new_question__form\" onSubmit={handleSubmit}>\r\n\r\n        <div className=\"content__section\">\r\n          <table id=\"question__table\">\r\n            <tbody>\r\n              <tr>\r\n                <td> <label> Field: </label> </td>\r\n                <td> <label id=\"field__label\"> { field === undefined ? \"undefined\" : field } </label> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                  <td> <label> Question type: </label> </td>\r\n                  <td> <select id=\"question_type__select\" value={type} disabled>\r\n                          {questionTypes && questionTypes.map((questionType) => (\r\n                            <option key={questionType.id} value={questionType.type}> {questionType.type} </option>\r\n                          ))}\r\n                        </select> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td> <label> Question header: </label> </td>\r\n                <td> <input id=\"question_header__input\"      value={questionHeader} type=\"text\" placeholder=\"Enter your question here\"  onChange={(e) => setQuestionHeader(e.target.value)} required/> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td> <label> Question additional information: </label> </td>\r\n                <td> <input id=\"question_information__input\" value={questionText}   type=\"text\" placeholder=\"Type something\"            onChange={(e) => setQuestionText(e.target.value)}    required/> </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div className=\"content__section\">\r\n          <table id=\"answers__table\">\r\n            <tbody>\r\n\r\n              {possibleAnswers && possibleAnswers.map((answer) => (\r\n              <tr key={answer.id}>\r\n                <td> { answer.id === 0 && <label> Possible answers: </label> } </td>\r\n                <td className=\"answer__td\"> \r\n                  <button type=\"\" onClick={(e) => removeAnswer(e, answer.id)} > X </button>\r\n                  <input   id={`answer_${answer.id}` } name=\"answer\" type=\"text\" onChange={(e) => handleAnswerChanged(answer.id, e.target.value)} placeholder={`Answer #${answer.id}`} required/> \r\n                  <input   id={`radio_${answer.id}`  } name={questionTypes ? (type === questionTypes[0] ? type : \"\") : \"default\"} type=\"radio\" onClick={(e) => handleAnswerClick(answer.id)} /> <label id={`label_${answer.id}`} htmlFor={`answer_${answer.id}`}   >  {answer.correct === true ? \"Correct\" : \"Incorrect\"}  </label>\r\n                </td>\r\n              </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <div className=\"answer_layout__container\">\r\n            <label name=\"layout__label\"> Answers layout: </label>\r\n            <input id=\"vertical\"    type=\"radio\"  name=\"answer_layout\"  defaultChecked onChange={(e) => handleLayoutChange(e)} />    <label htmlFor=\"vertical\"   >  Vertical   </label>\r\n            <input id=\"horizontal\"  type=\"radio\"  name=\"answer_layout\"                 onChange={(e) => handleLayoutChange(e)} />    <label htmlFor=\"horizontal\" >  Horizontal </label>\r\n            <button onClick={(e) => addAnswer(e)}> Add an Answer </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"tags__container\">\r\n          <table id=\"tags__table\">\r\n            <tbody>\r\n              <tr>\r\n                <td> <label> Tags: </label> </td>\r\n                <td> <TagsInput selectedTags={tags} handleTagsChange={handleTagsChange}/> </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div id=\"buttons__container\">\r\n          <button className=\"regular__button\" onClick={() => back() }> {`<<` } Back  </button>\r\n          <button className=\"regular__button\" onClick={() => show() }>  Show         </button>\r\n          <button className=\"regular__button\" type=\"submit\"          >  Save {`>>` } </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};","import React, { useState, useEffect } from 'react';\r\nimport        { Button }              from '../../../../../shared/Button/Button';\r\nimport        { HashLink as Link }    from 'react-router-hash-link';\r\nimport        { useHistory }          from 'react-router-dom';\r\nimport styles                         from './CreateEditTest.css';\r\n\r\nexport const CreateEditTest = ({ field, test }) => {\r\n\r\n  // ----------------------------- Fetch Info Hooks -----------------------------\r\n\r\n  const [ testTypes,                  setTestTypes              ] = useState(null);\r\n  const [ certificateTemplates,       setCertificateTemplates   ] = useState(null);\r\n  const [ languages,                  setLanguages              ] = useState(null);\r\n\r\n  // ----------------------------- Top Content Hooks -----------------------------\r\n\r\n  // *General Details Table*\r\n  const [ language,                   setLanguage               ] = useState(test ? test.language : \"\");\r\n  const [ testType,                   setTestType               ] = useState(test ? test.testType : \"\");\r\n  const [ testName,                   setTestName               ] = useState(test ? test.testName : \"\");\r\n  const [ passingGrade,               setPassingGrade           ] = useState(test ? test.passingGrade : \"\");\r\n  const [ header,                     setHeader                 ] = useState(test ? test.header : \"\");\r\n  const [ messageSuccess,             setMessageSuccess         ] = useState(test ? test.messageSuccess : \"\");\r\n  const [ messageFailure,             setMessageFailure         ] = useState(test ? test.messageFailure : \"\");\r\n  const [ certificateTemplate,        setCertificateTemplate    ] = useState(test ? test.certificateTemplate : \"\");\r\n\r\n  // *Email Delivery Table*         \r\n  // Status Container          \r\n  const [ status,                     setStatus                 ] = useState(\"OFF\");\r\n  const [ from,                       setFrom                   ] = useState(test ? test.from : \"\");\r\n  const [ cc,                         setCC                     ] = useState(test ? test.cc : \"\");\r\n  const [ bcc,                        setBCC                    ] = useState(test ? test.bcc : \"\");    \r\n\r\n  // Passing the Test Container\r\n  const [ passingMessageSubject,      setPassingMessageSubject  ] = useState(test ? test.passingSubject : \"\");\r\n  const [ passingMessageBody,         setPassingMessageBody     ] = useState(test ? test.passingBody : \"\");    \r\n\r\n  // Failing the Test Container\r\n  const [ failingMessageSubject,      setFailingMessageSubject  ] = useState(test ? test.failingSubject : \"\");   \r\n  const [ failingMessageBody,         setFailingMessageBody     ] = useState(test ? test.failingBody : \"\");    \r\n\r\n  // --------------------------- Bottom Content Hooks ---------------------------\r\n\r\n  // *Filter Container*\r\n  const [ filter,                     setFilter                 ] = useState(false);\r\n  const [ filterContent,              setFilterContent          ] = useState(\"\");\r\n\r\n  // *Questions Table\r\n  const [ questionsAmount,            setQuestionsAmount        ] = useState(test ? test.questionAmount : 0);    \r\n\r\n  // ----------------------------------------------------------------------------\r\n\r\n  const handleStatus = (value) => {\r\n    setFrom(value);\r\n  }\r\n\r\n  const history = useHistory();\r\n\r\n  const back = () => {\r\n      history.goBack();\r\n  }\r\n\r\n  const show = () => {\r\n    \r\n  }\r\n\r\n  const handleSubmit = (event) => {  \r\n    event.preventDefault();\r\n  }\r\n\r\n  const saveTest = () => {\r\n    fetch('http://localhost:8000/tests', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n        // id: questionID,\r\n        // tags: tags,\r\n        // last_update: Date.now,\r\n        // type: type,\r\n        // title: questionHeader,\r\n        // text: questionText,\r\n        // difficulty: (question && question.difficulty ? question.difficulty : \"low\"),\r\n        // answers: possibleAnswers,\r\n        // num_of_tests: (question && question.num_of_tests ? question.num_of_tests : 0),\r\n        // answersLayout: answersLayout\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => { \r\n        console.log(data); \r\n        // initialState(); \r\n      })\r\n      .catch((err) => console.log(`error ${err}`))\r\n  }\r\n\r\n  const fetchLanguages = () => {\r\n    fetch(\"http://localhost:8000/languages\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setLanguages(data); \r\n      setLanguage(language ? language : data[0].type); \r\n    })\r\n    .catch((err) => console.log('error fetching languages:' + err))\r\n  }\r\n\r\n  const fetchTestTypes = () => {\r\n    fetch(\"http://localhost:8000/testTypes\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setTestTypes(data); \r\n      setTestType(testType ? testType : data[0].type); \r\n    })\r\n    .catch((err) => console.log('error fetching test types:' + err))\r\n  }\r\n\r\n  const fetchCertificateTemplates = () => {\r\n    fetch(\"http://localhost:8000/certificateTemplates\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setCertificateTemplates(data); \r\n      setCertificateTemplate(certificateTemplate ? certificateTemplate : data[0].template); \r\n    })\r\n    .catch((err) => console.log('error fetching certificate templates:' + err))\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = `${test === undefined ? \"Create\" : \"Edit\"} Test`;\r\n  }, [test])\r\n\r\n    // Meant for fetching the necessary information on first render\r\n  useEffect(() => {\r\n    let isMounted = true;           // note mutable flag\r\n\r\n    if (isMounted) {                // add conditional check\r\n      fetchLanguages();\r\n      fetchTestTypes();\r\n      fetchCertificateTemplates();\r\n    }\r\n\r\n    return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"create_edit_test noselect\">\r\n      <h1> {test === undefined ? \"Create\" : \"Edit\"} Test </h1> {/* className=\"page__header\" */}\r\n      <form className=\"new_test__form\" onSubmit={handleSubmit}>\r\n        <div id=\"top_content__container\">\r\n          \r\n          {/* <h2 className=\"section__headers\"> General Test Details </h2> */}\r\n          <div className=\"content__section\">\r\n            <table id=\"general_details__table\">\r\n              <tbody>\r\n                <tr className=\"space_under header_row border_bottom\">\r\n                  <th colspan=\"2\"> General Test Details </th>\r\n                </tr>\r\n                <tr>\r\n                  <td> <label> Field of Study: </label> </td>\r\n                  <td> <label id=\"field__label\"> {field ? field : \"undefined\"} </label> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Language: </label> </td>\r\n                  <td>  <select id=\"language__select\" onChange={(e) => setLanguage (e.target.value)}>\r\n                          {languages && languages.map((language) => (\r\n                            <option key={language.id} value={language.name}> {language.name} </option>\r\n                          ))} \r\n                        </select> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Test Type: </label> </td>\r\n                  <td> <select id=\"test_type__select\" onChange={(e) => setTestType (e.target.value)}>\r\n                          {testTypes && testTypes.map((testType) => (\r\n                            <option key={testType.id} value={testType.type}> {testType.type} </option>\r\n                          ))}\r\n                        </select> </td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td> <label> Test Name:                                                                                                                                                  </label> </td>\r\n                  <td> <input id=\"test_name__input\"       type=\"text\"     placeholder=\"Type test name\"      value={testName}        onChange={(e) => setTestName     (e.target.value)}   required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Passing Grade:                                                                                                                                              </label> </td>\r\n                  <td> <input id=\"passing_grade__input\"   type=\"text\"     placeholder=\"Grade\"               value={passingGrade}    onChange={(e) => setPassingGrade (e.target.value)}   required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Show correct answers after submission:                                                                                                                      </label> </td>\r\n                  <td> <input id=\"show_answers__checkbox\" type=\"checkbox\" defaultChecked                                                                                                 required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Message header:                                                                                                                                             </label> </td>\r\n                  <td> <input id=\"message_header__input\"  type=\"text\"     placeholder=\"Type something\"      value={header}   onChange={(e) => setHeader  (e.target.value)} required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Message to show on success:                                                                                                                                 </label> </td>\r\n                  <td> <input id=\"message_success__input\" type=\"text\"     placeholder=\"Type something\"      value={messageSuccess}  onChange={(e) => setMessageSuccess (e.target.value)} required/> </td>\r\n                </tr>   \r\n\r\n                <tr>    \r\n                  <td> <label> Message to show on failure:                                                                                                                                 </label> </td>\r\n                  <td> <input id=\"message_failure__input\" type=\"text\"     placeholder=\"Type something\"      value={messageFailure}  onChange={(e) => setMessageFailure (e.target.value)} required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Certificate Templates: </label> </td>\r\n                  <td> <select id=\"certificate__select\" onChange={(e) => setCertificateTemplate (e.target.value)}>\r\n                          {certificateTemplates && certificateTemplates.map((certificate) => (\r\n                            <option key={certificate.id} value={certificate.template}> {certificate.template} </option>\r\n                          ))}\r\n                        </select> </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div className=\"content__section\">\r\n            {/* <h2 className=\"section__headers\"> Email Delivery Upon Test Completion </h2> */}\r\n            <table id=\"email_delivery__table\">\r\n              <tbody>\r\n                <tr className=\"space_under header_row border_bottom\">\r\n                  <th colspan=\"2\"> Email Delivery Upon Test Completion </th>\r\n                </tr>\r\n                <tr>\r\n                  <td> <label> Current Status:                                                                                                                                             </label> </td>\r\n                  <td> <div id=\"sending_emails__container\">      \r\n                          <label id=\"sending_emails__label\" > Emails {status === \"OFF\" ? `won't` : \"will\"} be sent upon test completion.                                                   </label>\r\n                          <label                    > to turn {status === \"OFF\" ? \"ON\" : \"OFF\"} email delivery, {status === \"OFF\" ? \"fill out\" : \"reset\"} the mandatory                    </label>\r\n                          <label                    > fields in this section:                                                                                                              </label>\r\n                        </div> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> From: </label> </td>\r\n                  <td> <input id=\"from__input\"  type=\"text\" value={from}  onChange={(e) => handleStatus(e.target.value)}                                                                         /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> CC: </label> </td>      \r\n                  <td> <input id=\"cc__input\"    type=\"text\" value={cc}    onChange={(e) => setCC(e.target.value)}   disabled={from ? false : true}                                               /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> BCC: </label> </td>       \r\n                  <td> <input id=\"bcc__input\"   type=\"text\" value={bcc}   onChange={(e) => setBCC(e.target.value)}  disabled={from ? false : true}                                               /> </td>\r\n                </tr>      \r\n              </tbody>\r\n            </table>       \r\n         \r\n         \r\n            <table id=\"passing_test__table\">   \r\n              <tbody>\r\n                <tr className=\"space_under sub_header_row border_bottom\">\r\n                  <th colspan=\"2\"> Passing the test </th>\r\n                </tr>\r\n                <tr>       \r\n                  <td> <label> Message subject:                                                                                                                                            </label> </td>\r\n                  <td> <input id=\"message_subject__input\" type=\"text\" value={passingMessageSubject} onChange={(e) => setPassingMessageSubject(e.target.value)}  disabled={from ? false : true}   /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> Message body:                                                                                                                                               </label> </td>\r\n                  <td> <input id=\"message_body__input\"    type=\"text\" value={passingMessageBody}    onChange={(e) => setPassingMessageBody(e.target.value)} disabled={from ? false : true}       /> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td>\r\n                    <label style={{fontWeight: 'bold'}}> Predefined Templated - Click to copy to clipboard </label>\r\n                    <label> NEED TO ADD TEMPLATES HERE </label>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n\r\n          <table id=\"failing_test__table\">\r\n            <tbody>\r\n              <tr className=\"space_under sub_header_row border_bottom\">\r\n                  <th colspan=\"2\"> Failing the test </th>\r\n                </tr>\r\n              <tr>\r\n                <td> <label> Message subject:                                                                                                                                            </label> </td>\r\n                <td> <input id=\"message_subject__input\" type=\"text\" value={failingMessageSubject} onChange={(e) => setFailingMessageSubject(e.target.value)}  disabled={from ? false : true}   /> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td> <label> Message body:                                                                                                                                               </label> </td>\r\n                <td> <input id=\"message_body__input\"    type=\"text\" value={failingMessageBody}    onChange={(e) => setFailingMessageBody(e.target.value)} disabled={from ? false : true}       /> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  <label style={{fontWeight: 'bold'}}> Predefined Templated - Click to copy to clipboard </label>\r\n                  <label> NEED TO ADD TEMPLATES HERE </label>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div id=\"bottom_content__container\">\r\n          <div id=\"questions__container\">\r\n            <h2 className=\"section__headers\"> Questions </h2>\r\n            <div id=\"explanation\">\r\n              <label style={{fontWeight: 'bold'}}> Note: This test is set to be a {`'${testType}'`} test, which means:</label>\r\n              \r\n              {/* INSTEAD OF THIS: */}\r\n              <label className=\"sub__label\"> All the questions that you select here will be included in the test. </label>\r\n              <label className=\"sub__label\"> All respondents will receive the SAME set of questions presented in a different order. </label>\r\n\r\n              {/* NEED TO CHANGE THE 'LINK' TO SOMETHING ELSE - SOMETHING THAT WILL REFER THE USER BACK TO THE TEST DETAILS  */}\r\n              <label className=\"sub__label\"> *TIP: if you want each respondent to receive a different set of questions, change the test type to 'Random' in the <Link to={\"/admin/\" + test === undefined ? \"create\" : \"edit\" + \"-test#test_type__select\"} >Test Details</Link> section.* </label>\r\n\r\n              {/* FOR EVERY LABEL OR SOMETHING FROM THE DB THAT CONTAINS THE TEST TYPES, I WILL NEED TO DO THIS */}\r\n              {/* <label className=\"sub__label\"> {TestType.child.text} </label> */}\r\n            </div>\r\n\r\n            <div id=\"question_table__container\">\r\n              <label style={{fontWeight: 'bold', color: 'orange'}}> Select the questions that you want to include in the test </label>\r\n              <label> You can use the tag filter to narrow down the list to a specific subject - Don't worry, filtering won't affect your previous selections. </label>\r\n\r\n              <div id=\"filter__container\">\r\n                <label style={{fontWeight: 'bold'}}> Filter by tags or content </label>\r\n                <input id=\"tag_content__input\" type=\"text\"\r\n                            onChange={(e) => { setFilterContent(e.target.value); filterContent === \"\" ? setFilter(false) : setFilter(true)} }\r\n                            placeholder='Enter a list of keywords separated by commas'/>\r\n                    <label id=\"filter_state\"> Filter is {filter === false ? \"OFF\" : \"ON\"}  </label>\r\n              </div>\r\n\r\n              <table id=\"questions__table\">\r\n                <tbody>\r\n                  <tr>\r\n                    <th> Currently showing {questionsAmount} questions ({questionsAmount} selected) </th>\r\n                  </tr>\r\n                  <tr>\r\n                    {/* CHANGE THIS SO EVERY QUESTION THAT MATCHES THE FILTER WILL BE PLACED IN A NEW TABLE ROW, AND THAT THE SHOW BUTTON CAN SHOW THE QUESTIONS CONTENT\r\n                    PLS PAY ATTENTION THAT THIS KIND OF OPEN MENU CAN BE CREATED AND RE-USED FOR THE 'TEST REPORT' PAGE AS WELL */}\r\n\r\n                    <td>\r\n                      <label> What is the DOM? </label>\r\n                      <label> *IN SMALL TEXT* Javascript | Advanced</label>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n              <div id=\"table_buttons__container\">\r\n                <label> Showing 1-{`AMOUNT OF QUESTIONS`} of {`AMOUNT OF QUESTIONS`} filtered questions</label>\r\n                <button> Next 2 {`>>`} </button>\r\n                <button> Show only Selected </button>\r\n                <button> Show All {`AMOUNT OF QUESTIONS`} questions </button>\r\n              </div>\r\n            </div>\r\n\r\n            <label> The test will include {`AMOUNT OF QUESTIONS`} in total </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"buttons__container\">\r\n            <button className=\"regular__button\" onClick={() => back() }> {`<<` } Back  </button>\r\n            <button className=\"regular__button\" onClick={() => show() }>  Show         </button>\r\n            <button className=\"regular__button\" type=\"submit\"          >  Save {`>>` } </button>\r\n          </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { SummaryTable } from '../../../../../Admin/SummaryTable/SummaryTable';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport styles from './TestReport.css'\r\n\r\nexport const TestReport = () => {\r\n\r\n    // ----------------------------- Fetch Info Hooks ----------------------------\r\n\r\n    const [averageGrade, setAverageGrade] = useState(0);\r\n\r\n    // ------------------------------ Summary Hooks ------------------------------\r\n\r\n    const [test, setTest] = useState(null);\r\n    const [field, setField] = useState(\"\");\r\n    const [dateRange, setDateRange] = useState(\"\");\r\n    const [passingGrade, setPassingGrade] = useState(0);\r\n    const [questions, setQuestions] = useState([]);\r\n    // const [ numOfQuestions,      setNumOfQuestions      ]       = useState(0);\r\n\r\n    // ------------------------------ Grades Hooks -------------------------------\r\n\r\n    const [respondentChosen, setRespondentChosen] = useState(false);\r\n\r\n    // ---------------------------- Statistics Hooks -----------------------------\r\n\r\n    const [filterContent, setFilterContent] = useState(\"\");\r\n\r\n    // ---------------------------------------------------------------------------\r\n\r\n    const location = useLocation(); // for location state\r\n\r\n    const history = useHistory();\r\n    const back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const expandAll = () => {\r\n\r\n    }\r\n\r\n    const exportToExecl = () => {\r\n\r\n    }\r\n\r\n    const printReport = () => {\r\n\r\n    }\r\n\r\n    const countNumberOfQuestions = () => {\r\n        let counter = 0;\r\n        if (questions) {\r\n            questions.map(() => counter++);\r\n        }\r\n\r\n        return counter;\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = \"Test Report\";\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n\r\n        if (isMounted) {                // add conditional check\r\n\r\n        }\r\n\r\n        console.log(location.state.field)  // for location state\r\n        console.log(location.state.test)  // for location state\r\n        console.log(location.state.dateRange)\r\n\r\n        setField(location.state.field);\r\n        setTest(location.state.test)\r\n        setDateRange(location.state.dateRange);\r\n\r\n        countNumberOfQuestions();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"test_report noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1> Test result for {field} </h1>\r\n            </div>\r\n\r\n            <div id=\"content__container\">\r\n                <div id=\"summary_tables__container\">\r\n                    <table id=\"test__table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th> Summary </th>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>\r\n                                    <label>                                     Test name:                            </label> \r\n                                    <label key={test && test.testName}>        {test && test.testName}                </label> \r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr> \r\n                                <td> \r\n                                    <label>                                     Test ID:                                </label> \r\n                                    <label key={test && test.testID}>          {test && test.testID}                    </label> \r\n                                </td> \r\n                            </tr>\r\n                            <tr> \r\n                                <td> \r\n                                    <label>                                     Test code:                              </label> \r\n                                    <label key={test && test.testCode}>        {test && test.testCode}                  </label> \r\n                                </td> \r\n                            </tr>\r\n                            <tr> \r\n                                <td> \r\n                                    <label>                                     Test type:                              </label> \r\n                                    <label key={test && test.testType}>        {test && test.testType}                  </label> \r\n                                </td> \r\n                            </tr>\r\n                            <tr> \r\n                                <td> \r\n                                    <label>                                     Number of questions:                    </label> \r\n                                    <label key={test && test.questions}>       {countNumberOfQuestions()}               </label> \r\n                                </td> \r\n                            </tr>\r\n                            <tr> \r\n                                <td> \r\n                                    <label>                                     Passing grade:                          </label>\r\n                                    <label key={test && test.passingGrade}>    {test && test.passingGrade}              </label> \r\n                                </td> \r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <table id=\"additional_info__table\">\r\n                        <tbody>\r\n                            <tr> \r\n                                <td> \r\n                                    <label>                                     Date range:                             </label>\r\n                                    <label key={dateRange}>                    {dateRange}                              </label> \r\n                                </td> \r\n                            </tr>\r\n                            <tr> \r\n                                <td> \r\n                                    <label>                                     Date range:                             </label>\r\n                                    <label key={dateRange}>                    {dateRange}                              </label> \r\n                                </td> \r\n                            </tr>\r\n                            <tr > \r\n                                <td> \r\n                                    <label>                                     Date range:                             </label>\r\n                                    <label key={dateRange}>                    {dateRange}                              </label> \r\n                                </td> \r\n                            </tr>\r\n                            <tr> \r\n                                <td> \r\n                                    <label>                                     Date range:                             </label>\r\n                                    <label key={dateRange}>                    {dateRange}                              </label> \r\n                                </td> \r\n                            </tr>\r\n                            <tr> \r\n                                <td> \r\n                                    <label>                                     Date range:                             </label>\r\n                                    <label key={dateRange}>                    {dateRange}                              </label> \r\n                                </td> \r\n                            </tr>\r\n                            <tr> \r\n                                <td> \r\n                                    <label>                                     Date range:                             </label>\r\n                                    <label key={dateRange}>                    {dateRange}                              </label> \r\n                                </td> \r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div id=\"grades__container\">\r\n                    <table id=\"grades__table\">\r\n                        <tbody>\r\n                            <tr className=\"header_row space_under border_bottom\">\r\n                                <th>        ID                     </th>\r\n                                <th>        Question               </th>\r\n                                <th>        Answered Correctly?    </th>\r\n                                <th>        Date Answered          </th>\r\n                            </tr>\r\n                            {/* {{AdminMenu.map(({ title, content }) => (                              <<-------------------    EXAMPLE\r\n                                            <Accordion title={title} content={content} />\r\n                                        ))}}\r\n                            <tr >                                                                 <<-------------------    EXAMPLE 2  \r\n                                { {children.map(({ ID, Link, name, update, type, version }) => (\r\n                                    \r\n                                <td> {ID} </td>\r\n                                <td> {Link} </td>\r\n                                <td> {name} </td>\r\n                                <td> {update} </td>\r\n                                <td> {type} </td>\r\n                                <td> {version} </td>\r\n                                <td> </td>\r\n                                ))}}\r\n                            </tr> */}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <div id=\"buttons__container\">\r\n                        <button className=\"regular__button\" onClick={() => back()}>  {`<<`} Back    </button>\r\n                        <button className=\"regular__button\" onClick={() => exportToExecl()}>  Export To Excel </button>\r\n                        <button className=\"regular__button\" onClick={() => printReport()}>  Print Report    </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Button } from '../../../shared/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './SignUp.css';\r\n\r\nexport default function SignUp() {\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = () => {\r\n    console.log(\"Submit\");\r\n  }\r\n\r\n  useEffect(() => {\r\n      document.title = \"Sign up\";\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"sign_up noselect\">\r\n      <h1 className=\"page__header\"> Sign-up </h1>\r\n      <form className=\"sign_up__form\">\r\n        <div className=\"form_content__container\">\r\n          <input type=\"name\"      placeholder=\"Name\"      value={name}      onChange={(e) => setName(e.target.value)}     />\r\n          <input type=\"email\"     placeholder=\"Email\"     value={email}     onChange={(e) => setEmail(e.target.value)}    />\r\n          <input type=\"password\"  placeholder=\"Password\"  value={password}  onChange={(e) => setPassword(e.target.value)} />\r\n          <button id=\"submit__button\" type=\"submit\" onClick={handleSubmit}> Submit </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};","import React          from \"react\";\r\nimport Navbar         from \"./components/shared/Navbar/Navbar\";\r\nimport\r\n{\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect \r\n}                     from 'react-router-dom';\r\nimport styles         from './App.css';\r\n\r\n// ---------------------------------------------- Shared pages ----------------------------------------------\r\nimport Home                       from './components/pages/shared/Home/Home';\r\nimport About                      from './components/pages/shared/About/About';\r\nimport Login                      from \"./components/pages/shared/Login/Login\";\r\nimport ForgotPassword             from \"./components/pages/shared/ForgotPassword/ForgotPassword\";\r\nimport Error404                   from \"./components/pages/shared/Error404/Error404\";\r\nimport Footer                     from \"./components/shared/Footer/Footer\";\r\n\r\n// ---------------------------------------------- Admin pages ----------------------------------------------\r\nimport MainPage                   from \"./components/pages/Admin/MainPage/MainPage\";\r\nimport { CreateEditQuestion     } from \"./components/pages/Admin/MainPage/ManageQuestions/CreateEditQuestion/CreateEditQuestion\";\r\nimport { CreateEditTest         } from \"./components/pages/Admin/MainPage/ManageTests/CreateEditTest/CreateEditTest\";\r\nimport { ManageQuestions        } from \"./components/pages/Admin/MainPage/ManageQuestions/ManageQuestions\";\r\nimport { ManageTests            } from \"./components/pages/Admin/MainPage/ManageTests/ManageTests\";\r\nimport { Reports                } from \"./components/pages/Admin/MainPage/Reports/Reports\";\r\nimport { ReportByRespondentName } from \"./components/pages/Admin/MainPage/ReportByRespondentName/ReportByRespondentName\";\r\nimport { TestReport }             from \"./components/pages/Admin/MainPage/Reports/TestReport/TestReport\";\r\n\r\n// --------------------------------------------- Student pages ---------------------------------------------\r\nimport SignUp                     from \"./components/pages/Student/SignUp/SignUp\";\r\n\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n      <>\r\n        <Router>\r\n          <Navbar/>\r\n          <Switch>\r\n\r\n            {/* Shared */}\r\n            <Route path='/' exact                     component={ Home            }   />\r\n            <Route path='/home'                       component={ Home            }   />\r\n            <Route path='/about'                      component={ About           }   />\r\n            <Route path='/error404'                   component={ Error404        }   />\r\n            <Route path='/login'                      render={ (props) => (<Login               {...props} isAuthed={false} />) }   />\r\n            <Route path='/sign-up'                    render={ (props) => (<SignUp              {...props} isAuthed={false} />) }   />\r\n            <Route path='/forgot-password'            render={ (props) => (<ForgotPassword      {...props} isAuthed={false} />) }   />\r\n\r\n            {/* Admin */}\r\n            <Route path='/admin/main-page'            component={MainPage}            />\r\n            <Route path='/admin/create-question'      render={ (props) => (<CreateEditQuestion      {...props} isAuthed={true} isAdmin={true} />) }   />\r\n            <Route path='/admin/edit-question'        render={ (props) => (<CreateEditQuestion      {...props} isAuthed={true} isAdmin={true} />) }   />\r\n            <Route path='/admin/create-test'          render={ (props) => (<CreateEditTest          {...props} isAuthed={true} isAdmin={true} />) }   />\r\n            <Route path='/admin/edit-test'            render={ (props) => (<CreateEditTest          {...props} isAuthed={true} isAdmin={true} />) }   />\r\n            <Route path='/admin/manage-questions'     render={ (props) => (<ManageQuestions         {...props} isAuthed={true} isAdmin={true} />) }   />\r\n            <Route path='/admin/manage-tests'         render={ (props) => (<ManageTests             {...props} isAuthed={true} isAdmin={true} />) }   />\r\n            <Route path='/admin/reports'              render={ (props) => (<Reports                 {...props} isAuthed={true} isAdmin={true} />) }   />\r\n            <Route path='/admin/report-by-name'       render={ (props) => (<ReportByRespondentName  {...props} isAuthed={true} isAdmin={true} />) }   />\r\n            <Route path='/admin/test-report'          render={ (props) => (<TestReport              {...props} isAuthed={true} isAdmin={true} />) }   />\r\n            {/* <Route path='/admin/create-question'  component={CreateEditQuestion}      />\r\n            <Route path='/admin/edit-question'        component={CreateEditQuestion}      />\r\n            <Route path='/admin/create-test'          component={CreateEditTest}          />\r\n            <Route path='/admin/edit-test'            component={CreateEditTest}          />\r\n            <Route path='/admin/manage-questions'     component={ManageQuestions}         />\r\n            <Route path='/admin/manage-tests'         component={ManageTests}             />\r\n            <Route path='/admin/reports'              component={Reports}                 />\r\n            <Route path='/admin/report-by-name'       component={ReportByRespondentName}  /> */}\r\n            {/* <Route path='/admin/test-report'      component={TestReport}              />       ROUTE FOR THE TEST REPORT ITSELF */}\r\n            \r\n            <Redirect to=\"/error404\"/>\r\n\r\n          </Switch>\r\n        </Router>\r\n        <Footer logo=\"OIES\" rights=\"OI Exam System © 2021\"/>\r\n      </>\r\n  )\r\n};\r\n\r\nexport const Field = () => {\r\n\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for Testple: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}