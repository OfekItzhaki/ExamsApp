[{"C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\index.js":"1","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\App.js":"2","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\Footer\\Footer.js":"3","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\Navbar\\Navbar.js":"4","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\Login\\Login.js":"5","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\Home\\Home.js":"6","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\ForgotPassword\\ForgotPassword.js":"7","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\Error404\\Error404.js":"8","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\About\\About.js":"9","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\SignUp\\SignUp.js":"10","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\Button\\Button.js":"11","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\HeroSection\\HeroSection.js":"12","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\MainPage.js":"13","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\Collapsible\\Collapsible.js":"14","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\Accordion\\Accordion.js":"15","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\utils\\content.js":"16","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\Admin\\ManageQuestions\\ManageQuestions.js":"17","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\Admin\\ManageTests\\ManageTests.js":"18","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\Admin\\TestReport\\TestReport.js":"19","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\index.js":"20","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\App.js":"21","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\shared\\Home\\Home.js":"22","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\shared\\Footer\\Footer.js":"23","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\shared\\Navbar\\Navbar.js":"24","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\shared\\Login\\Login.js":"25","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\shared\\About\\About.js":"26","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\shared\\ForgotPassword\\ForgotPassword.js":"27","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\MainPage.js":"28","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\shared\\Error404\\Error404.js":"29","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\shared\\HeroSection\\HeroSection.js":"30","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\shared\\Button\\Button.js":"31","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\shared\\Accordion\\Accordion.js":"32","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\TagsInput\\TagsInput.js":"33","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\QuestionTable\\QuestionTable.js":"34","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Student\\SignUp\\SignUp.js":"35","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\TestTable\\TestTable.js":"36","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\SummaryTable\\SummaryTable.js":"37","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\ManageQuestions\\ManageQuestions.js":"38","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\ManageQuestions\\CreateEditQuestion\\CreateEditQuestion.js":"39","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\Reports\\Reports.js":"40","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\ManageTests\\CreateEditTest\\CreateEditTest.js":"41","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\ReportByRespondentName\\ReportByRespondentName.js":"42","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\Reports\\TestReport\\TestReport.js":"43","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\ManageTests\\ManageTests.js":"44","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\utils\\AdminMenuPanel.js":"45","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\GradesTable\\GradesTable.js":"46"},{"size":477,"mtime":1629648132056,"results":"47","hashOfConfig":"48"},{"size":1424,"mtime":1629620238506,"results":"49","hashOfConfig":"48"},{"size":4389,"mtime":1629648132056,"results":"50","hashOfConfig":"48"},{"size":2455,"mtime":1629581417614,"results":"51","hashOfConfig":"48"},{"size":905,"mtime":1629653496869,"results":"52","hashOfConfig":"48"},{"size":352,"mtime":1629653548350,"results":"53","hashOfConfig":"48"},{"size":305,"mtime":1629584623926,"results":"54","hashOfConfig":"48"},{"size":823,"mtime":1629647308529,"results":"55","hashOfConfig":"48"},{"size":271,"mtime":1629585036986,"results":"56","hashOfConfig":"48"},{"size":1072,"mtime":1629653365409,"results":"57","hashOfConfig":"48"},{"size":816,"mtime":1629616821397,"results":"58","hashOfConfig":"48"},{"size":873,"mtime":1629653531104,"results":"59","hashOfConfig":"48"},{"size":1216,"mtime":1629652665447,"results":"60","hashOfConfig":"48"},{"size":974,"mtime":1629628418411,"results":"61","hashOfConfig":"48"},{"size":610,"mtime":1629651399959,"results":"62","hashOfConfig":"48"},{"size":589,"mtime":1629656837435,"results":"63","hashOfConfig":"48"},{"size":1623,"mtime":1629654910060,"results":"64","hashOfConfig":"48"},{"size":1538,"mtime":1629666909992,"results":"65","hashOfConfig":"48"},{"size":643,"mtime":1629656783625,"results":"66","hashOfConfig":"48"},{"size":494,"mtime":1629982051235,"results":"67","hashOfConfig":"68"},{"size":5589,"mtime":1630348228692,"results":"69","hashOfConfig":"68"},{"size":352,"mtime":1629982051225,"results":"70","hashOfConfig":"68"},{"size":5109,"mtime":1630274970179,"results":"71","hashOfConfig":"68"},{"size":2579,"mtime":1630274984560,"results":"72","hashOfConfig":"68"},{"size":1104,"mtime":1630149810040,"results":"73","hashOfConfig":"68"},{"size":305,"mtime":1629997336470,"results":"74","hashOfConfig":"68"},{"size":1412,"mtime":1630149770494,"results":"75","hashOfConfig":"68"},{"size":3294,"mtime":1630356556005,"results":"76","hashOfConfig":"68"},{"size":1128,"mtime":1630271907311,"results":"77","hashOfConfig":"68"},{"size":801,"mtime":1630275104778,"results":"78","hashOfConfig":"68"},{"size":832,"mtime":1630159035242,"results":"79","hashOfConfig":"68"},{"size":683,"mtime":1630011657034,"results":"80","hashOfConfig":"68"},{"size":1144,"mtime":1630353973974,"results":"81","hashOfConfig":"68"},{"size":2615,"mtime":1630315125083,"results":"82","hashOfConfig":"68"},{"size":1214,"mtime":1630149833546,"results":"83","hashOfConfig":"68"},{"size":2076,"mtime":1630203037918,"results":"84","hashOfConfig":"68"},{"size":5221,"mtime":1630419650068,"results":"85","hashOfConfig":"68"},{"size":5504,"mtime":1630348049875,"results":"86","hashOfConfig":"68"},{"size":11515,"mtime":1630355372129,"results":"87","hashOfConfig":"68"},{"size":6725,"mtime":1630355980780,"results":"88","hashOfConfig":"68"},{"size":20668,"mtime":1630358884630,"results":"89","hashOfConfig":"68"},{"size":6488,"mtime":1630336739508,"results":"90","hashOfConfig":"68"},{"size":8382,"mtime":1630447970297,"results":"91","hashOfConfig":"68"},{"size":3464,"mtime":1630357149293,"results":"92","hashOfConfig":"68"},{"size":1007,"mtime":1630356525195,"results":"93","hashOfConfig":"68"},{"size":2284,"mtime":1630447372132,"results":"94","hashOfConfig":"68"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"cgc4jw",{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"97"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"97"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"97"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"97"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"97"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},"1d4ufkt",{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"146"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"146"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"146"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"146"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"146"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"146"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"146"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"146"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"146"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"146"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"146"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"146"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"146"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"146"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"146"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"146"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"146"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"146"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"146"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"146"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"146"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"146"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\index.js",[],["220","221"],"C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\App.js",[],"C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\Footer\\Footer.js",["222"],"import React, { useEffect } from 'react';\r\nimport { Button } from '../Button/Button';\r\nimport './Footer.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Footer() {\r\n\r\n    return (\r\n        <div className='footer-container'>\r\n            <section className=\"footer-subscription\">\r\n                <p className=\"footer-subscription-heading\">\r\n                    Join us to get notifications on any relevant new tests coming up\r\n                </p>\r\n\r\n                <p className=\"footer-subscription-text\">\r\n                    You can unsubscribe at any time.\r\n                </p>\r\n                <div className=\"input-areas\">\r\n                    <form>\r\n                        <input type=\"email\" name=\"email\" placeholder='Your email' className='footer-input'/>\r\n                        <Button buttonStyle='btn--outline'> Subscribe </Button>\r\n                    </form>\r\n                </div>\r\n            </section>\r\n            <div className='footer-links'>\r\n                <div className='footer-link-wrapper'>\r\n                    <div className='footer-link-items'>\r\n                        <h2> About Us </h2>\r\n                        <Link to='/about'> Additional Information </Link>\r\n                        <Link to='/terms-of-service'> Terms of Service </Link>\r\n                    </div>\r\n                    <div className='footer-link-items'>\r\n                        <h2> Contact Us </h2>\r\n                        <Link to='/contact'> Contact Information </Link>\r\n                        <Link to='https://www.paypal.com/donate?hosted_button_id=WLXFDL7PFQ7HN'> Support Us </Link>\r\n                    </div>\r\n                </div>\r\n                <div className='footer-link-wrapper'>\r\n                    <div className='footer-link-items'>\r\n                        <h2> Social Media </h2>\r\n                        <Link to='https://www.instagram.com/ofek.itzhaki/'> Instagram </Link>\r\n                        <Link to='https://www.facebook.com/ofek.itzhaki/'> Facebook </Link>\r\n                        <Link to='https://github.com/OfekItzhaki/'> Github </Link>\r\n                        <Link to='https://www.linkedin.com/in/ofekitzhaki/'> Linkedin </Link>\r\n                        <Link to='https://www.codegrepper.com/app/profile.php?id=43241/'> Grepper </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <section className=\"social-media\">\r\n                <div className=\"social-media-wrap\">\r\n                    <div className=\"footer-logo\">\r\n                        <Link to='/' className=\"social-logo\">\r\n                            OIES <i className=\"fab fa-typo3\"></i>\r\n                        </Link>\r\n                    </div>\r\n                    <small className=\"website-rights\"> OI Test System © 2021 </small>\r\n                    <div className=\"social-icons\">\r\n                        <Link to=\"\" onClick={() => SendToExternalLink('https://www.facebook.com/ofek.itzhaki/')} target='_blank' aria-label='Facebook' className=\"social-icon-link facebook\">\r\n                            <i className=\"fab fa-facebook-f\"></i>\r\n                        </Link>\r\n                        <Link to=\"\" onClick={() => SendToExternalLink('https://www.instagram.com/ofek.itzhaki/')} target='_blank' aria-label='Instagram' className=\"social-icon-link instagram\">\r\n                            <i className=\"fab fa-instagram\"></i>\r\n                        </Link>\r\n                        <Link to=\"\" onClick={() => SendToExternalLink('https://github.com/OfekItzhaki/')} target='_blank' aria-label='Github' className=\"social-icon-link github\">\r\n                            <i className=\"fab fa-github\"></i>\r\n                        </Link>\r\n                        <Link to=\"\" onClick={() => SendToExternalLink('https://www.linkedin.com/in/ofekitzhaki/')} target='_blank' aria-label='Linkedin' className=\"social-icon-link linkedin\">\r\n                            <i className=\"fab fa-linkedin\"></i>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n};  \r\n\r\nfunction SendToExternalLink(externalLink) {\r\n    if (typeof externalLink === 'string') {\r\n        // Open in the same window\r\n        // window.location.href = externalLink;\r\n\r\n        // Open in a new window\r\n        window.open(externalLink);\r\n    }\r\n}\r\n","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\Navbar\\Navbar.js",["223","224"],"import React, {useState, useEffect} from 'react'\r\nimport './Navbar.css';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../../../assets/components/Logo_v1.png';\r\nimport { Button } from '../Button/Button';\r\n\r\nexport default function Navbar() {\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMoblieMenu = () => setClick(false);\r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960) {\r\n            setButton(false)\r\n        } else {\r\n            setButton(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n\r\n    // Every time the window size changes\r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <>\r\n        <nav className=\"navbar\">\r\n            <div className=\"navbar-container\">\r\n                <Link to=\"/\" className=\"navbar-logo\" onClick={closeMoblieMenu}>\r\n                    <img className=\"logo-img\" src={logo} alt=\"logo\"></img>\r\n                </Link>\r\n                <div className=\"menu-icon\" onClick={handleClick}>\r\n                    <i id=\"icon\" className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n                </div>\r\n                <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                    <li className='nav-item'>\r\n                        <Link to='/' className='nav-links' onClick={closeMoblieMenu}>\r\n                            Home\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <Link to='/login' className='nav-links' onClick={closeMoblieMenu}>\r\n                            Login\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <Link to='/sign-up' className='nav-links' onClick={closeMoblieMenu}>\r\n                            Sign-up\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <Link to='/about' className='nav-links' onClick={closeMoblieMenu}>\r\n                            About\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                {/* {button && <Button link='/sign-up' buttonStyle='btn--outline'> Sign Up </Button>} */}\r\n            </div>\r\n        </nav>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\Login\\Login.js",["225","226"],"import React, { useState, useEffect } from 'react';\r\nimport { Button } from '../../../shared/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport login_styles from './Login.css'\r\n\r\nexport default function Login() {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    document.title = \"Login\";\r\n  }, [])\r\n\r\n  return (\r\n    <div className='login'>\r\n      <form className='login__form'>\r\n        <div className='form-content'>\r\n          <h1> Login </h1>\r\n          <input type='email' placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n          <input type='password' placeholder='Password' value={password} onChange={(e) => setPassword(e.target.value)} />\r\n          <button> \r\n            <Link to=\"/\"> Submit </Link> \r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\Home\\Home.js",["227"],"import React, { useState, useEffect } from 'react';\r\nimport '../../../../App.css';\r\nimport HeroSection from '../../../shared/HeroSection/HeroSection';\r\n\r\nexport default function Home () {\r\n    \r\n    useEffect(() => {\r\n        document.title = \"OI Exam System\";\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <HeroSection/>\r\n        </>\r\n    )\r\n};","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\ForgotPassword\\ForgotPassword.js",["228","229"],"import react from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nexport default function ForgotPassword() {\r\n\r\n  useEffect(() => {\r\n      document.title = \"Forgot Password\";\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='forgot-password'> Forgot Password </h1>\r\n    </div>\r\n  )\r\n};","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\Error404\\Error404.js",["230","231"],"import react from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\n// import styles from './Error404.css';\r\n\r\nexport default function Error404() {\r\n\r\n  useEffect(() => {\r\n      document.title = \"Page not found!\";\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n        <div id=\"clouds\">\r\n            <div class=\"styles.cloud x1\"></div>\r\n            <div class=\"styles.cloud x1_5\"></div>\r\n            <div class=\"styles.cloud x2\"></div>\r\n            <div class=\"styles.cloud x3\"></div>\r\n            <div class=\"styles.cloud x4\"></div>\r\n            <div class=\"styles.cloud x5\"></div>\r\n        </div>\r\n        <div class='styles.c'>\r\n            <div class='styles._404'>404</div>\r\n            <div class='styles._1'>THE PAGE</div>\r\n            <div class='styles._2'>WAS NOT FOUND</div>\r\n        </div>\r\n      </>\r\n  )\r\n};","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\About\\About.js",["232","233"],"import react from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nexport default function About() {\r\n\r\n  useEffect(() => {\r\n      document.title = \"About\";\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='about'> About </h1>\r\n    </div>\r\n  )\r\n};","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\SignUp\\SignUp.js",["234","235"],"import React, { useState, useEffect } from 'react';\r\nimport { Button } from '../../../shared/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport signup_styles from './SignUp.css';\r\n\r\nexport default function SignUp() {\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n      document.title = \"Sign-up\";\r\n  }, [])\r\n\r\n  return (\r\n    <div className='sign-up'>\r\n      <form className='sign-up__form'>\r\n        <div className='form-content'>\r\n          <h1> Sign-up </h1>\r\n          <input type='name' placeholder='Name' value={name} onChange={(e) => setName(e.target.value)} />\r\n          <input type='email' placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n          <input type='password' placeholder='Password' value={password} onChange={(e) => setPassword(e.target.value)} />\r\n          <button> \r\n            <Link to=\"/login\"> Submit </Link> \r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\Button\\Button.js",[],"C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\HeroSection\\HeroSection.js",[],"C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\MainPage.js",["236"],"import React, { useEffect } from    'react';\r\nimport { Accordion }        from    '../../../shared/Accordion/Accordion';\r\nimport { AdminMenu }        from    '../../../../utils/content';\r\nimport admin_styles from './MainPage.css';\r\n\r\nexport default function MainPage() {\r\n\r\n    useEffect(() => {\r\n        document.title = 'Main Page';\r\n    }, []);\r\n\r\n    return (\r\n        <div className='admin-mainpage'>\r\n            <div id='main-container'>\r\n                <div id=\"items-container\">\r\n                    <div id=\"select__container\">\r\n                        <label> Choose a field of study:  </label>\r\n                        <select id='field'>\r\n                            <option value='development'> Development </option>\r\n                        </select>\r\n                    </div>\r\n                    <div id='accordions__container'>\r\n                        <div className=\"accordion\">\r\n                            {AdminMenu.map(({ title, content }) => (\r\n                                <Accordion title={title} content={content} />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\Collapsible\\Collapsible.js",[],"C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\Accordion\\Accordion.js",[],"C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\utils\\content.js",[],"C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\Admin\\ManageQuestions\\ManageQuestions.js",["237"],"import React from 'react';\r\nimport questions_styles from './ManageQuestions.css';\r\n\r\nexport const ManageQuestions = ({\r\n    children, \r\n    type, \r\n}) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className='main-container'>\r\n            <div className=\"headers-container\">\r\n                <h1> Available questions for </h1>\r\n                <h1 className=\"type\"> {type} </h1>\r\n            </div>\r\n            <div className=\"filter-container\">\r\n                <label> Filter by tags or content: </label>\r\n                <input id='filter-content' type='text' placeholder='parameter'/>\r\n                <label id='filter-state'></label>\r\n                <label id='amount-filtered'></label>\r\n            </div>\r\n            <div className=\"table-container\">\r\n                <table id='questions-table'>\r\n                    <tr>\r\n                        <th> ID </th>\r\n                        <th> Question Text and Tags </th>\r\n                        <th> Last Update </th>\r\n                        <th> Question Type </th>\r\n                        <th> # of Tests </th>\r\n                    </tr>\r\n                    <tr >\r\n                        {/* {children.map(({ ID, Tnt, update, type, amount }) => (\r\n                            \r\n                        <td> {ID} </td>\r\n                        <td> {TnT} </td>\r\n                        <td> {update} </td>\r\n                        <td> {type} </td>\r\n                        <td> {amount} </td>\r\n                        <td> </td>\r\n                        ))} */}\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\Admin\\ManageTests\\ManageTests.js",[],"C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\Admin\\TestReport\\TestReport.js",[],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\index.js",[],["238","239"],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\App.js",["240"],"import React          from \"react\";\r\nimport Navbar         from \"./components/shared/Navbar/Navbar\";\r\nimport\r\n{\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect \r\n}                     from 'react-router-dom';\r\nimport styles         from './App.css';\r\n\r\n// ---------------------------------------------- Shared pages ----------------------------------------------\r\nimport Home                       from './components/pages/shared/Home/Home';\r\nimport About                      from './components/pages/shared/About/About';\r\nimport Login                      from \"./components/pages/shared/Login/Login\";\r\nimport ForgotPassword             from \"./components/pages/shared/ForgotPassword/ForgotPassword\";\r\nimport Error404                   from \"./components/pages/shared/Error404/Error404\";\r\nimport Footer                     from \"./components/shared/Footer/Footer\";\r\n\r\n// ---------------------------------------------- Admin pages ----------------------------------------------\r\nimport MainPage                   from \"./components/pages/Admin/MainPage/MainPage\";\r\nimport { CreateEditQuestion     } from \"./components/pages/Admin/MainPage/ManageQuestions/CreateEditQuestion/CreateEditQuestion\";\r\nimport { CreateEditTest         } from \"./components/pages/Admin/MainPage/ManageTests/CreateEditTest/CreateEditTest\";\r\nimport { ManageQuestions        } from \"./components/pages/Admin/MainPage/ManageQuestions/ManageQuestions\";\r\nimport { ManageTests            } from \"./components/pages/Admin/MainPage/ManageTests/ManageTests\";\r\nimport { Reports                } from \"./components/pages/Admin/MainPage/Reports/Reports\";\r\nimport { ReportByRespondentName } from \"./components/pages/Admin/MainPage/ReportByRespondentName/ReportByRespondentName\";\r\nimport { TestReport }             from \"./components/pages/Admin/MainPage/Reports/TestReport/TestReport\";\r\n\r\n// --------------------------------------------- Student pages ---------------------------------------------\r\nimport SignUp                     from \"./components/pages/Student/SignUp/SignUp\";\r\n\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n      <>\r\n        <Router>\r\n          <Navbar/>\r\n          <Switch>\r\n\r\n            {/* Shared */}\r\n            <Route path='/' exact                     component={ Home            }   />\r\n            <Route path='/home'                       component={ Home            }   />\r\n            <Route path='/about'                      component={ About           }   />\r\n            <Route path='/error404'                   component={ Error404        }   />\r\n            <Route path='/login'                      render={ (props) => (<Login               {...props} isAuthed={false} />) }   />\r\n            <Route path='/sign-up'                    render={ (props) => (<SignUp              {...props} isAuthed={false} />) }   />\r\n            <Route path='/forgot-password'            render={ (props) => (<ForgotPassword      {...props} isAuthed={false} />) }   />\r\n\r\n            {/* Admin */}\r\n            <Route path='/admin/main-page'            component={MainPage}            />\r\n            <Route path='/admin/create-question'      render={ (props) => (<CreateEditQuestion      {...props} isAuthed={true} isAdmin={true} />) }   />\r\n            <Route path='/admin/edit-question'        render={ (props) => (<CreateEditQuestion      {...props} isAuthed={true} isAdmin={true} />) }   />\r\n            <Route path='/admin/create-test'          render={ (props) => (<CreateEditTest          {...props} isAuthed={true} isAdmin={true} />) }   />\r\n            <Route path='/admin/edit-test'            render={ (props) => (<CreateEditTest          {...props} isAuthed={true} isAdmin={true} />) }   />\r\n            <Route path='/admin/manage-questions'     render={ (props) => (<ManageQuestions         {...props} isAuthed={true} isAdmin={true} />) }   />\r\n            <Route path='/admin/manage-tests'         render={ (props) => (<ManageTests             {...props} isAuthed={true} isAdmin={true} />) }   />\r\n            <Route path='/admin/reports'              render={ (props) => (<Reports                 {...props} isAuthed={true} isAdmin={true} />) }   />\r\n            <Route path='/admin/report-by-name'       render={ (props) => (<ReportByRespondentName  {...props} isAuthed={true} isAdmin={true} />) }   />\r\n            <Route path='/admin/test-report'          render={ (props) => (<TestReport              {...props} isAuthed={true} isAdmin={true} />) }   />\r\n            {/* <Route path='/admin/create-question'  component={CreateEditQuestion}      />\r\n            <Route path='/admin/edit-question'        component={CreateEditQuestion}      />\r\n            <Route path='/admin/create-test'          component={CreateEditTest}          />\r\n            <Route path='/admin/edit-test'            component={CreateEditTest}          />\r\n            <Route path='/admin/manage-questions'     component={ManageQuestions}         />\r\n            <Route path='/admin/manage-tests'         component={ManageTests}             />\r\n            <Route path='/admin/reports'              component={Reports}                 />\r\n            <Route path='/admin/report-by-name'       component={ReportByRespondentName}  /> */}\r\n            {/* <Route path='/admin/test-report'      component={TestReport}              />       ROUTE FOR THE TEST REPORT ITSELF */}\r\n            \r\n            <Redirect to=\"/error404\"/>\r\n\r\n          </Switch>\r\n        </Router>\r\n        <Footer logo=\"OIES\" rights=\"OI Exam System © 2021\"/>\r\n      </>\r\n  )\r\n};\r\n\r\nexport const Field = () => {\r\n\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\shared\\Home\\Home.js",["241"],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\shared\\Footer\\Footer.js",["242","243"],"\r\nimport React, { useEffect } from 'react';\r\nimport        { Button }    from '../Button/Button';\r\nimport        { Link }      from 'react-router-dom';\r\nimport styles               from './Footer.css';\r\n\r\nexport default function Footer({ logo, rights }) {\r\n\r\n    const handelIconClick = (externalLink) => {\r\n        if (typeof externalLink === 'string') {\r\n            // Open in the same window\r\n            // window.location.href = externalLink;\r\n    \r\n            // Open in a new window\r\n            window.open(externalLink);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='footer noselect'>\r\n            <section className=\"footer-subscription\">\r\n                <p className=\"footer-subscription-heading\">\r\n                    Join us to get notifications on any relevant new tests coming up\r\n                </p>\r\n\r\n                <p className=\"footer-subscription-text\">\r\n                    You can unsubscribe at any time.\r\n                </p>\r\n                <div className=\"input-areas\">\r\n                    <form>\r\n                        <input type=\"email\" name=\"email\" placeholder='Your email' className='footer-input'/>\r\n                        <Button buttonStyle='btn--outline'> Subscribe </Button>\r\n                    </form>\r\n                </div>\r\n            </section>\r\n            <div className='footer-links'>\r\n                <div className='footer-link-wrapper'>\r\n                    <div className='footer-link-items'>\r\n                        <h2> About Us </h2>\r\n                        <Link to='/about'           > Additional Information    </Link>\r\n                        <Link to='/terms-of-service'> Terms of Service          </Link>\r\n                    </div>\r\n                    <div className='footer-link-items'>\r\n                        <h2> Contact Us </h2>\r\n                        <Link to='/contact'                                                     > Contact Information   </Link>\r\n                        <Link to='https://www.paypal.com/donate?hosted_button_id=WLXFDL7PFQ7HN' > Support Us            </Link>\r\n                    </div>\r\n                </div>\r\n                <div className='footer-link-wrapper'>\r\n                    <div className='footer-link-items'>\r\n                        <h2> Social Media </h2>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.instagram.com/ofek.itzhaki/\")}                target='_blank' aria-label='Instagram'        > Instagram     </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.facebook.com/ofek.itzhaki/\")}                 target='_blank' aria-label='Facebook'         > Facebook      </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://github.com/OfekItzhaki/\")}                        target='_blank' aria-label='Github'           > Github        </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.linkedin.com/in/ofekitzhaki/\")}               target='_blank' aria-label='Linkedin'         > Linkedin      </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.codegrepper.com/app/profile.php?id=43241/\")}  target='_blank' aria-label='Grepper'          > Grepper       </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <section className=\"social-media\">\r\n                <div className=\"social-media-wrap\">\r\n                    <div className=\"footer-logo\">\r\n                        <Link to=\"/\" className=\"social-logo\">\r\n                            {logo} {logo && <i className=\"fab fa-typo3\"></i>}\r\n                        </Link>\r\n                    </div>\r\n                    <small className=\"website-rights\"> {rights} </small>\r\n                    <div className=\"social-icons\">\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.facebook.com/ofek.itzhaki/\")}   target='_blank' aria-label='Facebook'   className=\"social-icon-link facebook\"   >\r\n                            <i className=\"fab fa-facebook-f\"></i>\r\n                        </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.instagram.com/ofek.itzhaki/\")}  target='_blank' aria-label='Instagram'  className=\"social-icon-link instagram\"  >\r\n                            <i className=\"fab fa-instagram\"></i>\r\n                        </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://github.com/OfekItzhaki/\")}          target='_blank' aria-label='Github'     className=\"social-icon-link github\"     >\r\n                            <i className=\"fab fa-github\"></i>\r\n                        </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.linkedin.com/in/ofekitzhaki/\")} target='_blank' aria-label='Linkedin'   className=\"social-icon-link linkedin\"   >\r\n                            <i className=\"fab fa-linkedin\"></i>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n};  ","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\shared\\Navbar\\Navbar.js",["244","245","246"],"import styles                       from './Navbar.css';\r\nimport logo                         from '../../../assets/components/Logo_v1.png';\r\nimport React, {useState, useEffect} from 'react'\r\nimport        { Link }              from 'react-router-dom';\r\nimport        { Button }            from '../Button/Button';\r\n\r\nexport default function Navbar() {\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960) {\r\n            setButton(false)\r\n        } else {\r\n            setButton(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n\r\n    // Every time the window size changes\r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <>\r\n        <nav className=\"navbar noselect\">\r\n            <div className=\"navbar-container\">\r\n                <Link to=\"/\" className=\"navbar-logo\" onClick={closeMobileMenu}>\r\n                    <img className=\"logo-img\" src={logo} alt=\"logo\"></img>\r\n                </Link>\r\n                <div className=\"menu-icon\" onClick={handleClick}>\r\n                    <i id=\"icon\" className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n                </div>\r\n                <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                    <li className='nav-item'>\r\n                        <Link to='/'        className='nav-links'   onClick={closeMobileMenu}>\r\n                            Home\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <Link to='/login'   className='nav-links'   onClick={closeMobileMenu}>\r\n                            Login\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <Link to='/sign-up' className='nav-links'   onClick={closeMobileMenu}>\r\n                            Sign-up\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <Link to='/about'   className='nav-links'   onClick={closeMobileMenu}>\r\n                            About\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                {/* {button && <Button link='/sign-up' buttonStyle='btn--outline'> Sign Up </Button>} */}\r\n            </div>\r\n        </nav>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\shared\\Login\\Login.js",["247","248"],"import React, { useState, useEffect } from 'react';\r\nimport { Button } from '../../../shared/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './Login.css'\r\n\r\nexport default function Login() {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = () => {\r\n    console.log(\"submit\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = \"Login\";\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"login noselect\">\r\n      <h1 className=\"page__header\"> Login </h1>\r\n      <form className=\"login__form\">\r\n        <div className=\"form_content__container\">\r\n          <input type=\"email\"     placeholder=\"Email\"     value={email}     onChange={(e) => setEmail(e.target.value)}    />\r\n          <input type=\"password\"  placeholder=\"Password\"  value={password}  onChange={(e) => setPassword(e.target.value)} />\r\n          <Link to=\"/forgot-password\"> Forgot your password? </Link>\r\n        </div>\r\n        <button id=\"submit__button\" type=\"submit\"   onClick={handleSubmit}> Submit </button>\r\n      </form>\r\n    </div>\r\n  )\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\shared\\About\\About.js",["249","250"],"import react from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nexport default function About() {\r\n\r\n  useEffect(() => {\r\n      document.title = \"About\";\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"about noselect\">\r\n      <h1 className=\"page__header\"> About </h1>\r\n    </div>\r\n  )\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\shared\\ForgotPassword\\ForgotPassword.js",["251","252","253"],"import React, { useState, useEffect } from 'react';\r\nimport { Button } from '../../../shared/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './ForgotPassword.css';\r\n\r\nexport default function ForgotPassword() {\r\n\r\n  const [ previousPassword,   setPreviousPassword]  = useState(\"\");\r\n  const [ newPassword,        setNewPassword]       = useState(\"\");\r\n  const [ verifyNewPassword,  setVerifyNewPassword] = useState(\"\");\r\n\r\n  const handleSubmit = () => {\r\n    console.log(\"Submit\");\r\n  }\r\n\r\n  useEffect(() => {\r\n      document.title = \"Forgot Password\";\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"forgot_password noselect\">\r\n      <h1 className=\"page__header\"> Forgot Password </h1>\r\n      <form className=\"forgot_password__form\">\r\n        <div className=\"form_content__container\">\r\n          <input type=\"password\"  placeholder=\"Previous password\" value={previousPassword}   onChange={(e) => setPreviousPassword(e.target.value)}  />\r\n          <input type=\"email\"     placeholder=\"New password\"      value={newPassword}        onChange={(e) => setNewPassword(e.target.value)}       />\r\n          <input type=\"password\"  placeholder=\"Verify Password\"   value={verifyNewPassword}  onChange={(e) => setVerifyNewPassword(e.target.value)} />\r\n        </div>\r\n        <button id=\"submit__button\" type=\"submit\" onClick={handleSubmit}> Submit </button>\r\n      </form>\r\n    </div>\r\n  )\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\MainPage.js",["254","255"],"import React,   { useEffect, useState  }   from    'react';\r\nimport          { AdminMainPageMenu    }   from    '../../../../utils/AdminMenuPanel';\r\nimport          { Link                 }   from    'react-router-dom';\r\nimport          { useHistory           }   from    'react-router-dom';\r\nimport styles                              from    './MainPage.css';\r\n\r\nexport default function MainPage() {\r\n\r\n    const [ fields,     setFields       ] = useState(null);\r\n    const [ field,      setField        ] = useState(null); \r\n\r\n    const history = useHistory();\r\n\r\n    const handleFieldChange = (f) => {\r\n        setField(f);\r\n        console.log(f);\r\n    }\r\n    \r\n    const handleItemClick = (link, field) => {\r\n        history.push({\r\n            pathname: `${link}`,\r\n            // search: '?update=true',  // query string\r\n            state: {  // location state\r\n                // update: true, \r\n              field: field\r\n            },\r\n        }); \r\n    }\r\n\r\n    const fetchFields = () => {\r\n        fetch(\"http://localhost:8000/fields\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n            setFields(data);\r\n            setField(data[0].title);\r\n\r\n            process.env.REACT_APP_CURRENT_FIELD = data[0];\r\n        })\r\n        .catch((err) => console.log('error fetching tests:' + err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = 'Admin panel';\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n    \r\n        if (isMounted) {                // add conditional check\r\n            fetchFields();\r\n        }\r\n    \r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"admin_mainpage noselect\">\r\n            <div id=\"main__container\">\r\n                <div id=\"header__container\">\r\n                    <h1> Administrator panel </h1>\r\n                </div>\r\n                <div id=\"content__container\">\r\n                    <table id=\"content__table\">\r\n                        <tbody>\r\n                            <tr id=\"select__tr\">\r\n                                <td id=\"select__td\">\r\n                                    <label id=\"label__choose\"> Choose a field of study: </label>\r\n                                    <select id=\"fields__select\" onChange={(e) => handleFieldChange(e.target.value)}>\r\n                                        { fields && fields.map((field) => (\r\n                                            <option key={field.id} value={field.title}> {field.title} </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            { AdminMainPageMenu.map((child) => (\r\n                                <tr key={child.title}>\r\n                                    <td> <button className=\"menu_item like_link_button\" onClick={() => handleItemClick(child.link, field)}> {child.title} </button> </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\shared\\Error404\\Error404.js",["256","257"],"import react from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport styles from './Error404.module.css';\r\n\r\nexport default function Error404() {\r\n\r\n  useEffect(() => {\r\n      document.title = \"Page not found!\";\r\n      document.body.style.backgroundColor = \"#353535\";\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n      <div className=\"error404 noselect\">\r\n        <div id={styles.clouds}>\r\n            <div className={`${styles.cloud} ${styles.x1}`}   ></div>\r\n            <div className={`${styles.cloud} ${styles.x1_5}`} ></div>\r\n            <div className={`${styles.cloud} ${styles.x2}`}   ></div>\r\n            <div className={`${styles.cloud} ${styles.x3}`}   ></div>\r\n            <div className={`${styles.cloud} ${styles.x4}`}   ></div>\r\n            <div className={`${styles.cloud} ${styles.x5}`}   ></div>\r\n        </div>\r\n        <div className= {`${styles.c}`}>\r\n            <div className={styles._404}  >404</div>\r\n            <hr/>\r\n            <div className={styles._1}    >THE PAGE</div>\r\n            <div className={styles._2}    >WAS NOT FOUND</div>\r\n        </div>\r\n      </div>\r\n      </>\r\n  )\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\shared\\HeroSection\\HeroSection.js",["258"],"import React            from 'react';\r\nimport styles           from './HeroSection.css';\r\nimport { Button }       from '../Button/Button';\r\n\r\nexport default function HeroSection() {\r\n    return (\r\n        <div className='hero__container noselect'>\r\n            <video src=\"/videos/video-1.mp4\" autoPlay loop muted />\r\n            <h1>    OI Exam System                          </h1>\r\n            <p>     It appears you are not logged in.       </p>\r\n            <div className='hero__btns'>\r\n                <Button className='btns' link='/login'      buttonStyle='btn--outline' buttonSize='btn--large'> Login   </Button>\r\n                <Button className='btns' link='/sign-up'    buttonStyle='btn--primary' buttonSize='btn--large'> Sign Up </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\shared\\Button\\Button.js",["259"],"import React                    from 'react'\r\nimport styles                   from './Button.css';\r\nimport { Link }                 from 'react-router-dom';\r\n\r\nconst STYLES = ['btn--primary', 'btn--outline'];\r\nconst SIZES = ['btn--medium', 'btn--large'];\r\n\r\nexport const Button = (props) => {\r\n    const checkButtonStyle = STYLES.includes(props.buttonStyle) ? props.buttonStyle : STYLES[0];\r\n    const checkButtonSize  = SIZES.includes(props.buttonSize)   ? props.buttonSize  : SIZES[0];\r\n    const checkLink        = props.link != null ? props.link : '/';\r\n\r\n    return (\r\n        <Link to={checkLink} className='btn-mobile'>\r\n            <button className={`btn ${checkButtonStyle} ${checkButtonSize}`} onClick={props.onClick} type={props.type}>\r\n                {props.children}\r\n            </button>\r\n        </Link>\r\n    )\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\shared\\Accordion\\Accordion.js",["260"],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\TagsInput\\TagsInput.js",["261"],"import React, { useState }  from 'react';\r\nimport styles               from '../TagsInput/TagsInput.scss';\r\n\r\nexport const TagsInput = props => {\r\n\r\n    const [tags, setTags] = useState([]);\r\n\r\n    const addTags = event => {\r\n        if (event.key === \"Enter\" && event.target.value !== \"\") {\r\n            setTags([...tags, event.target.value]);\r\n            props.selectedTags([...tags, event.target.value]);\r\n            event.target.value = \"\";\r\n        }\r\n    };\r\n\r\n    const removeTags = index => {\r\n        setTags([...tags.filter(tag => tags.indexOf(tag) !== index)]);\r\n    };\r\n    \r\n    return (\r\n        <div id=\"tags-input\">\r\n            <input type=\"text\" onKeyUp={event => addTags(event)} placeholder=\"Press enter to add tags\" />\r\n            \r\n            <div id=\"tags\">\r\n                {tags.map((tag, index) => (\r\n                    <li className=\"tag\" key={index}>\r\n                        <span className=\"tag-title\"> {tag} </span>\r\n                        <i className=\"tag-close-icon\" onClick={() => removeTags(index)} > x </i>\r\n                    </li>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\QuestionTable\\QuestionTable.js",["262","263"],"import styles                   from './QuestionTable.css';\r\nimport { useState }             from 'react';\r\n\r\nexport const QuestionTable = ({ questions, tags, handleDelete }) => {\r\n\r\n    return (\r\n        <table id=\"questions__table\">\r\n            <tbody>\r\n                <tr className=\"space_under header_row border_bottom\">\r\n                    <th> ID                     </th>\r\n                    <th> Question Text and Tags </th>\r\n                    <th> Last Update            </th>\r\n                    <th> Question Type          </th>\r\n                    <th> # of Tests             </th>\r\n                    <th></th>\r\n                </tr>\r\n                \r\n\r\n                {questions.map((question, i) => (\r\n                <tr className=\"space_under border_bottom\" key={question}>\r\n                    <td className=\"question_id\"           key={question.id}>        {question.id}                                                   </td>\r\n                    <td className=\"question_title_tags\"   key={question.title}>     {question.title} \r\n                    <br/>\r\n                        {question.tags.map((tag) => { \r\n                            return (\r\n                            <>\r\n                                <button className=\"like_link_button\" key={tag}>     {tag}                                                           </button> \r\n                                <label className=\"like_link_label\">                 {tag !== question.tags[question.tags.length - 1] ? \" | \" : \"\"}  </label>\r\n                            </>)\r\n                        })} </td>\r\n                    <td className=\"question_update\" key={question.lastUpdate}>      {question.lastUpdate}       </td>\r\n                    <td className=\"question_type\"   key={question.type}>            {question.type}             </td>\r\n                    <td className=\"question_tests\"  key={question.numOfTests}>      {question.numOfTests}       </td>\r\n                    <td className=\"buttons\">\r\n                        <button className=\"regular__button\"> Show                                               </button>\r\n                        <button className=\"regular__button\"> Edit                                               </button>\r\n                        <button className=\"regular__button\"> Duplicate                                          </button>\r\n                        <button className=\"regular__button\"  onClick={() => handleDelete(question.id)}> Delete  </button>\r\n                    </td>\r\n                </tr> ))}\r\n            \r\n            </tbody>\r\n        </table>\r\n    )\r\n};\r\n","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Student\\SignUp\\SignUp.js",["264","265","266"],"import React, { useState, useEffect } from 'react';\r\nimport { Button } from '../../../shared/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './SignUp.css';\r\n\r\nexport default function SignUp() {\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = () => {\r\n    console.log(\"Submit\");\r\n  }\r\n\r\n  useEffect(() => {\r\n      document.title = \"Sign up\";\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"sign_up noselect\">\r\n      <h1 className=\"page__header\"> Sign-up </h1>\r\n      <form className=\"sign_up__form\">\r\n        <div className=\"form_content__container\">\r\n          <input type=\"name\"      placeholder=\"Name\"      value={name}      onChange={(e) => setName(e.target.value)}     />\r\n          <input type=\"email\"     placeholder=\"Email\"     value={email}     onChange={(e) => setEmail(e.target.value)}    />\r\n          <input type=\"password\"  placeholder=\"Password\"  value={password}  onChange={(e) => setPassword(e.target.value)} />\r\n          <button id=\"submit__button\" type=\"submit\" onClick={handleSubmit}> Submit </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\TestTable\\TestTable.js",["267","268"],"import styles                   from './TestTable.css';\r\nimport { Link }                 from 'react-router-dom';\r\n\r\nexport const TestTable = ({ tests, handleDelete }) => {\r\n    return (\r\n        <table id=\"tests__table\">\r\n            <tbody>\r\n                <tr className=\"space_under header_row border_bottom\">\r\n                    <th> ID                 </th>\r\n                    <th> Link               </th>\r\n                    <th> Test Name          </th>\r\n                    <th> Num of Questions   </th>\r\n                    <th> Last Update        </th>\r\n                    <th> Type               </th>\r\n                    <th> Version            </th>\r\n                    <th>                    </th>\r\n                </tr>\r\n                \r\n\r\n                {tests.map((test) => (\r\n                <tr className=\"space_under border_bottom\" key={test.testID}>\r\n                    <td className=\"test_id\">            {test.testID}                                       </td>\r\n                    <td className=\"test_link\">          <button className=\"regular__button\"> Copy </button>   </td>\r\n                    <td className=\"test_name\">          {test.testName}                                     </td>\r\n                    <td className=\"test_amount\">        {test.testType}                                     </td>\r\n                    <td className=\"test_update\">        {test.lastUpdate}                                   </td>\r\n                    <td className=\"test_type\">          {test.testType}                                     </td>\r\n                    <td className=\"test_version\">       {test.version}                                      </td>\r\n                    <td className=\"buttons\">\r\n                        <button className=\"regular__button\"> Edit       </button>\r\n                        <button className=\"regular__button\"> Duplicate  </button>\r\n                        <label>             </label>\r\n                    </td>\r\n                </tr> ))}\r\n            \r\n            </tbody>\r\n        </table>\r\n    )\r\n};\r\n","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\SummaryTable\\SummaryTable.js",["269"],"import styles                   from './SummaryTable.css';\r\n\r\nexport const SummaryTable = ({ test, dateRange, submissions, numPassed, passingPercentage, average, median, countNumberOfQuestions }) => {\r\n\r\n    return (\r\n        <>\r\n            <table id=\"test__table\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <label>                                     Test name:                            </label> \r\n                            <label key={test && test.testName} className=\"summary_label__bold\">        {test && test.testName}                </label> \r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr> \r\n                        <td> \r\n                            <label>                                     Test ID:                                </label> \r\n                            <label key={test && test.testID} className=\"summary_label__bold\">          {test && test.testID}                    </label> \r\n                        </td> \r\n                    </tr>\r\n                    <tr> \r\n                        <td> \r\n                            <label>                                     Test code:                              </label> \r\n                            <label key={test && test.testCode} className=\"summary_label__bold\">        {test && test.testCode}                  </label> \r\n                        </td> \r\n                    </tr>\r\n                    <tr> \r\n                        <td> \r\n                            <label>                                     Test type:                              </label> \r\n                            <label key={test && test.testType} className=\"summary_label__bold\">        {test && test.testType}                  </label> \r\n                        </td> \r\n                    </tr>\r\n                    <tr> \r\n                        <td> \r\n                            <label>                                     Number of questions:                    </label> \r\n                            <label key={test && test.questions} className=\"summary_label__bold\">       {countNumberOfQuestions()}               </label> \r\n                        </td> \r\n                    </tr>\r\n                    <tr> \r\n                        <td> \r\n                            <label>                                     Passing grade:                          </label>\r\n                            <label key={test && test.passingGrade} className=\"summary_label__bold\">    {test && test.passingGrade}              </label> \r\n                        </td> \r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <table id=\"additional_info__table\">\r\n                <tbody>\r\n                    <tr> \r\n                        <td> \r\n                            <label>                                     Date range:                             </label>\r\n                            <label key={dateRange} className=\"summary_label__bold\">                    {dateRange}                              </label> \r\n                        </td> \r\n                    </tr>\r\n                    <tr> \r\n                        <td> \r\n                            <label>                                     Number of submissions:                  </label>\r\n                            <label key={dateRange} className=\"summary_label__bold\">                    {submissions}                              </label> \r\n                        </td> \r\n                    </tr>\r\n                    <tr > \r\n                        <td> \r\n                            <label>                                     Number of respondents passed:           </label>\r\n                            <label key={dateRange} className=\"summary_label__bold\">                    {numPassed}                              </label> \r\n                        </td> \r\n                    </tr>\r\n                    <tr> \r\n                        <td> \r\n                            <label>                                     Passing percentage:                     </label>\r\n                            <label key={dateRange} className=\"summary_label__bold\">                    {passingPercentage}                              </label> \r\n                        </td> \r\n                    </tr>\r\n                    <tr> \r\n                        <td> \r\n                            <label>                                     Average grade:                          </label>\r\n                            <label key={dateRange} className=\"summary_label__bold\">                    {average}                              </label> \r\n                        </td> \r\n                    </tr>\r\n                    <tr> \r\n                        <td> \r\n                            <label>                                     Median grade:                           </label>\r\n                            <label key={dateRange} className=\"summary_label__bold\">                    {median}                              </label> \r\n                        </td> \r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n};\r\n","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\ManageQuestions\\ManageQuestions.js",["270","271","272"],"import React, { useEffect, useState }   from 'react';\r\nimport        { QuestionTable }      from '../../../../Admin/QuestionTable/QuestionTable';\r\nimport        { useHistory }            from 'react-router-dom';\r\nimport styles                           from './ManageQuestions.css';\r\n\r\nexport const ManageQuestions = ({ field }) => {\r\n\r\n    // ---------------------------- Fetch Info Hooks ---------------------------\r\n\r\n    const [ questions,          setQuestions     ]  = useState(null);\r\n    const [ tags,               setTags          ]  = useState(null);\r\n\r\n    // ----------------------------- Content Hooks -----------------------------    \r\n\r\n    const [ filter,             setFilter        ]  = useState(false);\r\n    const [ filterByTags,       setFilterByTags  ]  = useState(true);\r\n\r\n    const [ filteredQuestions,  setFilteredQuestions  ] = useState([]);\r\n\r\n    // ----------------------------------------------------------------------------\r\n\r\n    const history = useHistory();\r\n\r\n    const back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const newQuestion = () => {\r\n        history.push(\"/admin/create-question\");\r\n    }\r\n\r\n    const next = () => {\r\n        \r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        const newQuestions = questions.filter(question => questions.id !== id);\r\n        setQuestions(newQuestions);\r\n    }\r\n\r\n    const handleFilterByChange = (value) => {\r\n        if (value === \"tags\") setFilterByTags(true);\r\n        else setFilterByTags(false);\r\n    }\r\n\r\n    const handleFilterContentChange = (value) => {\r\n        \r\n        if (value === \"\") setFilter(false);\r\n        else setFilter(true);\r\n\r\n        let newQuestionList = questions;\r\n        setFilteredQuestions(newQuestionList.filter((question) => { \r\n            \r\n            let contains = false;\r\n\r\n            if (filterByTags === true) {\r\n                question.tags.map((tag) => {\r\n                    if (tag.toLowerCase().includes(value)) contains = true;\r\n                });\r\n            } else {\r\n                if (question.title.includes(value)) contains = true;\r\n            }\r\n\r\n            if (contains === true) return question;\r\n\r\n        }));\r\n    }\r\n\r\n    const fetchTags = () => {\r\n        fetch(\"http://localhost:8000/tags\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n          setTags(data); \r\n        })\r\n        .catch((err) => console.log('error fetching tags:' + err))\r\n      }\r\n\r\n    const fetchQuestions = () => {\r\n        fetch(\"http://localhost:8000/questions\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            setQuestions(data)\r\n            setFilteredQuestions(data);\r\n        })\r\n        .catch((err) => console.log('error fetching questions:' + err))\r\n      }\r\n\r\n    // Meant for fetching the necessary information on first render\r\n    useEffect(() => {\r\n        document.title = \"Manage Questions\";\r\n\r\n        let isMounted = true;           // note mutable flag\r\n\r\n        if (isMounted) {                // add conditional check \r\n            fetchQuestions();\r\n            fetchTags();\r\n        }\r\n\r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"manage_questions noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1 className=\"page__header\"> Available Questions for {field ? field : \"\"} </h1>\r\n            </div>\r\n            <div id=\"filter__container\">\r\n                <label> Filter by: </label>\r\n                <select onChange={ (e) => handleFilterByChange(e.target.value) }>\r\n                    <option value=\"tags\">       tags       </option>\r\n                    <option value=\"content\">    content    </option>\r\n                </select>\r\n\r\n                <div id=\"filter_by__container\">\r\n                    <input id=\"filter__input\" type=\"text\" onChange={ (e) => handleFilterContentChange(e.target.value) } placeholder=\"Enter a list of keywords separated by commas\"/>\r\n                    <label id=\"filter__state\">      Filter is   {filter === false ? \"OFF\" : \"ON\"}                                                           </label>\r\n                    <label id=\"amount__filtered\">   Filtered    {filteredQuestions && filteredQuestions.length} of total {questions && questions.length}    </label>\r\n                </div>\r\n            </div>\r\n            <div id=\"questions__container\">\r\n                <div id=\"table__container\">\r\n                    {questions && <QuestionTable questions={filteredQuestions} tags={tags} handleDelete={handleDelete} /> }\r\n                </div>\r\n                <div id=\"under_table__container\">\r\n                    <label type=\"text\" id=\"showing_questions\"> showing 1-{`AMOUNT`} of filtered Questions </label>\r\n                    <button className=\"regular__button\" onClick={() =>   next()          }> Next {`>>`} </button>\r\n                    <button className=\"regular__button\" onClick={() =>   next()          }> Show All {questions && questions.length} questions </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"buttons__container\">\r\n                <button className=\"regular__button\" onClick={() =>   back()          }>  {`<<` } Back         </button>\r\n                <button className=\"regular__button\" onClick={() =>   newQuestion()   }>  New Question {`>>`}  </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\ManageQuestions\\CreateEditQuestion\\CreateEditQuestion.js",["273","274","275","276","277"],"import React, { useState, useEffect } from 'react';\r\nimport        { useHistory }          from 'react-router-dom';\r\nimport        { TagsInput }           from '../../../../../Admin/TagsInput/TagsInput';\r\nimport styles                         from './CreateEditQuestion.css';\r\n\r\n  export const CreateEditQuestion = ({ field, question }) => {\r\n\r\n  // ------------------------ Fetch Info Hooks -----------------------\r\n\r\n  const [questionTypes,       setQuestionTypes    ]  = useState(null);\r\n  const [questions,           setQuestions        ]  = useState(null);\r\n\r\n  // ------------------------- Content Hooks -------------------------\r\n\r\n  // *Question Table*\r\n  const [ type,               setType             ]  = useState(question ? question.type : \"\");\r\n  const [ questionHeader,     setQuestionHeader   ]  = useState(question ? question.title : \"\");\r\n  const [ questionText,       setQuestionText     ]  = useState(question ? question.text : \"\");\r\n  const [ questionID,         setQuestionID       ]  = useState(question ? question.id + 1 : 0);\r\n\r\n  // *Answers Table*\r\n  const [ possibleAnswers,    setPossibleAnswers  ]  = useState(\r\n    question ? question.answers : [\r\n      { \"id\": 0, \"answer\": \"\", \"correct\": false},\r\n      { \"id\": 1, \"answer\": \"\", \"correct\": false},\r\n      { \"id\": 2, \"answer\": \"\", \"correct\": false}\r\n    ]\r\n  );\r\n  const [ answerID,           setAnswerID         ]  = useState(possibleAnswers ? possibleAnswers[possibleAnswers.length - 1].id + 1 : 0);\r\n  const [ answersLayout,      setAnswersLayout    ]  = useState(\"vertical\");\r\n\r\n  // *Tags Table*\r\n  const [ tags,               setTags             ]  = useState(question ? question.tags : \"\");\r\n\r\n  // -----------------------------------------------------------------\r\n\r\n  const selectedTags = tags => console.log(tags);\r\n\r\n  const initialState = () => {\r\n    console.log(\"returning to initial state\");\r\n    setType(questionTypes ? questionTypes[0] : \"\");\r\n    setQuestionHeader(\"\");\r\n    setQuestionText(\"\");\r\n    setQuestionID(questionID + 1);\r\n\r\n    setPossibleAnswers([\r\n      { \"id\": 0, \"answer\": \"\", \"correct\": false},\r\n      { \"id\": 1, \"answer\": \"\", \"correct\": false},\r\n      { \"id\": 2, \"answer\": \"\", \"correct\": false}\r\n    ]);\r\n\r\n    setAnswerID(possibleAnswers ? possibleAnswers[possibleAnswers.length - 1].id + 1: 0);\r\n    setTags(\"\");\r\n    setAnswersLayout(\"horizontal\");\r\n  }\r\n  \r\n  const addAnswer = (event) => {  \r\n    event.preventDefault();\r\n    let newPossibleAnswers = possibleAnswers;\r\n    newPossibleAnswers.push({ \"id\": answerID, \"answer\": \"\", correct: false });\r\n    setPossibleAnswers(newPossibleAnswers);\r\n    setAnswerID(answerID + 1);\r\n  }\r\n\r\n  const removeAnswer = (event, id) => { \r\n    event.preventDefault(); \r\n    console.log(\"remove answer id \" + id)\r\n    setPossibleAnswers(possibleAnswers.filter((answer) => answer.id !== id));\r\n  }\r\n  \r\n  const history = useHistory();\r\n  const back = () => {\r\n      history.goBack();\r\n  }\r\n\r\n  const show = () => {\r\n    \r\n  }\r\n\r\n  const handlePossibleAnswersChange = () => {\r\n    // console.log(\"possible answers changed\")\r\n    let correctAnswer_Counter = 0;\r\n    (possibleAnswers && possibleAnswers.map((answer) => {\r\n      let radio = document.getElementById(`radio_${answer.id}`);\r\n      radio.checked = answer.correct;\r\n      if (answer.correct === true) {\r\n        correctAnswer_Counter++;\r\n      }\r\n    }));\r\n\r\n    if (correctAnswer_Counter === 0) {\r\n      setType(\"\");\r\n      // console.log(\"0 correct answers\")\r\n    } else if (correctAnswer_Counter === 1) {\r\n      setType(questionTypes[0].type);\r\n      // console.log(\"1 correct answers\")\r\n    } else {\r\n      setType(questionTypes[1].type)\r\n      // console.log(\"2+ correct answers\")\r\n    }\r\n  }\r\n\r\n  const handleTagsChange = () => {\r\n    \r\n  }\r\n\r\n  const handleAnswerClick = (id) => {\r\n    console.log(\"handle answer click\");\r\n    let newPossibleAnswers = possibleAnswers;\r\n    newPossibleAnswers.filter((answer) => answer.id === id).map((answer) => {\r\n      answer.correct = !answer.correct;\r\n      // console.log(`answer_${id} state - ${answer.correct}`);\r\n      document.getElementById(`label_${id}`).text = answer.answer === \"Correct\" ? \"Incorrect\" : \"Correct\";\r\n      return answer;\r\n    });\r\n    setPossibleAnswers(newPossibleAnswers);\r\n    handlePossibleAnswersChange();\r\n  }\r\n\r\n  const handleLayoutChange = (e) => {\r\n    if (e.target.checked === true) {\r\n      setAnswersLayout(e.target.id);\r\n    }\r\n  }\r\n\r\n  const handleAnswerChanged = (id, a) => {\r\n    console.log(\"handle answer changed\");\r\n    let newPossibleAnswers = possibleAnswers;\r\n    newPossibleAnswers.filter((answer) => answer.id === id).map((answer) => {\r\n      answer.answer = a;\r\n      return answer;\r\n    });\r\n    setPossibleAnswers(newPossibleAnswers);\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    saveQuestion();\r\n  }\r\n\r\n  const saveQuestion = () => {\r\n    fetch('http://localhost:8000/questions', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n        id: questionID,\r\n        tags: tags,\r\n        last_update: Date.now,\r\n        type: type,\r\n        title: questionHeader,\r\n        text: questionText,\r\n        difficulty: (question && question.difficulty ? question.difficulty : \"low\"),\r\n        answers: possibleAnswers,\r\n        num_of_tests: (question && question.num_of_tests ? question.num_of_tests : 0),\r\n        answersLayout: answersLayout\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => { \r\n        console.log(data); \r\n        initialState(); \r\n      })\r\n      .catch((err) => console.log(`error ${err}`))\r\n  }\r\n\r\n  const fetchQuestions = () => {\r\n    fetch(\"http://localhost:8000/questions\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setQuestions(data); \r\n      setQuestionID(questionID ? questionID : data[data.length - 1].id + 1); \r\n      console.log(`Current questionID: ${data[data.length - 1].id + 1}`); \r\n    })\r\n    .catch((err) => console.log('error fetching questions:' + err))\r\n  }\r\n\r\n  const fetchQuestionTypes = () => {\r\n    fetch(\"http://localhost:8000/questionTypes\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setQuestionTypes(data); \r\n      setType(type ? type : data[0].type); \r\n    })\r\n    .catch((err) => console.log('error fetching question types:' + err))\r\n  }\r\n\r\n  // Meant to set the type according to the amount of the correct answers\r\n  useEffect(() => {\r\n    handlePossibleAnswersChange();\r\n  }, [possibleAnswers])\r\n\r\n  // Meant for setting the title of the document on the first render\r\n  useEffect(() => {\r\n    document.title = `${question === undefined ? \"Create\" : \"Edit\"} Question`;\r\n  }, [question])\r\n\r\n    // Meant for fetching the necessary information on first render\r\n  useEffect(() => {\r\n    let isMounted = true;           // note mutable flag\r\n\r\n    if (isMounted) {                // add conditional check\r\n      fetchQuestions();\r\n      fetchQuestionTypes();\r\n    }\r\n\r\n    window.addEventListener('keydown',function(e){if(e.keyIdentifier==='U+000A'||e.keyIdentifier==='Enter'||e.keyCode===13){if(e.target.nodeName === 'INPUT' && e.target.type !== 'textarea'){e.preventDefault();return false;}}},true);\r\n\r\n    return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"create_edit_question noselect\">\r\n      <h1 className=\"page__header\"> { question === undefined ? \"Create\" : \"Edit\" } Question </h1>\r\n      <form className=\"new_question__form\" onSubmit={handleSubmit}>\r\n\r\n        <div className=\"content__section\">\r\n          <table id=\"question__table\">\r\n            <tbody>\r\n              <tr>\r\n                <td> <label> Field: </label> </td>\r\n                <td> <label id=\"field__label\"> { field === undefined ? \"undefined\" : field } </label> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                  <td> <label> Question type: </label> </td>\r\n                  <td> <select id=\"question_type__select\" value={type} disabled>\r\n                          {questionTypes && questionTypes.map((questionType) => (\r\n                            <option key={questionType.id} value={questionType.type}> {questionType.type} </option>\r\n                          ))}\r\n                        </select> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td> <label> Question header: </label> </td>\r\n                <td> <input className=\"asterisk_input\" value={questionHeader} type=\"text\" placeholder=\"Enter your question here\"  onChange={(e) => setQuestionHeader(e.target.value)} required/> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td> <label> Question additional information: </label> </td>\r\n                <td> <input className=\"asterisk_input\" value={questionText}   type=\"text\" placeholder=\"Type something\"            onChange={(e) => setQuestionText(e.target.value)}    required/> </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div className=\"content__section\">\r\n          <table id=\"answers__table\">\r\n            <tbody>\r\n\r\n              {possibleAnswers && possibleAnswers.map((answer) => (\r\n              <tr key={answer.id}>\r\n                <td> { answer.id === 0 && <label> Possible answers: </label> } </td>\r\n                <td className=\"answer__td\"> \r\n                  <button type=\"\" onClick={ (e) => removeAnswer(e, answer.id) }> X </button>\r\n                  <input id={`answer_${answer.id}` } className=\"asterisk_input\" name=\"answer\" type=\"text\" onChange={(e) => handleAnswerChanged(answer.id, e.target.value)} placeholder={`Answer #${answer.id}`} required/> \r\n                  <input id={`radio_${answer.id}`  } name={questionTypes ? (type === questionTypes[0] ? type : \"\") : \"default\"} type=\"radio\" onClick={(e) => handleAnswerClick(answer.id)} /> \r\n                  <label id={`label_${answer.id}`  } htmlFor={`answer_${answer.id}`}   >  {answer.correct === true ? \"Correct\" : \"Incorrect\"}  </label>\r\n                </td>\r\n              </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <div className=\"answer_layout__container\">\r\n            <label name=\"layout__label\"> Answers layout: </label>\r\n            <input id=\"vertical\"    type=\"radio\"  name=\"answer_layout\"  defaultChecked onChange={(e) => handleLayoutChange(e)} />    <label htmlFor=\"vertical\"   >  Vertical   </label>\r\n            <input id=\"horizontal\"  type=\"radio\"  name=\"answer_layout\"                 onChange={(e) => handleLayoutChange(e)} />    <label htmlFor=\"horizontal\" >  Horizontal </label>\r\n            <button onClick={(e) => addAnswer(e)}> Add an Answer </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"tags__container\">\r\n          <table id=\"tags__table\">\r\n            <tbody>\r\n              <tr>\r\n                <td> <label> Tags: </label> </td>\r\n                <td> <TagsInput selectedTags={selectedTags} handleTagsChange={handleTagsChange}/> </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div id=\"buttons__container\">\r\n          <button className=\"regular__button\" onClick={() => back() }> {`<<` } Back  </button>\r\n          <button className=\"regular__button\" onClick={() => show() }>  Show         </button>\r\n          <button className=\"regular__button\" type=\"submit\"          >  Save {`>>` } </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\Reports\\Reports.js",["278","279"],"import React, { useEffect, useState     }   from 'react';\r\nimport        { useHistory, useLocation }   from 'react-router-dom';\r\nimport styles                               from './Reports.css';\r\n\r\nexport const Reports = () => {\r\n\r\n    // ------------------------ Fetch Info Hooks -----------------------\r\n\r\n    const [ tests,       setTests       ]   = useState(null);\r\n    const [ field,       setField       ]   = useState(null);\r\n\r\n    // ------------------------- Content Hooks -------------------------\r\n\r\n    const [ testChosen,  setChosenTest  ]   = useState(null);\r\n    const [ dateFrom,    setDateFrom    ]   = useState(\"\");\r\n    const [ dateTo,      setDateTo      ]   = useState(\"\");\r\n    const [ dateRange,   setDateRange   ]   = useState(\"\");\r\n    const [ past,        setPast        ]   = useState(true);\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const handleDateCheckChange = (checked) => {\r\n        setPast(checked);\r\n\r\n        if (checked) {\r\n            document.getElementById(\"date__from\").value = new Date().toISOString().substring(0, 10); \r\n            document.getElementById(\"date__to\").value = new Date().toISOString().substring(0, 10);\r\n            setDateRange(`${document.getElementById(\"date__from\").value} - ${document.getElementById(\"date__to\").value}`)\r\n        } else {\r\n            setDateRange(\"any date in the past\");\r\n        }\r\n    }\r\n\r\n    const handleTestChange = (id) => {\r\n        setChosenTest(tests.find((test) => test.testID.toString() === id));\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        generateReport();\r\n    }\r\n\r\n    const generateReport = () => {\r\n        console.log(\"generate report\");\r\n        setDateRange(dateFrom - dateTo);\r\n\r\n        history.push({\r\n            pathname: '/admin/test-report',\r\n            // search: '?update=true',  // query string\r\n            state: {  // location state\r\n                // update: true,\r\n              test: testChosen,\r\n              dateRange: dateRange, \r\n              field: field\r\n            },\r\n        }); \r\n    }\r\n\r\n    const fetchTests = () => {\r\n        fetch(\"http://localhost:8000/tests\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n          setTests(data);\r\n\r\n          setChosenTest(data[0]);\r\n          setDateRange(\"any date in the past\");\r\n        })\r\n        .catch((err) => console.log('error fetching tests:' + err))\r\n    }\r\n    \r\n    useEffect(() => {\r\n        document.title = \"Reports\";\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n    \r\n        if (isMounted) {                // add conditional check\r\n            fetchTests();\r\n        }\r\n\r\n        let today = new Date();\r\n        let todayDate = today.toISOString().split(\"T\")[0];\r\n        document.getElementById(\"date__from\").setAttribute(\"min\", \"1999-01-01\");\r\n        document.getElementById(\"date__from\").setAttribute(\"max\", todayDate);\r\n\r\n        document.getElementById(\"date__to\").setAttribute(\"min\", \"1999-01-01\");\r\n        document.getElementById(\"date__to\").setAttribute(\"max\", todayDate);\r\n\r\n        setField(location.state.field);  // for location state\r\n    \r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"reports noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1 className=\"page__header\"> Test Report for {field} </h1>\r\n            </div>\r\n            <div id=\"content__container\">\r\n                <form id=\"report__form\" onSubmit={handleSubmit}>\r\n                    <table id=\"content__table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <label id=\"label__test_name\">       Select Test:            </label>\r\n                                </td>\r\n\r\n                                <td> <select id=\"test__select\" onChange={(e) => handleTestChange(e.target.value)}>\r\n                                     {tests && tests.map((test) => {\r\n                                         \r\n                                         return (\r\n                                             <option key={test.testID} value={test.testID}> {test.testName} </option>\r\n                                         )\r\n                                    })}\r\n                                     </select> </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label id=\"label__date_range\">      Date Range:             </label>\r\n                                </td>\r\n                                <td>\r\n                                    <label id=\"label__from\">            From:                   </label>\r\n                                    <input id=\"date__from\"  type=\"date\" onChange={ (e) => setDateFrom(e.target.value) }  disabled={past}  required/>\r\n                                </td>\r\n                                <td>\r\n                                    <label id=\"label__to\">              To:                     </label>\r\n                                    <input id=\"date__to\"    type=\"date\" onChange={ (e) => setDateTo(e.target.value)   }  disabled={past}  required/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>  </td>\r\n                                <td>\r\n                                    <label id=\"label__OR\">              OR                      </label>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>  </td>\r\n                                <td>\r\n                                    <input type=\"checkbox\" checked={past} onChange={ (e) => handleDateCheckChange(e.target.checked) } />\r\n                                    <label id=\"label__past\">                Any date in the past        </label>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div id=\"button__container\">\r\n                        <button className=\"regular__button\" onClick={() => back() }>     {`<<` } Back                </button>\r\n                        <button className=\"regular__button\" type=\"submit\">               Generate Report             </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\ManageTests\\CreateEditTest\\CreateEditTest.js",["280","281","282","283","284","285","286"],"import React, { useState, useEffect }           from 'react';\r\nimport        { Button }                        from '../../../../../shared/Button/Button';\r\nimport        { HashLink as Link }              from 'react-router-hash-link';\r\nimport        { useHistory, useLocation }       from 'react-router-dom';\r\nimport styles                                   from './CreateEditTest.css';\r\n\r\nexport const CreateEditTest = () => {\r\n\r\n  // -------------------------------------------- Fetch Info Hooks --------------------------------------------\r\n\r\n  const [ field,                      setField                  ] = useState(null);\r\n  const [ test,                       setTest                   ] = useState(null);\r\n\r\n  const [ testTypes,                  setTestTypes              ] = useState(null);\r\n  const [ certificateTemplates,       setCertificateTemplates   ] = useState(null);\r\n  const [ languages,                  setLanguages              ] = useState(null);\r\n\r\n  // -------------------------------------------- Top Content Hooks -------------------------------------------\r\n\r\n  // *General Details Table*\r\n  const [ language,                   setLanguage               ] = useState(test ? test.language : \"\");\r\n  const [ testType,                   setTestType               ] = useState(test ? test.testType : \"\");\r\n  const [ testName,                   setTestName               ] = useState(test ? test.testName : \"\");\r\n  const [ passingGrade,               setPassingGrade           ] = useState(test ? test.passingGrade : \"\");\r\n  const [ header,                     setHeader                 ] = useState(test ? test.header : \"\");\r\n  const [ messageSuccess,             setMessageSuccess         ] = useState(test ? test.messageSuccess : \"\");\r\n  const [ messageFailure,             setMessageFailure         ] = useState(test ? test.messageFailure : \"\");\r\n  const [ certificateTemplate,        setCertificateTemplate    ] = useState(test ? test.certificateTemplate : \"\");\r\n\r\n  // *Email Delivery Table*         \r\n  // Status Container          \r\n  const [ status,                     setStatus                 ] = useState(\"OFF\");\r\n  const [ from,                       setFrom                   ] = useState(test ? test.from : \"\");\r\n  const [ cc,                         setCC                     ] = useState(test ? test.cc : \"\");\r\n  const [ bcc,                        setBCC                    ] = useState(test ? test.bcc : \"\");    \r\n\r\n  // Passing the Test Container\r\n  const [ passingMessageSubject,      setPassingMessageSubject  ] = useState(test ? test.passingSubject : \"\");\r\n  const [ passingMessageBody,         setPassingMessageBody     ] = useState(test ? test.passingBody : \"\");    \r\n\r\n  // Failing the Test Container\r\n  const [ failingMessageSubject,      setFailingMessageSubject  ] = useState(test ? test.failingSubject : \"\");   \r\n  const [ failingMessageBody,         setFailingMessageBody     ] = useState(test ? test.failingBody : \"\");    \r\n\r\n  // -------------------------------------------- Bottom Content Hooks ----------------------------------------\r\n\r\n  // *Filter Container*\r\n  const [ filter,                     setFilter                 ] = useState(false);\r\n  const [ filterContent,              setFilterContent          ] = useState(\"\");\r\n\r\n  // *Questions Table\r\n  const [ questionsAmount,            setQuestionsAmount        ] = useState(test ? test.questionAmount : 0);    \r\n\r\n  // ----------------------------------------------------------------------------------------------------------\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  \r\n  const back = () => {\r\n    history.goBack();\r\n  }\r\n  \r\n  const show = () => {\r\n    \r\n  }\r\n  \r\n  const handleStatus = (value) => {\r\n    if (value === \"\") setStatus(\"OFF\");\r\n    else setStatus(\"ON\");\r\n  }\r\n\r\n  const handleSubmit = (event) => {  \r\n    event.preventDefault();\r\n  }\r\n\r\n  const saveTest = () => {\r\n    fetch('http://localhost:8000/tests', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n        // id: questionID,\r\n        // tags: tags,\r\n        // last_update: Date.now,\r\n        // type: type,\r\n        // title: questionHeader,\r\n        // text: questionText,\r\n        // difficulty: (question && question.difficulty ? question.difficulty : \"low\"),\r\n        // answers: possibleAnswers,\r\n        // num_of_tests: (question && question.num_of_tests ? question.num_of_tests : 0),\r\n        // answersLayout: answersLayout\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => { \r\n        console.log(data); \r\n        // initialState(); \r\n      })\r\n      .catch((err) => console.log(`error ${err}`))\r\n  }\r\n\r\n  const fetchLanguages = () => {\r\n    fetch(\"http://localhost:8000/languages\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setLanguages(data); \r\n      setLanguage(language ? language : data[0].type); \r\n    })\r\n    .catch((err) => console.log('error fetching languages:' + err))\r\n  }\r\n\r\n  const fetchTestTypes = () => {\r\n    fetch(\"http://localhost:8000/testTypes\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setTestTypes(data); \r\n      setTestType(testType ? testType : data[0].type); \r\n    })\r\n    .catch((err) => console.log('error fetching test types:' + err))\r\n  }\r\n\r\n  const fetchCertificateTemplates = () => {\r\n    fetch(\"http://localhost:8000/certificateTemplates\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setCertificateTemplates(data); \r\n      setCertificateTemplate(certificateTemplate ? certificateTemplate : data[0].template); \r\n    })\r\n    .catch((err) => console.log('error fetching certificate templates:' + err))\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = `${test === undefined ? \"Create\" : \"Edit\"} Test`;\r\n  }, [test])\r\n\r\n    // Meant for fetching the necessary information on first render\r\n  useEffect(() => {\r\n    let isMounted = true;           // note mutable flag\r\n\r\n    if (isMounted) {                // add conditional check\r\n      fetchLanguages();\r\n      fetchTestTypes();\r\n      fetchCertificateTemplates();\r\n    }\r\n\r\n    console.log(location ? location.state.field : \"\")  // for location state\r\n\r\n    setField(location ? location.state.field : \"\");\r\n    setTest(location ? location.state.test : \"\")\r\n\r\n    return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"create_edit_test noselect\">\r\n      <h1 className=\"page__header\"> {test === undefined ? \"Create\" : \"Edit\"} Test </h1> {/* className=\"page__header\" */}\r\n      <form className=\"new_test__form\" onSubmit={handleSubmit}>\r\n        <div id=\"top_content__container\">\r\n          \r\n          <div className=\"content__section\">\r\n            <table id=\"general_details__table\">\r\n              <tbody>\r\n                <tr className=\"space_under header_row border_bottom\">\r\n                  <th colspan=\"2\"> General Test Details </th>\r\n                </tr>\r\n                <tr>\r\n                  <td> <label> Field of Study: </label> </td>\r\n                  <td> <label id=\"field__label\"> {field ? field : \"undefined\"} </label> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Language: </label> </td>\r\n                  <td>  <select id=\"language__select\" onChange={(e) => setLanguage (e.target.value)}>\r\n                          {languages && languages.map((language) => (\r\n                            <option key={language.id} value={language.name}> {language.name} </option>\r\n                          ))} \r\n                        </select> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Test Type: </label> </td>\r\n                  <td> <select id=\"test_type__select\" onChange={(e) => setTestType (e.target.value)}>\r\n                          {testTypes && testTypes.map((testType) => (\r\n                            <option key={testType.id} value={testType.type}> {testType.type} </option>\r\n                          ))}\r\n                        </select> </td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td> <label> Test Name:                                                                                                                                                  </label> </td>\r\n                  <td> <input id=\"test_name__input\"       type=\"text\"     placeholder=\"test something\"      value={testName}        onChange={(e) => setTestName     (e.target.value)}   required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Passing Grade:                                                                                                                                              </label> </td>\r\n                  <td> <input id=\"passing_grade__input\"   type=\"text\"     placeholder=\"Grade\"               value={passingGrade}    onChange={(e) => setPassingGrade (e.target.value)}   required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Show correct answers after submission:                                                                                                                      </label> </td>\r\n                  <td> <input id=\"show_answers__checkbox\" type=\"checkbox\" defaultChecked                                                                                                 required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Message header:                                                                                                                                             </label> </td>\r\n                  <td> <input id=\"message_header__input\"  type=\"text\"     placeholder=\"Type something\"      value={header}   onChange={(e) => setHeader  (e.target.value)} required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Message to show on success:                                                                                                                                 </label> </td>\r\n                  <td> <input id=\"message_success__input\" type=\"text\"     placeholder=\"Type something\"      value={messageSuccess}  onChange={(e) => setMessageSuccess (e.target.value)} required/> </td>\r\n                </tr>   \r\n\r\n                <tr>    \r\n                  <td> <label> Message to show on failure:                                                                                                                                 </label> </td>\r\n                  <td> <input id=\"message_failure__input\" type=\"text\"     placeholder=\"Type something\"      value={messageFailure}  onChange={(e) => setMessageFailure (e.target.value)} required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Certificate Templates: </label> </td>\r\n                  <td> <select id=\"certificate__select\" onChange={(e) => setCertificateTemplate (e.target.value)}>\r\n                          {certificateTemplates && certificateTemplates.map((certificate) => (\r\n                            <option key={certificate.id} value={certificate.template}> {certificate.template} </option>\r\n                          ))}\r\n                        </select> </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div className=\"content__section\">\r\n            <table id=\"email_delivery__table\">\r\n              <tbody>\r\n                <tr className=\"space_under header_row border_bottom\">\r\n                  <th colspan=\"2\"> Email Delivery Upon Test Completion </th>\r\n                </tr>\r\n                <tr>\r\n                  <td> <label> Current Status: \"{status === \"OFF\" ? `OFF` : \"ON\"}\"                                                                                                         </label> </td>\r\n                  <td> <div id=\"sending_emails__container\">      \r\n                          <label id=\"sending_emails__label\" > Emails {status === \"OFF\" ? `won't` : \"will\"} be sent upon test completion.                                                   </label>\r\n                          <label                    > to turn {status === \"OFF\" ? \"ON\" : \"OFF\"} email delivery, {status === \"OFF\" ? \"fill out\" : \"reset\"} the mandatory                    </label>\r\n                          <label                    > fields in this section:                                                                                                              </label>\r\n                        </div> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> From: </label> </td>\r\n                  <td> <input id=\"from__input\"  type=\"text\" value={from}  onChange={(e) => handleStatus(e.target.value)}                                                                         /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> CC: </label> </td>      \r\n                  <td> <input id=\"cc__input\"    type=\"text\" value={cc}    onChange={(e) => setCC(e.target.value)}   disabled={from ? false : true}                                               /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> BCC: </label> </td>       \r\n                  <td> <input id=\"bcc__input\"   type=\"text\" value={bcc}   onChange={(e) => setBCC(e.target.value)}  disabled={from ? false : true}                                               /> </td>\r\n                </tr>      \r\n              </tbody>\r\n            </table>       \r\n         \r\n         \r\n            <table id=\"passing_test__table\">   \r\n              <tbody>\r\n                <tr className=\"space_under sub_header_row border_bottom\">\r\n                  <th colspan=\"2\"> Passing the test </th>\r\n                </tr>\r\n                <tr>       \r\n                  <td> <label> Message subject:                                                                                                                                            </label> </td>\r\n                  <td> <input id=\"message_subject__input\" type=\"text\" value={passingMessageSubject} onChange={(e) => setPassingMessageSubject(e.target.value)}  disabled={from ? false : true}   /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> Message body:                                                                                                                                               </label> </td>\r\n                  <td> <input id=\"message_body__input\"    type=\"text\" value={passingMessageBody}    onChange={(e) => setPassingMessageBody(e.target.value)} disabled={from ? false : true}       /> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td>\r\n                    <label style={{fontWeight: 'bold'}}> Predefined Templated - Click to copy to clipboard </label>\r\n                    <label> NEED TO ADD TEMPLATES HERE </label>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n\r\n          <table id=\"failing_test__table\">\r\n            <tbody>\r\n              <tr className=\"space_under sub_header_row border_bottom\">\r\n                  <th colspan=\"2\"> Failing the test </th>\r\n                </tr>\r\n              <tr>\r\n                <td> <label> Message subject:                                                                                                                                            </label> </td>\r\n                <td> <input id=\"message_subject__input\" type=\"text\" value={failingMessageSubject} onChange={(e) => setFailingMessageSubject(e.target.value)}  disabled={from ? false : true}   /> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td> <label> Message body:                                                                                                                                               </label> </td>\r\n                <td> <input id=\"message_body__input\"    type=\"text\" value={failingMessageBody}    onChange={(e) => setFailingMessageBody(e.target.value)} disabled={from ? false : true}       /> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  <label style={{fontWeight: 'bold'}}> Predefined Templated - Click to copy to clipboard </label>\r\n                  <label> NEED TO ADD TEMPLATES HERE </label>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div id=\"bottom_content__container\">\r\n          <div id=\"questions__container\">\r\n            <h2 className=\"section__headers\"> Questions </h2>\r\n            <div id=\"explanation\">\r\n              <label style={{fontWeight: 'bold'}}> Note: This test is set to be a {`'${testType}'`} test, which means:</label>\r\n              \r\n              {/* INSTEAD OF THIS: */}\r\n              <label className=\"sub__label\"> All the questions that you select here will be included in the test. </label>\r\n              <label className=\"sub__label\"> All respondents will receive the SAME set of questions presented in a different order. </label>\r\n\r\n              {/* NEED TO CHANGE THE 'LINK' TO SOMETHING ELSE - SOMETHING THAT WILL REFER THE USER BACK TO THE TEST DETAILS  */}\r\n              <label className=\"sub__label\"> *TIP: if you want each respondent to receive a different set of questions, change the test type to 'Random' in the <Link to={\"/admin/\" + test === undefined ? \"create\" : \"edit\" + \"-test#test_type__select\"} >Test Details</Link> section.* </label>\r\n\r\n              {/* FOR EVERY LABEL OR SOMETHING FROM THE DB THAT CONTAINS THE TEST TYPES, I WILL NEED TO DO THIS */}\r\n              {/* <label className=\"sub__label\"> {TestType.child.text} </label> */}\r\n            </div>\r\n\r\n            <div id=\"question_table__container\">\r\n              <label style={{fontWeight: 'bold', color: 'orange'}}> Select the questions that you want to include in the test </label>\r\n              <label> You can use the tag filter to narrow down the list to a specific subject - Don't worry, filtering won't affect your previous selections. </label>\r\n\r\n              <div id=\"filter__container\">\r\n                <label style={{fontWeight: 'bold'}}> Filter by tags or content </label>\r\n                <input id=\"tag_content__input\" type=\"text\"\r\n                            onChange={(e) => { setFilterContent(e.target.value); filterContent === \"\" ? setFilter(false) : setFilter(true)} }\r\n                            placeholder='Enter a list of keywords separated by commas'/>\r\n                    <label id=\"filter_state\"> Filter is {filter === false ? \"OFF\" : \"ON\"}  </label>\r\n              </div>\r\n\r\n              <table id=\"questions__table\">\r\n                <tbody>\r\n                  <tr>\r\n                    <th> Currently showing {questionsAmount} questions ({questionsAmount} selected) </th>\r\n                  </tr>\r\n                  <tr>\r\n                    {/* CHANGE THIS SO EVERY QUESTION THAT MATCHES THE FILTER WILL BE PLACED IN A NEW TABLE ROW, AND THAT THE SHOW BUTTON CAN SHOW THE QUESTIONS CONTENT\r\n                    PLS PAY ATTENTION THAT THIS KIND OF OPEN MENU CAN BE CREATED AND RE-USED FOR THE 'TEST REPORT' PAGE AS WELL */}\r\n\r\n                    <td>\r\n                      <label> What is the DOM? </label>\r\n                      <label> *IN SMALL TEXT* Javascript | Advanced</label>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n              <div id=\"table_buttons__container\">\r\n                <label> Showing 1-{`AMOUNT OF QUESTIONS`} of {`AMOUNT OF QUESTIONS`} filtered questions</label>\r\n                <button> Next 2 {`>>`} </button>\r\n                <button> Show only Selected </button>\r\n                <button> Show All {`AMOUNT OF QUESTIONS`} questions </button>\r\n              </div>\r\n            </div>\r\n\r\n            <label> The test will include {`AMOUNT OF QUESTIONS`} in total </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"buttons__container\">\r\n            <button className=\"regular__button\" onClick={() => back() }> {`<<` } Back  </button>\r\n            <button className=\"regular__button\" onClick={() => show() }>  Show         </button>\r\n            <button className=\"regular__button\" type=\"submit\"          >  Save {`>>` } </button>\r\n          </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\ReportByRespondentName\\ReportByRespondentName.js",["287","288","289"],"import React, { useEffect, useState }   from 'react';\r\nimport        { filter }                from 'minimatch';\r\nimport        { useHistory }            from 'react-router-dom';\r\nimport styles                           from './ReportByRespondentName.css';\r\n\r\nexport const ReportByRespondentName = ({ title }) => {\r\n    \r\n    // ------------------------ Fetch Info Hooks -----------------------\r\n    \r\n    const [ students,            setStudents         ]       = useState(null); \r\n    const [ studentTests,        setStudentTests     ]       = useState(null); \r\n\r\n    // ------------------------- Content Hooks -------------------------\r\n\r\n    const [ filterContent,       setFilterContent    ]       = useState(\"\");\r\n    const [ respondentName,      setRespondentName   ]       = useState(\"\");\r\n    const [ respondentID,        setRespondentID     ]       = useState(null);\r\n\r\n    const handleRespondentClick = (name, id) => {\r\n        console.log(\"handle respondent click\")\r\n        setRespondentName(name);\r\n        setRespondentID(id);\r\n    }\r\n\r\n\r\n    // ?????????????????????????????\r\n    const calcAverageGrade = () => {\r\n        const tests = [];\r\n        if (studentTests !== null && respondentID !== 0) {\r\n            studentTests.filter((studentTest) => studentTest.studentID === respondentID).map((studentTest) =>\r\n                tests.push(studentTest)\r\n            );\r\n            console.log(tests);\r\n        }\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const Back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const fetchStudents = () => {\r\n        fetch(\"http://localhost:8000/students\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => setStudents(data))\r\n        .catch((err) => console.log('error fetching students:' + err))\r\n      }\r\n\r\n      const fetchStudentTests = () => {\r\n        fetch(\"http://localhost:8000/studentTests\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => setStudentTests(data))\r\n        .catch((err) => console.log('error fetching student tests:' + err))\r\n      }\r\n\r\n\r\n    useEffect(() => {\r\n        document.title = \"Report by Name\";\r\n    }, [])\r\n    \r\n\r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n\r\n        if (isMounted) {                // add conditional check \r\n            fetchStudents();\r\n            fetchStudentTests();\r\n        }\r\n\r\n        calcAverageGrade();\r\n\r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"report_by_name noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1> Report by Respondent Name </h1>\r\n            </div>\r\n\r\n            <div id=\"content__container\">\r\n                <div id=\"respondent__container\">\r\n                    <h2> Find a respondent </h2>\r\n                    <p> To find a respondent, start typing a name below, </p>\r\n                    <p> then select a respondent from the list that will appear. </p>\r\n                    <div id=\"filter_name__container\">    \r\n                        <label> Respondent's name: </label>\r\n                        <input id=\"filter__input\" type='text' value={filterContent} placeholder=\"Enter a name\" onChange={(e) => setFilterContent(e.target.value) } />\r\n                    </div>\r\n\r\n                    <table id=\"respondents__table\">\r\n                        <tbody>\r\n                            <tr className=\"header_row border_bottom\">\r\n                                <th> ID             </th>\r\n                                <th> Respondent     </th>\r\n                                <th> Email          </th>\r\n                                <th> Last Activity  </th>\r\n                            </tr>\r\n\r\n                            {students && students.filter((student) => student.fullName.includes(filterContent)).map((student) => (\r\n                            <tr key={student.id} onClick={() => handleRespondentClick(student.fullName, student.id)}>\r\n                                <td> {student.id}               </td>\r\n                                <td> {student.fullName}         </td>\r\n                                <td> {student.email}            </td>\r\n                                <td> {student.lastActivity}     </td>\r\n                            </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div id=\"activity_report__container\" className={respondentID === null ? \"hidden\" : \"visible\"}>\r\n                    <h2> Activity Report for: {respondentName} </h2>\r\n                    <div id=\"above_activity__container\">\r\n                        <label type=\"text\" id=\"explanation\">    Click a test to show its results           </label>\r\n                        <label type=\"text\" id=\"average_grade\">  Average grade for a test: {}               </label>\r\n                    </div>\r\n\r\n                    <table id=\"activity_report__table\">\r\n                        <tbody>\r\n                            <tr className=\"header_row border_bottom\">\r\n                                <th> Instance       </th>\r\n                                <th> Test ID        </th>\r\n                                <th> Test Name      </th>\r\n                                <th> Grade          </th>\r\n                                <th> Last Activity  </th>\r\n                            </tr>\r\n\r\n                            {studentTests && studentTests.filter((studentTest) => studentTest.studentID === respondentID).map((studentTest) => (\r\n                            <tr key={studentTest.id}>\r\n                                <td> {studentTest.instance}             </td>\r\n                                <td> {studentTest.testID}               </td>\r\n                                <td> {studentTest.testName}             </td>\r\n                                <td> {studentTest.grade}                </td>\r\n                                <td> {studentTest.lastActivity}         </td>\r\n                            </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div id=\"buttons__container\">\r\n                        <button className=\"regular__button\" onClick={() => Back() }> {`<<` } Back </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\Reports\\TestReport\\TestReport.js",["290","291","292","293","294","295","296"],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\ManageTests\\ManageTests.js",["297"],"import React, { useEffect, useState }   from 'react';\r\nimport        { TestTable }             from '../../../../Admin/TestTable/TestTable';\r\nimport        { useHistory }            from 'react-router-dom';\r\nimport styles                           from './ManageTests.css'\r\n\r\nexport const ManageTests = ({ field }) => {\r\n\r\n    // ---------------------------- Fetch Info Hooks ---------------------------\r\n\r\n    const [ tests,          setTests            ] = useState(null);\r\n\r\n    // ----------------------------- Content Hooks -----------------------------\r\n\r\n    const [filter,          setFilter           ] = useState(false);\r\n    const [filterContent,   setFilterContent    ] = useState(\"\");\r\n\r\n    // ----------------------------------------------------------------------------\r\n\r\n    const history = useHistory();\r\n\r\n    const back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const createTest = () => {\r\n        history.push({\r\n            pathname: '/admin/create-test',\r\n            // search: '?update=true',  // query string\r\n            state: {  // location state\r\n                // update: true,\r\n              field: field\r\n            },\r\n        }); \r\n    }\r\n\r\n    const fetchTests = () => {\r\n        fetch(\"http://localhost:8000/tests\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n          setTests(data); \r\n        })\r\n        .catch((err) => console.log('error fetching tests:' + err))\r\n    }\r\n\r\n    const handleFilterChange = (value) => {\r\n        setFilterContent(value);\r\n        value === \"\" ? setFilter(false) : setFilter(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = \"Manage Tests\";\r\n    }, [])\r\n\r\n    // Meant for fetching the necessary information on first render\r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n\r\n        if (isMounted) {                // add conditional check\r\n            fetchTests();\r\n        }\r\n\r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"manage_tests noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1 className=\"page__header\"> Available Tests for {field ? field : \"\"} </h1>\r\n            </div>\r\n\r\n            <div id=\"filter__container\">\r\n                <div id=\"filter_keywords__container\">    \r\n                    <label> Filter name by keywords: </label>\r\n                    <input id=\"filter__input\" type=\"text\" value={filterContent} onChange={(e) => handleFilterChange(e.target.value) } placeholder=\"Enter a list of keywords separated by commas\"/>\r\n                    <label id=\"filter_state\"> Filter is {filter === false ? \"OFF\" : \"ON\"}  </label>\r\n                </div>\r\n                <label id=\"amount_filtered\"> Showing {`AMOUNT`} of total {`AMOUNT`} </label>\r\n            </div>\r\n\r\n            <div id=\"table__container\">\r\n                { tests && <TestTable tests={tests} /> }\r\n                <label type=\"text\" id=\"showing_tests\"> showing 1-{`AMOUNT`} of available Tests </label>\r\n            </div>\r\n\r\n            <div id=\"buttons__container\">\r\n                <button className=\"regular__button\" onClick={() =>  back()         }>      {`<<` } Back            </button>\r\n                <button className=\"regular__button\" onClick={() =>  createTest()  }>      Create a Test {`>>`}    </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\utils\\AdminMenuPanel.js",[],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\GradesTable\\GradesTable.js",["298"],{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","severity":1,"message":"304","line":1,"column":17,"nodeType":"305","messageId":"306","endLine":1,"endColumn":26},{"ruleId":"303","severity":1,"message":"307","line":5,"column":10,"nodeType":"305","messageId":"306","endLine":5,"endColumn":16},{"ruleId":"303","severity":1,"message":"308","line":9,"column":12,"nodeType":"305","messageId":"306","endLine":9,"endColumn":18},{"ruleId":"303","severity":1,"message":"307","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":16},{"ruleId":"303","severity":1,"message":"309","line":4,"column":8,"nodeType":"305","messageId":"306","endLine":4,"endColumn":20},{"ruleId":"303","severity":1,"message":"310","line":1,"column":17,"nodeType":"305","messageId":"306","endLine":1,"endColumn":25},{"ruleId":"303","severity":1,"message":"311","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"303","severity":1,"message":"310","line":2,"column":17,"nodeType":"305","messageId":"306","endLine":2,"endColumn":25},{"ruleId":"303","severity":1,"message":"311","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"303","severity":1,"message":"310","line":2,"column":17,"nodeType":"305","messageId":"306","endLine":2,"endColumn":25},{"ruleId":"303","severity":1,"message":"311","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"303","severity":1,"message":"310","line":2,"column":17,"nodeType":"305","messageId":"306","endLine":2,"endColumn":25},{"ruleId":"303","severity":1,"message":"307","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":16},{"ruleId":"303","severity":1,"message":"312","line":4,"column":8,"nodeType":"305","messageId":"306","endLine":4,"endColumn":21},{"ruleId":"303","severity":1,"message":"313","line":4,"column":8,"nodeType":"305","messageId":"306","endLine":4,"endColumn":20},{"ruleId":"303","severity":1,"message":"314","line":2,"column":8,"nodeType":"305","messageId":"306","endLine":2,"endColumn":24},{"ruleId":"299","replacedBy":"315"},{"ruleId":"301","replacedBy":"316"},{"ruleId":"303","severity":1,"message":"317","line":10,"column":8,"nodeType":"305","messageId":"306","endLine":10,"endColumn":14},{"ruleId":"303","severity":1,"message":"310","line":1,"column":17,"nodeType":"305","messageId":"306","endLine":1,"endColumn":25},{"ruleId":"303","severity":1,"message":"304","line":2,"column":17,"nodeType":"305","messageId":"306","endLine":2,"endColumn":26},{"ruleId":"303","severity":1,"message":"317","line":5,"column":8,"nodeType":"305","messageId":"306","endLine":5,"endColumn":14},{"ruleId":"303","severity":1,"message":"317","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":14},{"ruleId":"303","severity":1,"message":"307","line":5,"column":17,"nodeType":"305","messageId":"306","endLine":5,"endColumn":23},{"ruleId":"303","severity":1,"message":"308","line":9,"column":12,"nodeType":"305","messageId":"306","endLine":9,"endColumn":18},{"ruleId":"303","severity":1,"message":"307","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":16},{"ruleId":"303","severity":1,"message":"317","line":4,"column":8,"nodeType":"305","messageId":"306","endLine":4,"endColumn":14},{"ruleId":"303","severity":1,"message":"311","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"303","severity":1,"message":"310","line":2,"column":17,"nodeType":"305","messageId":"306","endLine":2,"endColumn":25},{"ruleId":"303","severity":1,"message":"307","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":16},{"ruleId":"303","severity":1,"message":"318","line":3,"column":10,"nodeType":"305","messageId":"306","endLine":3,"endColumn":14},{"ruleId":"303","severity":1,"message":"317","line":4,"column":8,"nodeType":"305","messageId":"306","endLine":4,"endColumn":14},{"ruleId":"303","severity":1,"message":"318","line":3,"column":19,"nodeType":"305","messageId":"306","endLine":3,"endColumn":23},{"ruleId":"303","severity":1,"message":"317","line":5,"column":8,"nodeType":"305","messageId":"306","endLine":5,"endColumn":14},{"ruleId":"303","severity":1,"message":"311","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"303","severity":1,"message":"310","line":2,"column":17,"nodeType":"305","messageId":"306","endLine":2,"endColumn":25},{"ruleId":"303","severity":1,"message":"317","line":2,"column":8,"nodeType":"305","messageId":"306","endLine":2,"endColumn":14},{"ruleId":"303","severity":1,"message":"317","line":2,"column":8,"nodeType":"305","messageId":"306","endLine":2,"endColumn":14},{"ruleId":"303","severity":1,"message":"317","line":2,"column":8,"nodeType":"305","messageId":"306","endLine":2,"endColumn":14},{"ruleId":"303","severity":1,"message":"317","line":2,"column":8,"nodeType":"305","messageId":"306","endLine":2,"endColumn":14},{"ruleId":"303","severity":1,"message":"317","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":14},{"ruleId":"303","severity":1,"message":"310","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":18},{"ruleId":"303","severity":1,"message":"307","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":16},{"ruleId":"303","severity":1,"message":"318","line":3,"column":10,"nodeType":"305","messageId":"306","endLine":3,"endColumn":14},{"ruleId":"303","severity":1,"message":"317","line":4,"column":8,"nodeType":"305","messageId":"306","endLine":4,"endColumn":14},{"ruleId":"303","severity":1,"message":"317","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":14},{"ruleId":"303","severity":1,"message":"318","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":14},{"ruleId":"303","severity":1,"message":"317","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":14},{"ruleId":"303","severity":1,"message":"317","line":4,"column":8,"nodeType":"305","messageId":"306","endLine":4,"endColumn":14},{"ruleId":"319","severity":1,"message":"320","line":52,"column":64,"nodeType":"321","messageId":"322","endLine":52,"endColumn":66},{"ruleId":"319","severity":1,"message":"323","line":57,"column":41,"nodeType":"321","messageId":"324","endLine":57,"endColumn":43},{"ruleId":"303","severity":1,"message":"317","line":4,"column":8,"nodeType":"305","messageId":"306","endLine":4,"endColumn":14},{"ruleId":"303","severity":1,"message":"325","line":11,"column":10,"nodeType":"305","messageId":"306","endLine":11,"endColumn":19},{"ruleId":"319","severity":1,"message":"323","line":83,"column":54,"nodeType":"321","messageId":"324","endLine":83,"endColumn":56},{"ruleId":"326","severity":1,"message":"327","line":196,"column":6,"nodeType":"328","endLine":196,"endColumn":23,"suggestions":"329"},{"ruleId":"326","severity":1,"message":"330","line":215,"column":6,"nodeType":"328","endLine":215,"endColumn":8,"suggestions":"331"},{"ruleId":"303","severity":1,"message":"317","line":3,"column":8,"nodeType":"305","messageId":"306","endLine":3,"endColumn":14},{"ruleId":"326","severity":1,"message":"332","line":100,"column":8,"nodeType":"328","endLine":100,"endColumn":10,"suggestions":"333"},{"ruleId":"303","severity":1,"message":"307","line":2,"column":17,"nodeType":"305","messageId":"306","endLine":2,"endColumn":23},{"ruleId":"303","severity":1,"message":"317","line":5,"column":8,"nodeType":"305","messageId":"306","endLine":5,"endColumn":14},{"ruleId":"303","severity":1,"message":"334","line":33,"column":39,"nodeType":"305","messageId":"306","endLine":33,"endColumn":46},{"ruleId":"303","severity":1,"message":"335","line":52,"column":39,"nodeType":"305","messageId":"306","endLine":52,"endColumn":57},{"ruleId":"303","severity":1,"message":"336","line":76,"column":9,"nodeType":"305","messageId":"306","endLine":76,"endColumn":17},{"ruleId":"326","severity":1,"message":"337","line":159,"column":6,"nodeType":"328","endLine":159,"endColumn":8,"suggestions":"338"},{"ruleId":"339","severity":1,"message":"340","line":333,"column":222,"nodeType":"341","messageId":"342","endLine":333,"endColumn":223},{"ruleId":"303","severity":1,"message":"343","line":2,"column":17,"nodeType":"305","messageId":"306","endLine":2,"endColumn":23},{"ruleId":"303","severity":1,"message":"317","line":4,"column":8,"nodeType":"305","messageId":"306","endLine":4,"endColumn":14},{"ruleId":"326","severity":1,"message":"344","line":78,"column":8,"nodeType":"328","endLine":78,"endColumn":10,"suggestions":"345"},{"ruleId":"303","severity":1,"message":"317","line":4,"column":8,"nodeType":"305","messageId":"306","endLine":4,"endColumn":14},{"ruleId":"303","severity":1,"message":"346","line":13,"column":33,"nodeType":"305","messageId":"306","endLine":13,"endColumn":40},{"ruleId":"303","severity":1,"message":"347","line":33,"column":13,"nodeType":"305","messageId":"306","endLine":33,"endColumn":26},{"ruleId":"303","severity":1,"message":"348","line":33,"column":33,"nodeType":"305","messageId":"306","endLine":33,"endColumn":49},{"ruleId":"349","severity":1,"message":"350","line":69,"column":26,"nodeType":"341","messageId":"351","endLine":69,"endColumn":28},{"ruleId":"319","severity":1,"message":"323","line":135,"column":32,"nodeType":"321","messageId":"324","endLine":135,"endColumn":34},{"ruleId":"326","severity":1,"message":"352","line":197,"column":8,"nodeType":"328","endLine":197,"endColumn":10,"suggestions":"353"},{"ruleId":"303","severity":1,"message":"317","line":4,"column":8,"nodeType":"305","messageId":"306","endLine":4,"endColumn":14},{"ruleId":"303","severity":1,"message":"317","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":14},"no-native-reassign",["354"],"no-negated-in-lhs",["355"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'button' is assigned a value but never used.","'login_styles' is defined but never used.","'useState' is defined but never used.","'react' is defined but never used.","'signup_styles' is defined but never used.","'admin_styles' is defined but never used.","'questions_styles' is defined but never used.",["354"],["355"],"'styles' is defined but never used.","'Link' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","'questions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handlePossibleAnswersChange'. Either include it or remove the dependency array.","ArrayExpression",["356"],"React Hook useEffect has missing dependencies: 'fetchQuestionTypes' and 'fetchQuestions'. Either include them or remove the dependency array.",["357"],"React Hook useEffect has a missing dependency: 'location.state.field'. Either include it or remove the dependency array.",["358"],"'setFrom' is assigned a value but never used.","'setQuestionsAmount' is assigned a value but never used.","'saveTest' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchCertificateTemplates', 'fetchLanguages', 'fetchTestTypes', and 'location'. Either include them or remove the dependency array.",["359"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'filter' is defined but never used.","React Hook useEffect has a missing dependency: 'calcAverageGrade'. Either include it or remove the dependency array.",["360"],"'setTest' is assigned a value but never used.","'filterContent' is assigned a value but never used.","'setFilterContent' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","React Hook useEffect has missing dependencies: 'fetchStudentTests', 'location.state.dateRange', and 'location.state.field'. Either include them or remove the dependency array.",["361"],"no-global-assign","no-unsafe-negation",{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},"Update the dependencies array to be: [handlePossibleAnswersChange, possibleAnswers]",{"range":"374","text":"375"},"Update the dependencies array to be: [fetchQuestionTypes, fetchQuestions]",{"range":"376","text":"377"},"Update the dependencies array to be: [location.state.field]",{"range":"378","text":"379"},"Update the dependencies array to be: [fetchCertificateTemplates, fetchLanguages, fetchTestTypes, location]",{"range":"380","text":"381"},"Update the dependencies array to be: [calcAverageGrade]",{"range":"382","text":"383"},"Update the dependencies array to be: [fetchStudentTests, location.state.dateRange, location.state.field]",{"range":"384","text":"385"},[6572,6589],"[handlePossibleAnswersChange, possibleAnswers]",[7381,7383],"[fetchQuestionTypes, fetchQuestions]",[3407,3409],"[location.state.field]",[6521,6523],"[fetchCertificateTemplates, fetchLanguages, fetchTestTypes, location]",[2572,2574],"[calcAverageGrade]",[6626,6628],"[fetchStudentTests, location.state.dateRange, location.state.field]"]