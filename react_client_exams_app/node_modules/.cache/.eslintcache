[{"C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\index.js":"1","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\App.js":"2","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\Footer\\Footer.js":"3","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\Navbar\\Navbar.js":"4","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\Login\\Login.js":"5","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\Home\\Home.js":"6","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\ForgotPassword\\ForgotPassword.js":"7","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\Error404\\Error404.js":"8","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\About\\About.js":"9","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\SignUp\\SignUp.js":"10","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\Button\\Button.js":"11","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\HeroSection\\HeroSection.js":"12","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\MainPage.js":"13","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\Collapsible\\Collapsible.js":"14","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\Accordion\\Accordion.js":"15","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\utils\\content.js":"16","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\Admin\\ManageQuestions\\ManageQuestions.js":"17","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\Admin\\ManageTests\\ManageTests.js":"18","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\Admin\\TestReport\\TestReport.js":"19","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\index.js":"20","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\App.js":"21","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\shared\\Home\\Home.js":"22","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\shared\\Footer\\Footer.js":"23","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\shared\\Navbar\\Navbar.js":"24","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\shared\\Login\\Login.js":"25","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\shared\\About\\About.js":"26","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\shared\\ForgotPassword\\ForgotPassword.js":"27","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\MainPage.js":"28","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\shared\\Error404\\Error404.js":"29","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\shared\\HeroSection\\HeroSection.js":"30","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\shared\\Button\\Button.js":"31","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\shared\\Accordion\\Accordion.js":"32","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\TagsInput\\TagsInput.js":"33","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\QuestionTable\\QuestionTable.js":"34","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Student\\SignUp\\SignUp.js":"35","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\TestTable\\TestTable.js":"36","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\SummaryTable\\SummaryTable.js":"37","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\ManageQuestions\\ManageQuestions.js":"38","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\ManageQuestions\\CreateEditQuestion\\CreateEditQuestion.js":"39","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\Reports\\Reports.js":"40","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\ManageTests\\CreateEditTest\\CreateEditTest.js":"41","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\ReportByRespondentName\\ReportByRespondentName.js":"42","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\Reports\\TestReport\\TestReport.js":"43","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\ManageTests\\ManageTests.js":"44","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\utils\\AdminMenuPanel.js":"45","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\GradesTable\\GradesTable.js":"46","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\QuestionStatisticsTable\\QuestionStatisticsTable.js":"47","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\Filter\\Filter.js":"48","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\services\\tests.js":"49","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Student\\StartPage\\StartPage.js":"50","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Student\\AfterSubmit\\AfterSubmit.js":"51","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Student\\Test\\Test.js":"52","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Student\\ReviewTest\\ReviewTest.js":"53"},{"size":477,"mtime":1629648132056,"results":"54","hashOfConfig":"55"},{"size":1424,"mtime":1629620238506,"results":"56","hashOfConfig":"55"},{"size":4389,"mtime":1629648132056,"results":"57","hashOfConfig":"55"},{"size":2455,"mtime":1629581417614,"results":"58","hashOfConfig":"55"},{"size":905,"mtime":1629653496869,"results":"59","hashOfConfig":"55"},{"size":352,"mtime":1629653548350,"results":"60","hashOfConfig":"55"},{"size":305,"mtime":1629584623926,"results":"61","hashOfConfig":"55"},{"size":823,"mtime":1629647308529,"results":"62","hashOfConfig":"55"},{"size":271,"mtime":1629585036986,"results":"63","hashOfConfig":"55"},{"size":1072,"mtime":1629653365409,"results":"64","hashOfConfig":"55"},{"size":816,"mtime":1629616821397,"results":"65","hashOfConfig":"55"},{"size":873,"mtime":1629653531104,"results":"66","hashOfConfig":"55"},{"size":1216,"mtime":1629652665447,"results":"67","hashOfConfig":"55"},{"size":974,"mtime":1629628418411,"results":"68","hashOfConfig":"55"},{"size":610,"mtime":1629651399959,"results":"69","hashOfConfig":"55"},{"size":589,"mtime":1629656837435,"results":"70","hashOfConfig":"55"},{"size":1623,"mtime":1629654910060,"results":"71","hashOfConfig":"55"},{"size":1538,"mtime":1629666909992,"results":"72","hashOfConfig":"55"},{"size":643,"mtime":1629656783625,"results":"73","hashOfConfig":"55"},{"size":494,"mtime":1629982051235,"results":"74","hashOfConfig":"75"},{"size":6713,"mtime":1630777883697,"results":"76","hashOfConfig":"75"},{"size":352,"mtime":1629982051225,"results":"77","hashOfConfig":"75"},{"size":5104,"mtime":1630685470180,"results":"78","hashOfConfig":"75"},{"size":2579,"mtime":1630274984560,"results":"79","hashOfConfig":"75"},{"size":1342,"mtime":1630785375942,"results":"80","hashOfConfig":"75"},{"size":594,"mtime":1630705921865,"results":"81","hashOfConfig":"75"},{"size":1412,"mtime":1630149770494,"results":"82","hashOfConfig":"75"},{"size":3245,"mtime":1630520850764,"results":"83","hashOfConfig":"75"},{"size":1128,"mtime":1630271907311,"results":"84","hashOfConfig":"75"},{"size":801,"mtime":1630275104778,"results":"85","hashOfConfig":"75"},{"size":832,"mtime":1630159035242,"results":"86","hashOfConfig":"75"},{"size":683,"mtime":1630011657034,"results":"87","hashOfConfig":"75"},{"size":1212,"mtime":1630517617250,"results":"88","hashOfConfig":"75"},{"size":7215,"mtime":1630787322000,"results":"89","hashOfConfig":"75"},{"size":3475,"mtime":1630787238195,"results":"90","hashOfConfig":"75"},{"size":2012,"mtime":1630787885619,"results":"91","hashOfConfig":"75"},{"size":5221,"mtime":1630419650068,"results":"92","hashOfConfig":"75"},{"size":5781,"mtime":1630619029436,"results":"93","hashOfConfig":"75"},{"size":12947,"mtime":1630787741543,"results":"94","hashOfConfig":"75"},{"size":6730,"mtime":1630455896812,"results":"95","hashOfConfig":"75"},{"size":23949,"mtime":1630700309234,"results":"96","hashOfConfig":"75"},{"size":8582,"mtime":1630581052243,"results":"97","hashOfConfig":"75"},{"size":11720,"mtime":1630574057452,"results":"98","hashOfConfig":"75"},{"size":4148,"mtime":1630788375847,"results":"99","hashOfConfig":"75"},{"size":1036,"mtime":1630455756437,"results":"100","hashOfConfig":"75"},{"size":2345,"mtime":1630448636869,"results":"101","hashOfConfig":"75"},{"size":1514,"mtime":1630574389723,"results":"102","hashOfConfig":"75"},{"size":1344,"mtime":1630658468393,"results":"103","hashOfConfig":"75"},{"size":337,"mtime":1630459567496,"results":"104","hashOfConfig":"75"},{"size":5922,"mtime":1630777849203,"results":"105","hashOfConfig":"75"},{"size":2219,"mtime":1630777562688,"results":"106","hashOfConfig":"75"},{"size":13193,"mtime":1630786873140,"results":"107","hashOfConfig":"75"},{"size":142,"mtime":1630686365256,"results":"108","hashOfConfig":"75"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"cgc4jw",{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"111"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"111"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"111"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"111"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"111"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"1d4ufkt",{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"160"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"160"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"160"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"160"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"160"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"160"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"160"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"160"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"160"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"160"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"160"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"160"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"160"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"160"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"160"},{"filePath":"221","messages":"222","errorCount":3,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"160"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"160"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"160"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\index.js",[],["244","245"],"C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\App.js",[],"C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\Footer\\Footer.js",["246"],"import React, { useEffect } from 'react';\r\nimport { Button } from '../Button/Button';\r\nimport './Footer.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Footer() {\r\n\r\n    return (\r\n        <div className='footer-container'>\r\n            <section className=\"footer-subscription\">\r\n                <p className=\"footer-subscription-heading\">\r\n                    Join us to get notifications on any relevant new tests coming up\r\n                </p>\r\n\r\n                <p className=\"footer-subscription-text\">\r\n                    You can unsubscribe at any time.\r\n                </p>\r\n                <div className=\"input-areas\">\r\n                    <form>\r\n                        <input type=\"email\" name=\"email\" placeholder='Your email' className='footer-input'/>\r\n                        <Button buttonStyle='btn--outline'> Subscribe </Button>\r\n                    </form>\r\n                </div>\r\n            </section>\r\n            <div className='footer-links'>\r\n                <div className='footer-link-wrapper'>\r\n                    <div className='footer-link-items'>\r\n                        <h2> About Us </h2>\r\n                        <Link to='/about'> Additional Information </Link>\r\n                        <Link to='/terms-of-service'> Terms of Service </Link>\r\n                    </div>\r\n                    <div className='footer-link-items'>\r\n                        <h2> Contact Us </h2>\r\n                        <Link to='/contact'> Contact Information </Link>\r\n                        <Link to='https://www.paypal.com/donate?hosted_button_id=WLXFDL7PFQ7HN'> Support Us </Link>\r\n                    </div>\r\n                </div>\r\n                <div className='footer-link-wrapper'>\r\n                    <div className='footer-link-items'>\r\n                        <h2> Social Media </h2>\r\n                        <Link to='https://www.instagram.com/ofek.itzhaki/'> Instagram </Link>\r\n                        <Link to='https://www.facebook.com/ofek.itzhaki/'> Facebook </Link>\r\n                        <Link to='https://github.com/OfekItzhaki/'> Github </Link>\r\n                        <Link to='https://www.linkedin.com/in/ofekitzhaki/'> Linkedin </Link>\r\n                        <Link to='https://www.codegrepper.com/app/profile.php?id=43241/'> Grepper </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <section className=\"social-media\">\r\n                <div className=\"social-media-wrap\">\r\n                    <div className=\"footer-logo\">\r\n                        <Link to='/' className=\"social-logo\">\r\n                            OIES <i className=\"fab fa-typo3\"></i>\r\n                        </Link>\r\n                    </div>\r\n                    <small className=\"website-rights\"> OI Test System © 2021 </small>\r\n                    <div className=\"social-icons\">\r\n                        <Link to=\"\" onClick={() => SendToExternalLink('https://www.facebook.com/ofek.itzhaki/')} target='_blank' aria-label='Facebook' className=\"social-icon-link facebook\">\r\n                            <i className=\"fab fa-facebook-f\"></i>\r\n                        </Link>\r\n                        <Link to=\"\" onClick={() => SendToExternalLink('https://www.instagram.com/ofek.itzhaki/')} target='_blank' aria-label='Instagram' className=\"social-icon-link instagram\">\r\n                            <i className=\"fab fa-instagram\"></i>\r\n                        </Link>\r\n                        <Link to=\"\" onClick={() => SendToExternalLink('https://github.com/OfekItzhaki/')} target='_blank' aria-label='Github' className=\"social-icon-link github\">\r\n                            <i className=\"fab fa-github\"></i>\r\n                        </Link>\r\n                        <Link to=\"\" onClick={() => SendToExternalLink('https://www.linkedin.com/in/ofekitzhaki/')} target='_blank' aria-label='Linkedin' className=\"social-icon-link linkedin\">\r\n                            <i className=\"fab fa-linkedin\"></i>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n};  \r\n\r\nfunction SendToExternalLink(externalLink) {\r\n    if (typeof externalLink === 'string') {\r\n        // Open in the same window\r\n        // window.location.href = externalLink;\r\n\r\n        // Open in a new window\r\n        window.open(externalLink);\r\n    }\r\n}\r\n","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\Navbar\\Navbar.js",["247","248"],"import React, {useState, useEffect} from 'react'\r\nimport './Navbar.css';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../../../assets/components/Logo_v1.png';\r\nimport { Button } from '../Button/Button';\r\n\r\nexport default function Navbar() {\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMoblieMenu = () => setClick(false);\r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960) {\r\n            setButton(false)\r\n        } else {\r\n            setButton(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n\r\n    // Every time the window size changes\r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <>\r\n        <nav className=\"navbar\">\r\n            <div className=\"navbar-container\">\r\n                <Link to=\"/\" className=\"navbar-logo\" onClick={closeMoblieMenu}>\r\n                    <img className=\"logo-img\" src={logo} alt=\"logo\"></img>\r\n                </Link>\r\n                <div className=\"menu-icon\" onClick={handleClick}>\r\n                    <i id=\"icon\" className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n                </div>\r\n                <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                    <li className='nav-item'>\r\n                        <Link to='/' className='nav-links' onClick={closeMoblieMenu}>\r\n                            Home\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <Link to='/login' className='nav-links' onClick={closeMoblieMenu}>\r\n                            Login\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <Link to='/sign-up' className='nav-links' onClick={closeMoblieMenu}>\r\n                            Sign-up\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <Link to='/about' className='nav-links' onClick={closeMoblieMenu}>\r\n                            About\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                {/* {button && <Button link='/sign-up' buttonStyle='btn--outline'> Sign Up </Button>} */}\r\n            </div>\r\n        </nav>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\Login\\Login.js",["249","250"],"import React, { useState, useEffect } from 'react';\r\nimport { Button } from '../../../shared/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport login_styles from './Login.css'\r\n\r\nexport default function Login() {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    document.title = \"Login\";\r\n  }, [])\r\n\r\n  return (\r\n    <div className='login'>\r\n      <form className='login__form'>\r\n        <div className='form-content'>\r\n          <h1> Login </h1>\r\n          <input type='email' placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n          <input type='password' placeholder='Password' value={password} onChange={(e) => setPassword(e.target.value)} />\r\n          <button> \r\n            <Link to=\"/\"> Submit </Link> \r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\Home\\Home.js",["251"],"import React, { useState, useEffect } from 'react';\r\nimport '../../../../App.css';\r\nimport HeroSection from '../../../shared/HeroSection/HeroSection';\r\n\r\nexport default function Home () {\r\n    \r\n    useEffect(() => {\r\n        document.title = \"OI Exam System\";\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <HeroSection/>\r\n        </>\r\n    )\r\n};","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\ForgotPassword\\ForgotPassword.js",["252","253"],"import react from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nexport default function ForgotPassword() {\r\n\r\n  useEffect(() => {\r\n      document.title = \"Forgot Password\";\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='forgot-password'> Forgot Password </h1>\r\n    </div>\r\n  )\r\n};","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\Error404\\Error404.js",["254","255"],"import react from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\n// import styles from './Error404.css';\r\n\r\nexport default function Error404() {\r\n\r\n  useEffect(() => {\r\n      document.title = \"Page not found!\";\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n        <div id=\"clouds\">\r\n            <div class=\"styles.cloud x1\"></div>\r\n            <div class=\"styles.cloud x1_5\"></div>\r\n            <div class=\"styles.cloud x2\"></div>\r\n            <div class=\"styles.cloud x3\"></div>\r\n            <div class=\"styles.cloud x4\"></div>\r\n            <div class=\"styles.cloud x5\"></div>\r\n        </div>\r\n        <div class='styles.c'>\r\n            <div class='styles._404'>404</div>\r\n            <div class='styles._1'>THE PAGE</div>\r\n            <div class='styles._2'>WAS NOT FOUND</div>\r\n        </div>\r\n      </>\r\n  )\r\n};","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\About\\About.js",["256","257"],"import react from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nexport default function About() {\r\n\r\n  useEffect(() => {\r\n      document.title = \"About\";\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='about'> About </h1>\r\n    </div>\r\n  )\r\n};","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\shared\\SignUp\\SignUp.js",["258","259"],"import React, { useState, useEffect } from 'react';\r\nimport { Button } from '../../../shared/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport signup_styles from './SignUp.css';\r\n\r\nexport default function SignUp() {\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n      document.title = \"Sign-up\";\r\n  }, [])\r\n\r\n  return (\r\n    <div className='sign-up'>\r\n      <form className='sign-up__form'>\r\n        <div className='form-content'>\r\n          <h1> Sign-up </h1>\r\n          <input type='name' placeholder='Name' value={name} onChange={(e) => setName(e.target.value)} />\r\n          <input type='email' placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n          <input type='password' placeholder='Password' value={password} onChange={(e) => setPassword(e.target.value)} />\r\n          <button> \r\n            <Link to=\"/login\"> Submit </Link> \r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\Button\\Button.js",[],"C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\HeroSection\\HeroSection.js",[],"C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\MainPage.js",["260"],"import React, { useEffect } from    'react';\r\nimport { Accordion }        from    '../../../shared/Accordion/Accordion';\r\nimport { AdminMenu }        from    '../../../../utils/content';\r\nimport admin_styles from './MainPage.css';\r\n\r\nexport default function MainPage() {\r\n\r\n    useEffect(() => {\r\n        document.title = 'Main Page';\r\n    }, []);\r\n\r\n    return (\r\n        <div className='admin-mainpage'>\r\n            <div id='main-container'>\r\n                <div id=\"items-container\">\r\n                    <div id=\"select__container\">\r\n                        <label> Choose a field of study:  </label>\r\n                        <select id='field'>\r\n                            <option value='development'> Development </option>\r\n                        </select>\r\n                    </div>\r\n                    <div id='accordions__container'>\r\n                        <div className=\"accordion\">\r\n                            {AdminMenu.map(({ title, content }) => (\r\n                                <Accordion title={title} content={content} />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\Collapsible\\Collapsible.js",[],"C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\shared\\Accordion\\Accordion.js",[],"C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\utils\\content.js",[],"C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\Admin\\ManageQuestions\\ManageQuestions.js",["261"],"import React from 'react';\r\nimport questions_styles from './ManageQuestions.css';\r\n\r\nexport const ManageQuestions = ({\r\n    children, \r\n    type, \r\n}) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className='main-container'>\r\n            <div className=\"headers-container\">\r\n                <h1> Available questions for </h1>\r\n                <h1 className=\"type\"> {type} </h1>\r\n            </div>\r\n            <div className=\"filter-container\">\r\n                <label> Filter by tags or content: </label>\r\n                <input id='filter-content' type='text' placeholder='parameter'/>\r\n                <label id='filter-state'></label>\r\n                <label id='amount-filtered'></label>\r\n            </div>\r\n            <div className=\"table-container\">\r\n                <table id='questions-table'>\r\n                    <tr>\r\n                        <th> ID </th>\r\n                        <th> Question Text and Tags </th>\r\n                        <th> Last Update </th>\r\n                        <th> Question Type </th>\r\n                        <th> # of Tests </th>\r\n                    </tr>\r\n                    <tr >\r\n                        {/* {children.map(({ ID, Tnt, update, type, amount }) => (\r\n                            \r\n                        <td> {ID} </td>\r\n                        <td> {TnT} </td>\r\n                        <td> {update} </td>\r\n                        <td> {type} </td>\r\n                        <td> {amount} </td>\r\n                        <td> </td>\r\n                        ))} */}\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};","C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\Admin\\ManageTests\\ManageTests.js",[],"C:\\Users\\ofeki\\Google Drive\\Programming\\Javascript\\ReactJs\\Projects\\Exam System Project\\Project\\react_client_exams_app\\src\\components\\pages\\Admin\\TestReport\\TestReport.js",[],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\index.js",[],["262","263"],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\App.js",["264"],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\shared\\Home\\Home.js",["265"],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\shared\\Footer\\Footer.js",["266","267"],"\r\nimport React, { useEffect } from 'react';\r\nimport        { Button }    from '../Button/Button';\r\nimport        { Link }      from 'react-router-dom';\r\nimport styles               from './Footer.css';\r\n\r\nexport default function Footer({rights }) {\r\n\r\n    const handelIconClick = (externalLink) => {\r\n        if (typeof externalLink === 'string') {\r\n            // Open in the same window\r\n            // window.location.href = externalLink;\r\n    \r\n            // Open in a new window\r\n            window.open(externalLink);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='footer noselect'>\r\n            <section className=\"footer-subscription\">\r\n                <p className=\"footer-subscription-heading\">\r\n                    Join us to get notifications on any relevant new tests coming up\r\n                </p>\r\n\r\n                <p className=\"footer-subscription-text\">\r\n                    You can unsubscribe at any time.\r\n                </p>\r\n                <div className=\"input-areas\">\r\n                    <form>\r\n                        <input type=\"email\" name=\"email\" placeholder='Your email' className='footer-input'/>\r\n                        <Button buttonStyle='btn--outline'> Subscribe </Button>\r\n                    </form>\r\n                </div>\r\n            </section>\r\n            <div className='footer-links'>\r\n                <div className='footer-link-wrapper'>\r\n                    <div className='footer-link-items'>\r\n                        <h2> About Us </h2>\r\n                        <Link to='/about'           > Additional Information    </Link>\r\n                        <Link to='/terms-of-service'> Terms of Service          </Link>\r\n                    </div>\r\n                    <div className='footer-link-items'>\r\n                        <h2> Contact Us </h2>\r\n                        <Link to='/contact'                                                     > Contact Information   </Link>\r\n                        <Link to='https://www.paypal.com/donate?hosted_button_id=WLXFDL7PFQ7HN' > Support Us            </Link>\r\n                    </div>\r\n                </div>\r\n                <div className='footer-link-wrapper'>\r\n                    <div className='footer-link-items'>\r\n                        <h2> Social Media </h2>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.instagram.com/ofek.itzhaki/\")}                target='_blank' aria-label='Instagram'        > Instagram     </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.facebook.com/ofek.itzhaki/\")}                 target='_blank' aria-label='Facebook'         > Facebook      </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://github.com/OfekItzhaki/\")}                        target='_blank' aria-label='Github'           > Github        </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.linkedin.com/in/ofekitzhaki/\")}               target='_blank' aria-label='Linkedin'         > Linkedin      </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.codegrepper.com/app/profile.php?id=43241/\")}  target='_blank' aria-label='Grepper'          > Grepper       </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <section className=\"social-media\">\r\n                <div className=\"social-media-wrap\">\r\n                    <div className=\"footer-logo\">\r\n                        <Link to=\"/\" className=\"social-logo\">\r\n                            OIES <i className=\"fab fa-typo3\"></i>\r\n                        </Link>\r\n                    </div>\r\n                    <small className=\"website-rights\"> OI Exam System © 2021 </small>\r\n                    <div className=\"social-icons\">\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.facebook.com/ofek.itzhaki/\")}   target='_blank' aria-label='Facebook'   className=\"social-icon-link facebook\"   >\r\n                            <i className=\"fab fa-facebook-f\"></i>\r\n                        </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.instagram.com/ofek.itzhaki/\")}  target='_blank' aria-label='Instagram'  className=\"social-icon-link instagram\"  >\r\n                            <i className=\"fab fa-instagram\"></i>\r\n                        </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://github.com/OfekItzhaki/\")}          target='_blank' aria-label='Github'     className=\"social-icon-link github\"     >\r\n                            <i className=\"fab fa-github\"></i>\r\n                        </Link>\r\n                        <Link to=\"\" onClick={() => handelIconClick(\"https://www.linkedin.com/in/ofekitzhaki/\")} target='_blank' aria-label='Linkedin'   className=\"social-icon-link linkedin\"   >\r\n                            <i className=\"fab fa-linkedin\"></i>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n};  ","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\shared\\Navbar\\Navbar.js",["268","269","270"],"import styles                       from './Navbar.css';\r\nimport logo                         from '../../../assets/components/Logo_v1.png';\r\nimport React, {useState, useEffect} from 'react'\r\nimport        { Link }              from 'react-router-dom';\r\nimport        { Button }            from '../Button/Button';\r\n\r\nexport default function Navbar() {\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960) {\r\n            setButton(false)\r\n        } else {\r\n            setButton(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n\r\n    // Every time the window size changes\r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <>\r\n        <nav className=\"navbar noselect\">\r\n            <div className=\"navbar-container\">\r\n                <Link to=\"/\" className=\"navbar-logo\" onClick={closeMobileMenu}>\r\n                    <img className=\"logo-img\" src={logo} alt=\"logo\"></img>\r\n                </Link>\r\n                <div className=\"menu-icon\" onClick={handleClick}>\r\n                    <i id=\"icon\" className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n                </div>\r\n                <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                    <li className='nav-item'>\r\n                        <Link to='/'        className='nav-links'   onClick={closeMobileMenu}>\r\n                            Home\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <Link to='/login'   className='nav-links'   onClick={closeMobileMenu}>\r\n                            Login\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <Link to='/sign-up' className='nav-links'   onClick={closeMobileMenu}>\r\n                            Sign-up\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <Link to='/about'   className='nav-links'   onClick={closeMobileMenu}>\r\n                            About\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                {/* {button && <Button link='/sign-up' buttonStyle='btn--outline'> Sign Up </Button>} */}\r\n            </div>\r\n        </nav>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\shared\\Login\\Login.js",["271"],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\shared\\About\\About.js",["272","273"],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\shared\\ForgotPassword\\ForgotPassword.js",["274","275","276"],"import React, { useState, useEffect } from 'react';\r\nimport { Button } from '../../../shared/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './ForgotPassword.css';\r\n\r\nexport default function ForgotPassword() {\r\n\r\n  const [ previousPassword,   setPreviousPassword]  = useState(\"\");\r\n  const [ newPassword,        setNewPassword]       = useState(\"\");\r\n  const [ verifyNewPassword,  setVerifyNewPassword] = useState(\"\");\r\n\r\n  const handleSubmit = () => {\r\n    console.log(\"Submit\");\r\n  }\r\n\r\n  useEffect(() => {\r\n      document.title = \"Forgot Password\";\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"forgot_password noselect\">\r\n      <h1 className=\"page__header\"> Forgot Password </h1>\r\n      <form className=\"forgot_password__form\">\r\n        <div className=\"form_content__container\">\r\n          <input type=\"password\"  placeholder=\"Previous password\" value={previousPassword}   onChange={(e) => setPreviousPassword(e.target.value)}  />\r\n          <input type=\"email\"     placeholder=\"New password\"      value={newPassword}        onChange={(e) => setNewPassword(e.target.value)}       />\r\n          <input type=\"password\"  placeholder=\"Verify Password\"   value={verifyNewPassword}  onChange={(e) => setVerifyNewPassword(e.target.value)} />\r\n        </div>\r\n        <button id=\"submit__button\" type=\"submit\" onClick={handleSubmit}> Submit </button>\r\n      </form>\r\n    </div>\r\n  )\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\MainPage.js",["277"],"import React,   { useEffect, useState  }   from    'react';\r\nimport          { AdminMainPageMenu    }   from    '../../../../utils/AdminMenuPanel';\r\nimport          { useHistory           }   from    'react-router-dom';\r\nimport styles                              from    './MainPage.css';\r\n\r\nexport default function MainPage() {\r\n\r\n    const [ fields,     setFields       ] = useState(null);\r\n    const [ field,      setField        ] = useState(null); \r\n\r\n    const history = useHistory();\r\n\r\n    const handleFieldChange = (f) => {\r\n        setField(f);\r\n        console.log(f);\r\n    }\r\n    \r\n    const handleItemClick = (link, field) => {\r\n        history.push({\r\n            pathname: `${link}`,\r\n            // search: '?update=true',  // query string\r\n            state: {  // location state\r\n                // update: true, \r\n              field: field\r\n            },\r\n        }); \r\n    }\r\n\r\n    const fetchFields = () => {\r\n        fetch(\"http://localhost:8000/fields\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n            setFields(data);\r\n            setField(data[0].fieldTitle);\r\n\r\n            process.env.REACT_APP_CURRENT_FIELD = data[0];\r\n        })\r\n        .catch((err) => console.log('error fetching tests:' + err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = 'Admin panel';\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n    \r\n        if (isMounted) {                // add conditional check\r\n            fetchFields();\r\n        }\r\n    \r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"admin_mainpage noselect\">\r\n            <div id=\"main__container\">\r\n                <div id=\"header__container\">\r\n                    <h1> Administrator panel </h1>\r\n                </div>\r\n                <div id=\"content__container\">\r\n                    <table id=\"content__table\">\r\n                        <tbody>\r\n                            <tr id=\"select__tr\">\r\n                                <td id=\"select__td\">\r\n                                    <label id=\"label__choose\"> Choose a field of study: </label>\r\n                                    <select id=\"fields__select\" onChange={(e) => handleFieldChange(e.target.value)}>\r\n                                        { fields && fields.map((field) => (\r\n                                            <option key={field.fieldTitle} value={field.fieldTitle}> {field.fieldTitle} </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            { AdminMainPageMenu.map((child) => (\r\n                                <tr key={child.title}>\r\n                                    <td> <button className=\"menu_item like_link_button\" onClick={() => handleItemClick(child.link, field)}> {child.title} </button> </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\shared\\Error404\\Error404.js",["278","279"],"import react from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport styles from './Error404.module.css';\r\n\r\nexport default function Error404() {\r\n\r\n  useEffect(() => {\r\n      document.title = \"Page not found!\";\r\n      document.body.style.backgroundColor = \"#353535\";\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n      <div className=\"error404 noselect\">\r\n        <div id={styles.clouds}>\r\n            <div className={`${styles.cloud} ${styles.x1}`}   ></div>\r\n            <div className={`${styles.cloud} ${styles.x1_5}`} ></div>\r\n            <div className={`${styles.cloud} ${styles.x2}`}   ></div>\r\n            <div className={`${styles.cloud} ${styles.x3}`}   ></div>\r\n            <div className={`${styles.cloud} ${styles.x4}`}   ></div>\r\n            <div className={`${styles.cloud} ${styles.x5}`}   ></div>\r\n        </div>\r\n        <div className= {`${styles.c}`}>\r\n            <div className={styles._404}  >404</div>\r\n            <hr/>\r\n            <div className={styles._1}    >THE PAGE</div>\r\n            <div className={styles._2}    >WAS NOT FOUND</div>\r\n        </div>\r\n      </div>\r\n      </>\r\n  )\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\shared\\HeroSection\\HeroSection.js",["280"],"import React            from 'react';\r\nimport styles           from './HeroSection.css';\r\nimport { Button }       from '../Button/Button';\r\n\r\nexport default function HeroSection() {\r\n    return (\r\n        <div className='hero__container noselect'>\r\n            <video src=\"/videos/video-1.mp4\" autoPlay loop muted />\r\n            <h1>    OI Exam System                          </h1>\r\n            <p>     It appears you are not logged in.       </p>\r\n            <div className='hero__btns'>\r\n                <Button className='btns' link='/login'      buttonStyle='btn--outline' buttonSize='btn--large'> Login   </Button>\r\n                <Button className='btns' link='/sign-up'    buttonStyle='btn--primary' buttonSize='btn--large'> Sign Up </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\shared\\Button\\Button.js",["281"],"import React                    from 'react'\r\nimport styles                   from './Button.css';\r\nimport { Link }                 from 'react-router-dom';\r\n\r\nconst STYLES = ['btn--primary', 'btn--outline'];\r\nconst SIZES = ['btn--medium', 'btn--large'];\r\n\r\nexport const Button = (props) => {\r\n    const checkButtonStyle = STYLES.includes(props.buttonStyle) ? props.buttonStyle : STYLES[0];\r\n    const checkButtonSize  = SIZES.includes(props.buttonSize)   ? props.buttonSize  : SIZES[0];\r\n    const checkLink        = props.link != null ? props.link : '/';\r\n\r\n    return (\r\n        <Link to={checkLink} className='btn-mobile'>\r\n            <button className={`btn ${checkButtonStyle} ${checkButtonSize}`} onClick={props.onClick} type={props.type}>\r\n                {props.children}\r\n            </button>\r\n        </Link>\r\n    )\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\shared\\Accordion\\Accordion.js",["282"],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\TagsInput\\TagsInput.js",["283"],"import React, { useState }  from 'react';\r\nimport styles               from '../TagsInput/TagsInput.scss';\r\n\r\nexport const TagsInput = props => {\r\n\r\n    const [tags, setTags] = useState([]);\r\n\r\n    const addTags = event => {\r\n        if (event.key === \"Enter\" && event.target.value !== \"\") {\r\n            let newTags = [...tags, event.target.value];\r\n            setTags(newTags);\r\n            props.tags(newTags);\r\n            event.target.value = \"\";\r\n        }\r\n    };\r\n\r\n    const removeTags = index => {\r\n        let newTags = [...tags.filter(tag => tags.indexOf(tag) !== index)];\r\n        setTags(newTags);\r\n        props.tags(newTags);\r\n    };\r\n    \r\n    return (\r\n        <div id=\"tags-input\">\r\n            <input type=\"text\" onKeyUp={event => addTags(event)} placeholder=\"Press enter to add tags\" />\r\n            \r\n            <div id=\"tags\">\r\n                {tags.map((tag, index) => (\r\n                    <li className=\"tag\" key={index}>\r\n                        <span className=\"tag-title\"> {tag} </span>\r\n                        <i className=\"tag-close-icon\" onClick={() => removeTags(index)} > x </i>\r\n                    </li>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\QuestionTable\\QuestionTable.js",["284"],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Student\\SignUp\\SignUp.js",["285","286","287"],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\TestTable\\TestTable.js",["288"],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\SummaryTable\\SummaryTable.js",["289"],"import styles                   from './SummaryTable.css';\r\n\r\nexport const SummaryTable = ({ test, dateRange, submissions, numPassed, passingPercentage, average, median, countNumberOfQuestions }) => {\r\n\r\n    return (\r\n        <>\r\n            <table id=\"test__table\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <label>                                     Test name:                            </label> \r\n                            <label key={test && test.testName} className=\"summary_label__bold\">        {test && test.testName}                </label> \r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr> \r\n                        <td> \r\n                            <label>                                     Test ID:                                </label> \r\n                            <label key={test && test.testID} className=\"summary_label__bold\">          {test && test.testID}                    </label> \r\n                        </td> \r\n                    </tr>\r\n                    <tr> \r\n                        <td> \r\n                            <label>                                     Test code:                              </label> \r\n                            <label key={test && test.testCode} className=\"summary_label__bold\">        {test && test.testCode}                  </label> \r\n                        </td> \r\n                    </tr>\r\n                    <tr> \r\n                        <td> \r\n                            <label>                                     Test type:                              </label> \r\n                            <label key={test && test.testType} className=\"summary_label__bold\">        {test && test.testType}                  </label> \r\n                        </td> \r\n                    </tr>\r\n                    <tr> \r\n                        <td> \r\n                            <label>                                     Number of questions:                    </label> \r\n                            <label key={test && test.questions} className=\"summary_label__bold\">       {countNumberOfQuestions()}               </label> \r\n                        </td> \r\n                    </tr>\r\n                    <tr> \r\n                        <td> \r\n                            <label>                                     Passing grade:                          </label>\r\n                            <label key={test && test.passingGrade} className=\"summary_label__bold\">    {test && test.passingGrade}              </label> \r\n                        </td> \r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <table id=\"additional_info__table\">\r\n                <tbody>\r\n                    <tr> \r\n                        <td> \r\n                            <label>                                     Date range:                             </label>\r\n                            <label key={dateRange} className=\"summary_label__bold\">                    {dateRange}                              </label> \r\n                        </td> \r\n                    </tr>\r\n                    <tr> \r\n                        <td> \r\n                            <label>                                     Number of submissions:                  </label>\r\n                            <label key={dateRange} className=\"summary_label__bold\">                    {submissions}                              </label> \r\n                        </td> \r\n                    </tr>\r\n                    <tr > \r\n                        <td> \r\n                            <label>                                     Number of respondents passed:           </label>\r\n                            <label key={dateRange} className=\"summary_label__bold\">                    {numPassed}                              </label> \r\n                        </td> \r\n                    </tr>\r\n                    <tr> \r\n                        <td> \r\n                            <label>                                     Passing percentage:                     </label>\r\n                            <label key={dateRange} className=\"summary_label__bold\">                    {passingPercentage}                              </label> \r\n                        </td> \r\n                    </tr>\r\n                    <tr> \r\n                        <td> \r\n                            <label>                                     Average grade:                          </label>\r\n                            <label key={dateRange} className=\"summary_label__bold\">                    {average}                              </label> \r\n                        </td> \r\n                    </tr>\r\n                    <tr> \r\n                        <td> \r\n                            <label>                                     Median grade:                           </label>\r\n                            <label key={dateRange} className=\"summary_label__bold\">                    {median}                              </label> \r\n                        </td> \r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n};\r\n","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\ManageQuestions\\ManageQuestions.js",["290","291","292","293","294"],"import React, { useEffect, useState         }   from 'react';\r\nimport        { QuestionTable               }   from '../../../../Admin/QuestionTable/QuestionTable';\r\nimport        { useHistory, useLocation     }   from 'react-router-dom';\r\nimport        { Filter                      }   from '../../../../Admin/Filter/Filter';\r\nimport        { fetchTests                  }   from '../../../../../services/tests';\r\nimport styles                                   from './ManageQuestions.css';\r\n\r\nexport default function ManageQuestions() {\r\n\r\n    // ---------------------------- Fetch Info Hooks ---------------------------\r\n\r\n    const [ questions,          setQuestions            ]  = useState(null);\r\n    const [ tags,               setTags                 ]  = useState(null);\r\n\r\n    const [ field,              setField                ]  = useState(null);\r\n    const [ tests,              setTests                ]  = useState(null);\r\n\r\n    // ----------------------------- Content Hooks -----------------------------    \r\n\r\n    const [ filterStatus,       setFilterStatus         ]  = useState(false);\r\n    const [ filterByTags,       setFilterByTags         ]  = useState(true);\r\n\r\n    const [ filteredQuestions,  setFilteredQuestions    ]  = useState([]);\r\n\r\n    // ----------------------------------------------------------------------------\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const handleDuplicate = () => {\r\n        \r\n    }\r\n\r\n    const handleEdit = () => {\r\n\r\n    }\r\n\r\n    const handleShow = () => {\r\n\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        const newQuestions = questions.filter(question => question.id !== id);\r\n        setQuestions(newQuestions);\r\n    }\r\n    \r\n    const handleShowAll = () => {\r\n        \r\n    }\r\n    \r\n    const handleFilterByChange = (value) => {\r\n        if (value === \"tags\") setFilterByTags(true);\r\n        else setFilterByTags(false);\r\n    }\r\n    \r\n    const handleBack = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const handleNewQuestion = () => {\r\n        history.push({\r\n            pathname: \"/admin/create-question\",\r\n            // search: '?update=true',  // query string\r\n            state: {  // location state\r\n                // update: true, \r\n              field: field,\r\n              question: null\r\n            },\r\n        }); \r\n    }\r\n\r\n    const handleFilterContentChange = (value) => {\r\n        \r\n        if (value === \"\") setFilterStatus(false);\r\n        else setFilterStatus(true);\r\n\r\n        let newQuestionList = questions;\r\n        setFilteredQuestions(newQuestionList.filter((question) => { \r\n            \r\n            let contains = false;\r\n\r\n            if (filterByTags === true) {\r\n                question.tags.map((tag) => {\r\n                    if (tag.toLowerCase().includes(value)) contains = true;\r\n                });\r\n            } else {\r\n                if (question.title.toLowerCase().includes(value)) contains = true;\r\n            }\r\n\r\n            if (contains === true) return question;\r\n            else return null;\r\n\r\n        }));\r\n    }\r\n\r\n    const fetchTests = () => {\r\n        fetch(\"http://localhost:8000/tests\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n          setTests(data); \r\n        })\r\n        .catch((err) => console.log('error fetching tests:' + err))\r\n    }\r\n\r\n    const fetchTags = () => {\r\n        fetch(\"http://localhost:8000/tags\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n          setTags(data); \r\n        })\r\n        .catch((err) => console.log('error fetching tags:' + err));\r\n      }\r\n\r\n    const fetchQuestions = () => {\r\n        fetch(\"http://localhost:8000/questions\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            setQuestions(data)\r\n            setFilteredQuestions(data);\r\n        })\r\n        .catch((err) => console.log('error fetching questions:' + err));\r\n      }\r\n\r\n    // Meant for fetching the necessary information on first render\r\n    useEffect(() => {\r\n        document.title = \"Manage Questions\";\r\n\r\n        let isMounted = true;           // note mutable flag\r\n\r\n        if (isMounted) {                // add conditional check \r\n            fetchQuestions();\r\n            fetchTags();\r\n            fetchTests();\r\n        }\r\n\r\n        if (location) {\r\n            if (location.state.field) setField(location.state.field);\r\n          }\r\n\r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"manage_questions noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1 className=\"page__header\"> Available Questions for {field ? field : \"\"} </h1>\r\n            </div>\r\n\r\n            { questions && filteredQuestions && <Filter filterStatus={filterStatus} totalAmount={questions.length} filteredAmount={filteredQuestions.length} \r\n                handleFilterByChange={handleFilterByChange} handleFilterContentChange={handleFilterContentChange}/> }\r\n\r\n            { <QuestionTable manageQuestions={true} questions={filteredQuestions} filteredQuestions={filteredQuestions} tests={tests} handleShow={handleShow} \r\n                handleEdit={handleEdit} handleDuplicate={handleDuplicate} handleDelete={handleDelete} handleShowAll={handleShowAll} /> }\r\n\r\n            <div id=\"buttons__container\">\r\n                <button className=\"regular__button\" onClick={() =>   handleBack()          }>  {`<<` } Back         </button>\r\n                <button className=\"regular__button\" onClick={() =>   handleNewQuestion()   }>  New Question {`>>`}  </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\ManageQuestions\\CreateEditQuestion\\CreateEditQuestion.js",["295","296","297","298","299","300"],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\Reports\\Reports.js",["301","302"],"import React, { useEffect, useState     }   from 'react';\r\nimport        { useHistory, useLocation }   from 'react-router-dom';\r\nimport styles                               from './Reports.css';\r\n\r\nexport default function Reports() {\r\n\r\n    // ------------------------ Fetch Info Hooks -----------------------\r\n\r\n    const [ tests,       setTests       ]   = useState(null);\r\n    const [ field,       setField       ]   = useState(null);\r\n\r\n    // ------------------------- Content Hooks -------------------------\r\n\r\n    const [ testChosen,  setChosenTest  ]   = useState(null);\r\n    const [ dateFrom,    setDateFrom    ]   = useState(\"\");\r\n    const [ dateTo,      setDateTo      ]   = useState(\"\");\r\n    const [ dateRange,   setDateRange   ]   = useState(\"\");\r\n    const [ past,        setPast        ]   = useState(true);\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const handleDateCheckChange = (checked) => {\r\n        setPast(checked);\r\n\r\n        if (checked) {\r\n            document.getElementById(\"date__from\").value = new Date().toISOString().substring(0, 10); \r\n            document.getElementById(\"date__to\").value = new Date().toISOString().substring(0, 10);\r\n            setDateRange(`${document.getElementById(\"date__from\").value} - ${document.getElementById(\"date__to\").value}`)\r\n        } else {\r\n            setDateRange(\"any date in the past\");\r\n        }\r\n    }\r\n\r\n    const handleTestChange = (id) => {\r\n        setChosenTest(tests.find((test) => test.testID.toString() === id));\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        generateReport();\r\n    }\r\n\r\n    const generateReport = () => {\r\n        console.log(\"generate report\");\r\n        setDateRange(dateFrom - dateTo);\r\n\r\n        history.push({\r\n            pathname: '/admin/test-report',\r\n            // search: '?update=true',  // query string\r\n            state: {  // location state\r\n                // update: true,\r\n              test: testChosen,\r\n              dateRange: dateRange, \r\n              field: field\r\n            },\r\n        }); \r\n    }\r\n\r\n    const fetchTests = () => {\r\n        fetch(\"http://localhost:8000/tests\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n          setTests(data);\r\n\r\n          setChosenTest(data[0]);\r\n          setDateRange(\"any date in the past\");\r\n        })\r\n        .catch((err) => console.log('error fetching tests:' + err))\r\n    }\r\n    \r\n    useEffect(() => {\r\n        document.title = \"Reports\";\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n    \r\n        if (isMounted) {                // add conditional check\r\n            fetchTests();\r\n        }\r\n\r\n        let today = new Date();\r\n        let todayDate = today.toISOString().split(\"T\")[0];\r\n        document.getElementById(\"date__from\").setAttribute(\"min\", \"1999-01-01\");\r\n        document.getElementById(\"date__from\").setAttribute(\"max\", todayDate);\r\n\r\n        document.getElementById(\"date__to\").setAttribute(\"min\", \"1999-01-01\");\r\n        document.getElementById(\"date__to\").setAttribute(\"max\", todayDate);\r\n\r\n        setField(location.state.field);  // for location state\r\n    \r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"reports noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1 className=\"page__header\"> Test Report for {field} </h1>\r\n            </div>\r\n            <div id=\"content__container\">\r\n                <form id=\"report__form\" onSubmit={handleSubmit}>\r\n                    <table id=\"content__table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <label id=\"label__test_name\">       Select Test:            </label>\r\n                                </td>\r\n\r\n                                <td> <select id=\"test__select\" onChange={(e) => handleTestChange(e.target.value)}>\r\n                                     {tests && tests.map((test) => {\r\n                                         \r\n                                         return (\r\n                                             <option key={test.testID} value={test.testID}> {test.testName} </option>\r\n                                         )\r\n                                    })}\r\n                                     </select> </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label id=\"label__date_range\">      Date Range:             </label>\r\n                                </td>\r\n                                <td>\r\n                                    <label id=\"label__from\">            From:                   </label>\r\n                                    <input id=\"date__from\"  type=\"date\" onChange={ (e) => setDateFrom(e.target.value) }  disabled={past}  required/>\r\n                                </td>\r\n                                <td>\r\n                                    <label id=\"label__to\">              To:                     </label>\r\n                                    <input id=\"date__to\"    type=\"date\" onChange={ (e) => setDateTo(e.target.value)   }  disabled={past}  required/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>  </td>\r\n                                <td>\r\n                                    <label id=\"label__OR\">              OR                      </label>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>  </td>\r\n                                <td>\r\n                                    <input type=\"checkbox\" checked={past} onChange={ (e) => handleDateCheckChange(e.target.checked) } />\r\n                                    <label id=\"label__past\">                Any date in the past        </label>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div id=\"button__container\">\r\n                        <button className=\"regular__button\" onClick={() => back() }>     {`<<` } Back                </button>\r\n                        <button className=\"regular__button\" type=\"submit\">               Generate Report             </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\ManageTests\\CreateEditTest\\CreateEditTest.js",["303","304","305","306","307","308","309","310","311"],"import React, { useState, useEffect     }   from  'react';\r\nimport        { HashLink as Link        }   from  'react-router-hash-link';\r\nimport        { useHistory, useLocation }   from  'react-router-dom';\r\nimport        { Filter                  }   from '../../../../../Admin/Filter/Filter';\r\nimport        { QuestionTable           }   from '../../../../../Admin/QuestionTable/QuestionTable';\r\nimport styles                               from  './CreateEditTest.css';\r\n\r\nexport default function CreateEditTest() {\r\n\r\n  // -------------------------------------------- Fetch Info Hooks --------------------------------------------\r\n\r\n  const [ field,                      setField                  ] = useState(null);\r\n  const [ test,                       setTest                   ] = useState(null);\r\n\r\n  const [ tests,                      setTests                  ] = useState(null);\r\n  const [ testTypes,                  setTestTypes              ] = useState(null);\r\n  const [ certificateTemplates,       setCertificateTemplates   ] = useState(null);\r\n  const [ languages,                  setLanguages              ] = useState(null);\r\n  const [ questions,                  setQuestions              ] = useState(null);\r\n  const [ filteredQuestions,          setFilteredQuestions      ] = useState(null);\r\n\r\n  // -------------------------------------------- Top Content Hooks -------------------------------------------\r\n\r\n  // *General Details Table*\r\n  const [ testID,                     setTestID                 ] = useState(0);\r\n  const [ testCode,                   setTestCode               ] = useState(0);\r\n  const [ testType,                   setTestType               ] = useState(\"\");\r\n  const [ testName,                   setTestName               ] = useState(\"\");\r\n  const [ language,                   setLanguage               ] = useState(\"\");\r\n  const [ passingGrade,               setPassingGrade           ] = useState(\"\");\r\n  const [ header,                     setHeader                 ] = useState(\"\");\r\n  const [ messageSuccess,             setMessageSuccess         ] = useState(\"\");\r\n  const [ messageFailure,             setMessageFailure         ] = useState(\"\");\r\n  const [ version,                    setVersion                ] = useState(1);\r\n  const [ certificateTemplateID,      setCertificateTemplateID  ] = useState(0);\r\n  const [ reviewTest,                 setReviewTest             ] = useState(false);\r\n  const [ lastUpdate,                 setLastUpdate             ] = useState(Date.now());\r\n  const [ link,                       setLink                   ] = useState(\"\");\r\n\r\n  // *Email Delivery Table*         \r\n  // Status Container          \r\n  const [ status,                     setStatus                 ] = useState(\"OFF\");\r\n  const [ from,                       setFrom                   ] = useState(\"\");\r\n  const [ cc,                         setCC                     ] = useState(\"\");\r\n  const [ bcc,                        setBCC                    ] = useState(\"\");    \r\n\r\n  // Passing the Test Container\r\n  const [ passingSubject,             setPassingSubject         ] = useState(\"\");\r\n  const [ passingBody,                setPassingBody            ] = useState(\"\");    \r\n\r\n  // Failing the Test Container\r\n  const [ failingSubject,             setFailingSubject         ] = useState(\"\");   \r\n  const [ failingBody,                setFailingBody            ] = useState(\"\");    \r\n\r\n  // -------------------------------------------- Bottom Content Hooks ----------------------------------------\r\n\r\n  // *Filter Container*\r\n  const [ filterStatus,               setFilterStatus           ]  = useState(false);\r\n  const [ filterByTags,               setFilterByTags           ]  = useState(true);\r\n\r\n  // *Questions Table\r\n  const [ questionsAmount,            setQuestionsAmount        ] = useState(0); \r\n  const [ selectedQuestions,          setSelectedQuestions      ] = useState([]);\r\n\r\n  // ----------------------------------------------------------------------------------------------------------\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  \r\n  const handleBack = () => {\r\n    history.goBack();\r\n  }\r\n  \r\n  const handleShow = () => {\r\n    \r\n  }\r\n  \r\n  const handleShowSelected = () => {\r\n    \r\n  }\r\n\r\n  const handleShowAll = () => {\r\n    \r\n  }\r\n\r\n  const initialStates = () => {\r\n\r\n  }\r\n\r\n  const handleSelectedQuestion = (newSelectedQuestions) => {\r\n    setSelectedQuestions(newSelectedQuestions);\r\n  }\r\n\r\n  const handleFilterByChange = (value) => {\r\n    if (value === \"tags\") setFilterByTags(true);\r\n    else setFilterByTags(false);\r\n  }\r\n\r\n  const handleFilterContentChange = (value) => {\r\n        \r\n    if (value === \"\") setFilterStatus(false);\r\n    else setFilterStatus(true);\r\n\r\n    let newQuestionList = questions;\r\n    setFilteredQuestions(newQuestionList.filter((question) => { \r\n        \r\n        let contains = false;\r\n\r\n        if (filterByTags === true) {\r\n            question.tags.map((tag) => {\r\n                if (tag.toLowerCase().includes(value)) contains = true;\r\n            });\r\n        } else {\r\n            if (question.title.toLowerCase().includes(value)) contains = true;\r\n        }\r\n\r\n        if (contains === true) return question;\r\n        else return null;\r\n\r\n    }));\r\n}\r\n\r\n  const handleStatus = (value) => {\r\n    if (value === \"\") setStatus(\"OFF\");\r\n    else setStatus(\"ON\");\r\n  }\r\n\r\n  const handleFromChange = (value) => {\r\n    handleStatus(value);\r\n    setFrom(value);\r\n  }\r\n\r\n  const generateRandomID = (length) => {\r\n\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const generateRandomLink = () => {\r\n    let length = 10;\r\n    let randomID = generateRandomID(length);\r\n    setTestCode(randomID);\r\n    let randomLink = `/student/${randomID}`\r\n\r\n    tests.map((test) => {\r\n      if (test.testCode === randomID) {\r\n            randomID = generateRandomID(length);\r\n            setTestCode(randomID);\r\n            randomLink = `/student/${randomID}`\r\n      }\r\n    });\r\n\r\n    return randomLink;\r\n  }\r\n\r\n  const handleSubmit = (event) => {  \r\n    event.preventDefault();\r\n    let link = generateRandomLink();\r\n    setLink(link);\r\n\r\n    submitTest(link);\r\n  }\r\n\r\n  const submitTest = (link) => {\r\n    console.log(testID);\r\n    fetch('http://localhost:8000/tests', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      testID: testID,\r\n      testCode: testCode,\r\n      testName: testName,\r\n      testType: testType,\r\n      language: language,\r\n      questions: selectedQuestions,\r\n      passingGrade: passingGrade,\r\n      header: header,\r\n      messageSuccess: messageSuccess,\r\n      messageFailure: messageFailure,\r\n      passingSubject: passingSubject,\r\n      passingBody: passingBody,\r\n      failingSubject: failingSubject,\r\n      failingBody: failingBody,\r\n      link: link,\r\n      version: version,\r\n      reviewTest: reviewTest,\r\n      lastUpdate: lastUpdate\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => { \r\n        console.log(data); \r\n        // initialState(); \r\n      })\r\n      .catch((err) => console.log(`error ${err}`))\r\n  }\r\n\r\n  const caseEditTest = () => {\r\n\r\n    let editTest = location.state.test;\r\n    setTest(editTest);\r\n    setTestID(editTest.testID);\r\n    setTestCode(editTest.testCode);\r\n    setTestType(editTest.testType);\r\n    setTestName(editTest.testName);\r\n    setLanguage(editTest.language);\r\n    setSelectedQuestions(editTest.questions);\r\n    setPassingGrade(editTest.passingGrade);\r\n    setHeader(editTest.header);\r\n    setMessageSuccess(editTest.messageSuccess);\r\n    setMessageFailure(editTest.messageFailure);\r\n    setPassingSubject(editTest.passingSubject);\r\n    setPassingBody(editTest.passingBody);\r\n    setFailingSubject(editTest.failingSubject);\r\n    setFailingBody(editTest.failingBody);\r\n    setLink(editTest.link);\r\n    setVersion(editTest.version + 1);\r\n    setCertificateTemplateID(editTest.certificateTemplate);\r\n    setReviewTest(editTest.reviewTest);\r\n    setLastUpdate(editTest.lastUpdate);\r\n  }\r\n\r\n  const fetchLanguages = () => {\r\n    fetch(\"http://localhost:8000/languages\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setLanguages(data); \r\n      setLanguage(language !== \"\" ? language : data[0].languageType); \r\n    })\r\n    .catch((err) => console.log('error fetching languages:' + err))\r\n  }\r\n\r\n  const fetchTestTypes = () => {\r\n    fetch(\"http://localhost:8000/testTypes\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setTestTypes(data); \r\n      setTestType(testType !== \"\" ? testType : data[0].typeName); \r\n    })\r\n    .catch((err) => console.log('error fetching test types:' + err))\r\n  }\r\n\r\n  const fetchCertificateTemplates = () => {\r\n    fetch(\"http://localhost:8000/certificateTemplates\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setCertificateTemplates(data); \r\n      setCertificateTemplateID(certificateTemplateID !== \"\" ? certificateTemplateID : data[0].templateID); \r\n    })\r\n    .catch((err) => console.log('error fetching certificate templates:' + err))\r\n  }\r\n\r\n  const fetchQuestions = () => {\r\n    fetch(\"http://localhost:8000/questions\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setQuestions(data);\r\n      setFilteredQuestions(data); \r\n    })\r\n    .catch((err) => console.log('error fetching questions:' + err))\r\n  }\r\n\r\n  const fetchTests = () => {\r\n    fetch(\"http://localhost:8000/tests\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setTests(data); \r\n      if (test === null) setTestID(data[data.length - 1].testID + 1); \r\n    })\r\n    .catch((err) => console.log('error fetching test types:' + err))\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = `${test === null ? \"Create\" : \"Edit\"} Question`;\r\n\r\n    if (location.state) {\r\n\r\n      if (location.state.field) {\r\n        console.log(location.state.field);\r\n        setField(location.state.field);\r\n      }\r\n\r\n      if (location.state.test) {\r\n        console.log(location.state.test);\r\n        caseEditTest();\r\n      }\r\n    }\r\n  }, [location.state])\r\n\r\n    // Meant for fetching the necessary information on first render\r\n  useEffect(() => {\r\n    let isMounted = true;           // note mutable flag\r\n\r\n    if (isMounted) {                // add conditional check\r\n      fetchLanguages();\r\n      fetchTestTypes();\r\n      fetchCertificateTemplates();\r\n      fetchTests();\r\n      fetchQuestions();\r\n    }\r\n\r\n    return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"create_edit_test noselect\">\r\n      <h1 className=\"page__header\"> {test === null ? \"Create\" : \"Edit\"} Test </h1> {/* className=\"page__header\" */}\r\n      <form className=\"new_test__form\" onSubmit={handleSubmit}>\r\n        <div id=\"top_content__container\">\r\n          \r\n          <div className=\"content__section\">\r\n            <table id=\"general_details__table\">\r\n              <tbody>\r\n                <tr className=\"space_under header_row border_bottom\">\r\n                  <th colSpan=\"2\"> General Test Details </th>\r\n                </tr>\r\n                <tr>\r\n                  <td> <label> Field of Study: </label> </td>\r\n                  <td> <label id=\"field__label\"> {field === null ? \"undefined\" : field} </label> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Language: </label> </td>\r\n                  <td>  <select id=\"language__select\" onChange={(e) => setLanguage (e.target.value)}>\r\n                          {languages && languages.map((language) => (\r\n                            <option key={language.languageID} value={language.languageName}> {language.languageName} </option>\r\n                          ))} \r\n                        </select> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Test Type: </label> </td>\r\n                  <td> <select id=\"test_type__select\" onChange={(e) => setTestType (e.target.value)}>\r\n                          {testTypes && testTypes.map((testType) => (\r\n                            <option key={testType.typeID} value={testType.typeName}> {testType.typeName} </option>\r\n                          ))}\r\n                        </select> </td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td> <label> Test Name:                                                                                                                                                           </label> </td>\r\n                  <td> <input id=\"test_name__input\"       type=\"text\"       placeholder=\"Insert test name\"            value={testName}        onChange={(e) => setTestName(e.target.value)}         required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Passing Grade:                                                                                                                                                       </label> </td>\r\n                  <td> <input id=\"passing_grade__input\"   type=\"text\"       placeholder=\"Insert passing grade\"        value={passingGrade}    onChange={(e) => setPassingGrade(e.target.value)}     required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Show correct answers after submission:                                                                                                                               </label> </td>\r\n                  <td> <input id=\"show_answers__checkbox\" type=\"checkbox\"                                           value={reviewTest}      onChange={(e) => setReviewTest(e.target.value)}       required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Message header:                                                                                                                                                      </label> </td>\r\n                  <td> <input id=\"message_header__input\"  type=\"text\"       placeholder=\"Insert header\"               value={header}          onChange={(e) => setHeader(e.target.value)}           required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Message to show on success:                                                                                                                                          </label> </td>\r\n                  <td> <input id=\"message_success__input\" type=\"text\"       placeholder=\"Insert success message\"      value={messageSuccess}  onChange={(e) => setMessageSuccess(e.target.value)}   required/> </td>\r\n                </tr>   \r\n\r\n                <tr>    \r\n                  <td> <label> Message to show on failure:                                                                                                                                         </label> </td>\r\n                  <td> <input id=\"message_failure__input\" type=\"text\"       placeholder=\"Insert failure message\"      value={messageFailure}   onChange={(e) => setMessageFailure(e.target.value)}  required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Certificate Templates: </label> </td>\r\n                  <td> <select id=\"certificate__select\" onChange={(e) => setCertificateTemplateID(e.target.key)}>\r\n                          {certificateTemplates && certificateTemplates.map((certificate) => (\r\n                            <option key={certificate.templateID} value={certificate.templateName}> {certificate.templateName} </option>\r\n                          ))}\r\n                        </select> </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div className=\"content__section\">\r\n            <table id=\"email_delivery__table\">\r\n              <tbody>\r\n                <tr className=\"space_under header_row border_bottom\">\r\n                  <th colSpan=\"2\"> Email Delivery Upon Test Completion </th>\r\n                </tr>\r\n                <tr>\r\n                  <td> <label> Current Status: \"{status === \"OFF\" ? `OFF` : \"ON\"}\"                                                                                                         </label> </td>\r\n                  <td> <div id=\"sending_emails__container\">      \r\n                          <label id=\"sending_emails__label\" > Emails {status === \"OFF\" ? `won't` : \"will\"} be sent upon test completion.                                                   </label>\r\n                          <label                    > to turn {status === \"OFF\" ? \"ON\" : \"OFF\"} email delivery, {status === \"OFF\" ? \"fill out\" : \"reset\"} the mandatory                    </label>\r\n                          <label                    > fields in this section:                                                                                                              </label>\r\n                        </div> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> From: </label> </td>\r\n                  <td> <input id=\"from__input\"  type=\"text\" value={from}  onChange={(e) => handleFromChange(e.target.value)}                                                                     /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> CC: </label> </td>      \r\n                  <td> <input id=\"cc__input\"    type=\"text\" value={cc}    onChange={(e) => setCC(e.target.value)}   disabled={from ? false : true}                                               /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> BCC: </label> </td>       \r\n                  <td> <input id=\"bcc__input\"   type=\"text\" value={bcc}   onChange={(e) => setBCC(e.target.value)}  disabled={from ? false : true}                                               /> </td>\r\n                </tr>      \r\n              </tbody>\r\n            </table>       \r\n         \r\n         \r\n            <table id=\"passing_test__table\">   \r\n              <tbody>\r\n                <tr className=\"space_under sub_header_row border_bottom\">\r\n                  <th colSpan=\"2\"> Passing the test </th>\r\n                </tr>\r\n                <tr>       \r\n                  <td> <label> Message subject:                                                                                                                                            </label> </td>\r\n                  <td> <input id=\"message_subject__input\" type=\"text\" value={passingSubject} onChange={(e) => setPassingSubject(e.target.value)}  disabled={from ? false : true}   /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> Message body:                                                                                                                                               </label> </td>\r\n                  <td> <input id=\"message_body__input\"    type=\"text\" value={passingBody}    onChange={(e) => setPassingBody(e.target.value)} disabled={from ? false : true}       /> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td>\r\n                    <label style={{fontWeight: 'bold'}}> Predefined Templated - Click to copy to clipboard </label>\r\n                    <label> NEED TO ADD TEMPLATES HERE </label>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n\r\n          <table id=\"failing_test__table\">\r\n            <tbody>\r\n              <tr className=\"space_under sub_header_row border_bottom\">\r\n                  <th colspan=\"2\"> Failing the test </th>\r\n                </tr>\r\n              <tr>\r\n                <td> <label> Message subject:                                                                                                                                     </label> </td>\r\n                <td> <input id=\"message_subject__input\" type=\"text\" value={failingSubject} onChange={(e) => setFailingSubject(e.target.value)}  disabled={from ? false : true}   /> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td> <label> Message body:                                                                                                                                        </label> </td>\r\n                <td> <input id=\"message_body__input\"    type=\"text\" value={failingBody}    onChange={(e) => setFailingBody(e.target.value)} disabled={from ? false : true}       /> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  <label style={{fontWeight: 'bold'}}> Predefined Templated - Click to copy to clipboard </label>\r\n                  <label> NEED TO ADD TEMPLATES HERE </label>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div id=\"bottom_content__container\">\r\n          <div id=\"questions__container\">\r\n            <h2 className=\"section__headers\"> Questions </h2>\r\n            <div id=\"explanation\">\r\n              <label style={{fontWeight: 'bold'}}> Note: This test is set to be a \"{`${testType}`}\" test, which means:</label>\r\n              \r\n              <ul>\r\n                <li> All the questions that you select here will be included in the test. </li>\r\n                <li> All respondents will receive {`${testType.includes(\"random\") ? \"a DIFFERENT\" : \"the SAME\"}`} set of questions, presented in a different order. </li>\r\n              </ul>\r\n\r\n              <label className=\"sub__label\"> *TIP: if you want each respondent to receive {`${testType.includes(\"random\") ? \"the SAME\" : \"a DIFFERENT\"}`} set of questions, change the test type to \"{`${testType.includes(\"random\") ? \"Predefined\" : \"Random\"}`}\" in the \r\n                  <Link to={`/admin/${test === null ? \"create\" : \"edit\"}-test#test_type__select`} > Test Details</Link> section.* </label>\r\n            </div>\r\n\r\n            <div id=\"question_table__container\">\r\n              <label style={{fontWeight: 'bold', color: 'orange'}}> Select the questions that you want to include in the test </label>\r\n              <label> You can use the tag filter to narrow down the list to a specific subject - Don't worry, filtering won't affect your previous selections. </label>\r\n\r\n              { questions && filteredQuestions && <Filter filterStatus={filterStatus} totalAmount={questions.length} filteredAmount={filteredQuestions.length} \r\n                handleFilterByChange={handleFilterByChange} handleFilterContentChange={handleFilterContentChange}/> }\r\n\r\n              { <QuestionTable createEditTest={true} questions={filteredQuestions} filteredQuestions={filteredQuestions} selectedQuestions={selectedQuestions} tests={tests} \r\n                handleSelectedQuestion={handleSelectedQuestion} handleShowAll={handleShowAll} handleShowSelected={handleShowSelected}/> }\r\n\r\n                <label> The test will include {selectedQuestions.length} questions in total </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"buttons__container\">\r\n            <button className=\"regular__button\" onClick={() => handleBack() }> {`<<` } Back  </button>\r\n            <button className=\"regular__button\" onClick={() => handleShow() }>  Show         </button>\r\n            <button className=\"regular__button\" type=\"submit\"                >  Save {`>>` } </button>\r\n          </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\ReportByRespondentName\\ReportByRespondentName.js",["312","313","314"],"import React, { useEffect, useState }   from 'react';\r\nimport        { filter }                from 'minimatch';\r\nimport        { useHistory }            from 'react-router-dom';\r\nimport styles                           from './ReportByRespondentName.css';\r\n\r\nexport default function ReportByRespondentName() {\r\n    \r\n    // ------------------------ Fetch Info Hooks -----------------------\r\n    \r\n    const [ students,            setStudents         ]       = useState(null); \r\n    const [ studentTests,        setStudentTests     ]       = useState(null); \r\n    const [ tests,               setTests            ]       = useState(null); \r\n\r\n    // ------------------------- Content Hooks -------------------------\r\n\r\n    const [ filterContent,       setFilterContent    ]       = useState(\"\");\r\n    const [ respondentName,      setRespondentName   ]       = useState(\"\");\r\n    const [ respondentID,        setRespondentID     ]       = useState(null);\r\n\r\n    const handleRespondentClick = (name, id) => {\r\n        console.log(\"handle respondent click\")\r\n        setRespondentName(name);\r\n        setRespondentID(id);\r\n    }\r\n\r\n\r\n    // ?????????????????????????????\r\n    // const calcAverageGrade = () => {\r\n    //     const tests = [];\r\n    //     // !== null && respondentID !== 0\r\n    //     if (studentTests) {\r\n    //         studentTests.filter((studentTest) => studentTest.studentID === respondentID).map((studentTest) =>\r\n    //             tests.push(studentTest)\r\n    //         );\r\n    //         console.log(tests);\r\n    //     }\r\n    // }\r\n\r\n    const history = useHistory();\r\n\r\n    const Back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const fetchStudents = () => {\r\n        fetch(\"http://localhost:8000/students\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => setStudents(data))\r\n        .catch((err) => console.log('error fetching students:' + err))\r\n    }\r\n\r\n    const fetchStudentTests = () => {\r\n        fetch(\"http://localhost:8000/studentTests\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => setStudentTests(data))\r\n        .catch((err) => console.log('error fetching student tests:' + err))\r\n    }\r\n    \r\n    const fetchTests = () => {\r\n        fetch(\"http://localhost:8000/tests\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => setTests(data))\r\n        .catch((err) => console.log('error tests:' + err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = \"Report by Name\";\r\n    }, [])\r\n    \r\n\r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n\r\n        if (isMounted) {                // add conditional check \r\n            fetchStudents();\r\n            fetchStudentTests();\r\n            fetchTests();\r\n        }\r\n\r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"report_by_name noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1> Report by Respondent Name </h1>\r\n            </div>\r\n\r\n            <div id=\"content__container\">\r\n                <div id=\"respondent__container\">\r\n                    <h2> Find a respondent </h2>\r\n                    <p> To find a respondent, start typing a name below, </p>\r\n                    <p> then select a respondent from the list that will appear. </p>\r\n                    <div id=\"filter_name__container\">    \r\n                        <label> Respondent's name: </label>\r\n                        <input id=\"filter__input\" type='text' value={filterContent} placeholder=\"Enter a name\" onChange={(e) => setFilterContent(e.target.value) } />\r\n                    </div>\r\n\r\n                    <table id=\"respondents__table\">\r\n                        <tbody>\r\n                            <tr className=\"header_row border_bottom\">\r\n                                <th> ID             </th>\r\n                                <th> Respondent     </th>\r\n                                <th> Email          </th>\r\n                                <th> Last Activity  </th>\r\n                            </tr>\r\n\r\n                            {students && students.filter((student) => student.fullName.includes(filterContent)).map((student) => (\r\n                            <tr key={student.studentID} onClick={() => handleRespondentClick(student.fullName, student.studentID)}>\r\n                                <td> {student.studentID}        </td>\r\n                                <td> {student.fullName}         </td>\r\n                                <td> {student.email}            </td>\r\n                                <td> {student.lastActivity}     </td>\r\n                            </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div id=\"activity_report__container\" className={respondentID === null ? \"hidden\" : \"visible\"}>\r\n                    <h2> Activity Report for: {respondentName} </h2>\r\n                    <div id=\"above_activity__container\">\r\n                        <label type=\"text\" id=\"explanation\">    Click a test to show its results           </label>\r\n                        <label type=\"text\" id=\"average_grade\">  Average grade for a test: {}               </label>\r\n                    </div>\r\n\r\n                    <table id=\"activity_report__table\">\r\n                        <tbody>\r\n                            <tr className=\"header_row border_bottom\">\r\n                                <th> Instance       </th>\r\n                                <th> Test ID        </th>\r\n                                <th> Test Name      </th>\r\n                                <th> Grade          </th>\r\n                                <th> Time Submitted </th>\r\n                            </tr>\r\n\r\n                            {/* { tests && tests.filter((test) => test.testID === studentTest.testID).map((test) => <td> {console.log(test.testName)} </td>) } */}\r\n\r\n                            {studentTests && studentTests.filter((studentTest) => studentTest.studentID === respondentID).map((studentTest) => (\r\n                            <tr key={studentTest.studentID}>\r\n                                <td> {studentTest.stID}                 </td>\r\n                                <td> {studentTest.testID}               </td>\r\n                                <td> {studentTest.testName}             </td>\r\n                                <td> {studentTest.grade}                </td>\r\n                                <td> {studentTest.submitted}            </td>\r\n                            </tr>\r\n                            ))}\r\n\r\n\r\n                            {/* { tests && tests.map((test) => {\r\n                                return (\r\n                                <>\r\n                                    { studentTests && studentTests.filter((studentTest) => studentTest.studentID === respondentID).map((studentTest) => {\r\n                                        if (test.testID === studentTest.testID) \r\n                                        {\r\n                                            return (\r\n                                            <>\r\n                                                <tr key={studentTest.studentID}>\r\n                                                    <td> {studentTest.stID}                 </td>\r\n                                                    <td> {studentTest.testID}               </td>\r\n\r\n                                                    { studentTest.testID === test.testID && <td> {test.testName} </td> }\r\n                                                    <td> {studentTest.testName}             </td>\r\n                                                    <td> {studentTest.grade}                </td>\r\n                                                    <td> {studentTest.submitted}            </td>\r\n                                                </tr>                                    \r\n                                            </>)\r\n                                        }\r\n                                    })}\r\n                                </>)\r\n                            }) } */}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div id=\"buttons__container\">\r\n                        <button className=\"regular__button\" onClick={() => Back() }> {`<<` } Back </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\Reports\\TestReport\\TestReport.js",["315","316","317","318","319"],"import React,   { useEffect, useState       }           from 'react';\r\nimport          { SummaryTable              }           from '../../../../../Admin/SummaryTable/SummaryTable';\r\nimport          { useHistory, useLocation   }           from 'react-router-dom';\r\nimport          { GradesTable               }           from '../../../../../Admin/GradesTable/GradesTable';\r\nimport          { QuestionStatisticsTable   }           from '../../../../../Admin/QuestionStatisticsTable/QuestionStatisticsTable';\r\nimport          { Filter                    }           from '../../../../../Admin/Filter/Filter';\r\nimport styles                                           from './TestReport.css'\r\n\r\nexport default function TestReport() {\r\n\r\n    // ----------------------------- Fetch Info Hooks ----------------------------\r\n\r\n    const [ studentTests,       setStudentTests           ] = useState(null);\r\n    const [ questions,          setQuestions              ] = useState(null);\r\n\r\n    const [ test,               setTest                   ] = useState(null);\r\n    const [ field,              setField                  ] = useState(\"\");\r\n    const [ dateRange,          setDateRange              ] = useState(\"\");\r\n    // const [ questions,          setQuestions              ] = useState([]);\r\n    \r\n    // ------------------------------ Summary Hooks ------------------------------\r\n    \r\n    const [ numOfSubmissions,   setNumOfSubmissions       ] = useState(0);\r\n    const [ numPassed,          setNumPassed              ] = useState(0);\r\n    const [ passingPercentage,  setPassingPercentage      ] = useState(0);\r\n    const [ averageGrade,       setAverageGrade           ] = useState(0);\r\n    const [ medianGrade,        setMedianGrade            ] = useState(0);\r\n    // const [ numOfQuestions,      setNumOfQuestions      ] = useState(0);\r\n\r\n    // ------------------------------ Grades Hooks -------------------------------\r\n\r\n    const [ respondentChosen,   setRespondentChosen       ] = useState(false);\r\n\r\n    // ---------------------------- Statistics Hooks -----------------------------\r\n\r\n    // const [ filterContent,      setFilterContent          ] = useState(\"\");\r\n\r\n    const [ filterStatus,       setFilter                 ] = useState(false);\r\n    const [ filterByTags,       setFilterByTags           ] = useState(true);\r\n\r\n    const [ filteredQuestions,  setFilteredQuestions      ] = useState([]);\r\n\r\n    // ---------------------------------------------------------------------------\r\n\r\n    const location = useLocation(); // for location state\r\n    const history = useHistory();\r\n\r\n    const back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const exportToExecl = () => {\r\n\r\n    }\r\n\r\n    const printReport = () => {\r\n\r\n    }\r\n\r\n    // Returns element closest to target in arr[]\r\n    function findClosest(arr, target)\r\n    {\r\n        let n = arr.length;\r\n    \r\n        // Corner cases\r\n        if (target <= arr[0])\r\n            return arr[0];\r\n        if (target >= arr[n - 1])\r\n            return arr[n - 1];\r\n    \r\n        // Doing binary search\r\n        let i = 0, j = n, mid = 0;\r\n        while (i < j)\r\n        {\r\n            mid = (i + j) / 2;\r\n    \r\n            if (arr[mid] == target)\r\n                return arr[mid];\r\n    \r\n            // If target is less than array\r\n            // element,then search in left\r\n            if (target < arr[mid])\r\n            {\r\n        \r\n                // If target is greater than previous\r\n                // to mid, return closest of two\r\n                if (mid > 0 && target > arr[mid - 1])\r\n                    return getClosest(arr[mid - 1],\r\n                                    arr[mid], target);\r\n                \r\n                // Repeat for left half\r\n                j = mid;             \r\n            }\r\n    \r\n            // If target is greater than mid\r\n            else\r\n            {\r\n                if (mid < n - 1 && target < arr[mid + 1])\r\n                    return getClosest(arr[mid],\r\n                                    arr[mid + 1],\r\n                                    target);               \r\n                i = mid + 1; // update i\r\n            }\r\n        }\r\n    \r\n        // Only single element left after search\r\n        return arr[mid];\r\n    }\r\n    \r\n    // Method to compare which one is the more close\r\n    // We find the closest by taking the difference\r\n    //  between the target and both values. It assumes\r\n    // that val2 is greater than val1 and target lies\r\n    // between these two.\r\n    function getClosest(val1, val2, target)\r\n    {\r\n        if (target - val1 >= val2 - target)\r\n            return val2;       \r\n        else\r\n            return val1;       \r\n    }\r\n\r\n\r\n    const scanThroughStudentTests = (data) => {\r\n        let passed = 0;\r\n        let submissions = 0;\r\n        data.map((studentTest) => {\r\n            submissions++;\r\n\r\n            // console.log(\"passing grade: \" + location.state.test.passingGrade);\r\n            // console.log(\"student grade: \" + studentTest.grade);\r\n            if (studentTest.grade >= location.state.test.passingGrade) passed++;\r\n            return studentTest;\r\n        });\r\n        setNumOfSubmissions(submissions);\r\n        setNumPassed(passed);\r\n\r\n        // calc(totalGrades);     \r\n        calcAdditionalInformation(data, submissions);\r\n    }\r\n\r\n    const calcAdditionalInformation = (data, submissions) => {\r\n        let totalGrades = 0;\r\n        let gradesArray = [];\r\n        data.map((studentTest) => {\r\n            gradesArray.push(studentTest.grade);\r\n            totalGrades += studentTest.grade;\r\n            return \"\";\r\n        });\r\n\r\n        // Calc passing percentage -> passed divide by total submissions (multiply by 100 to get the percentage)\r\n        setPassingPercentage( (numPassed / submissions) * 100 );\r\n\r\n        // Calc average grade -> total grades divide by total submissions\r\n        let average = totalGrades / submissions;\r\n        setAverageGrade(Math.round(average));\r\n\r\n        // Calc median grade ->\r\n        setMedianGrade(findClosest(gradesArray, average));\r\n\r\n    }\r\n    \r\n    const countTestQuestions = () => {\r\n        let counter = 0;\r\n        test && test.questions.map(() => counter++);\r\n        return counter;\r\n    }\r\n\r\n    const handleFilterByChange = (value) => {\r\n        if (value === \"tags\") setFilterByTags(true);\r\n        else if (value === \"content\") setFilterByTags(false);\r\n    }\r\n\r\n    const handleFilterContentChange = (value) => {\r\n        \r\n        if (value === \"\") setFilter(false);\r\n        else setFilter(true);\r\n\r\n        let newQuestionList = questions;\r\n        setFilteredQuestions(newQuestionList.filter((question) => { \r\n            \r\n            let contains = false;\r\n\r\n            if (filterByTags === true) {\r\n                question.tags.map((tag) => {\r\n                    if (tag.toLowerCase().includes(value)) contains = true;\r\n                });\r\n            } else {\r\n                if (question.title.toLowerCase().includes(value)) contains = true;\r\n            }\r\n\r\n            if (contains === true) return question;\r\n\r\n        }));\r\n    }\r\n\r\n    // This function gets the student ID from the child component and sets it as the chosen respondent\r\n    const handleRespondentClick = (id) => {\r\n        if (respondentChosen.studentID !== id) {\r\n            console.log(id);\r\n            setRespondentChosen(id);\r\n        }\r\n    }\r\n\r\n    const handleFetchStudentTests = (data) => {\r\n        console.log(\"handle fetch students tests\");\r\n        setStudentTests(data);\r\n        scanThroughStudentTests(data);\r\n    }\r\n\r\n    const fetchQuestions = () => {\r\n        fetch(\"http://localhost:8000/questions\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            setQuestions(data)\r\n            setFilteredQuestions(data);\r\n        })\r\n        .catch((err) => console.log('error fetching questions:' + err))\r\n      }\r\n\r\n    const fetchStudentTests = () => {\r\n        fetch(\"http://localhost:8000/studentTests\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n            handleFetchStudentTests(data);\r\n         })\r\n        .catch((err) => console.log('error fetching student tests: ' + err));\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = \"Test Report\";\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n\r\n        if (isMounted) {                // add conditional check\r\n            fetchStudentTests();\r\n            fetchQuestions();\r\n        }\r\n\r\n        if (location.state) {\r\n            if (location.state.field) setField(location.state.field);\r\n            if (location.state.test) setTest(location.state.test)\r\n            if (location.state.dateRange) setDateRange(location.state.dateRange);\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"test_report noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1> Test result for {field} </h1>\r\n            </div>\r\n\r\n            <div id=\"content__container\">\r\n                <div id=\"summary__container\">\r\n                    <h1> Summary </h1>\r\n                    <div id=\"summary_tables__container\">\r\n                        { location.state.test && <SummaryTable test={location.state.test} dateRange={dateRange} submissions={numOfSubmissions} numPassed={numPassed} passingPercentage={passingPercentage}\r\n                            average={averageGrade} median={medianGrade} countNumberOfQuestions={countTestQuestions}/> }\r\n                    </div>\r\n                </div>\r\n                <div id=\"grades__container\">\r\n                    <h1> Respondent Grades and Answers </h1>\r\n                    <div id=\"grades_table__container\">\r\n                        <label> Click a name from the list to see the respondent's test </label>\r\n                        { studentTests && location.state.test && <GradesTable test={location.state.test} studentTests={studentTests} handleRespondentClick={handleRespondentClick}/> }\r\n                    </div>\r\n                </div>\r\n\r\n                <div id=\"question_statistics__container\">\r\n                    <h1> Question Statistics </h1>\r\n                    <label> Click a question to show statistics regarding it's answers, then click the answers to see which answer each respondent selected. </label>\r\n                    <label> You can use the following buttons to do the same with all the questions in the list. </label>\r\n                    <div id=\"filter__container\">\r\n                        <div id=\"filter_by__container\">\r\n                            { questions && filteredQuestions && <Filter filterStatus={filterStatus} totalAmount={questions.length} filteredAmount={filteredQuestions.length} \r\n                                handleFilterByChange={handleFilterByChange} handleFilterContentChange={handleFilterContentChange}/> }\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"question_statistics_table__container\">\r\n                        { studentTests && <QuestionStatisticsTable studentTests={studentTests} test={test}/>}\r\n                    </div>\r\n\r\n                    <div id=\"buttons__container\">\r\n                        <button className=\"regular__button\" onClick={() => back()}>             {`<<`} Back         </button>\r\n                        <button className=\"regular__button\" onClick={() => exportToExecl()}>    Export To Excel     </button>\r\n                        <button className=\"regular__button\" onClick={() => printReport()}>      Print Report        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Admin\\MainPage\\ManageTests\\ManageTests.js",["320","321","322","323","324","325","326","327","328"],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\utils\\AdminMenuPanel.js",[],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\GradesTable\\GradesTable.js",["329"],"import styles                   from './GradesTable.css';\r\n\r\nexport const GradesTable = ({ test, studentTests, handleRespondentClick }) => {\r\n\r\n    let numOfQuestions = 0;\r\n\r\n    return (\r\n        <>\r\n            <table id=\"grades__table\">\r\n                <tbody>\r\n                    <tr className=\"header_row space_under border_bottom\">\r\n                        <th>        ID                                      </th>\r\n                        <th>        Respondent                              </th>\r\n                        <th>        Submitted                               </th>\r\n                        <th>        Number of Questions Answered            </th>\r\n                        <th>        Grade                                   </th>\r\n                    </tr>\r\n\r\n                    {studentTests && studentTests.filter((studentTest) => studentTest.testID === test.testID).map((studentTest) => (                             \r\n                        <tr onClick={() => handleRespondentClick(studentTest.studentID)}>\r\n                            <td key={studentTest.stID}>                 {  studentTest.stID         } </td>\r\n                            <td key={studentTest.studentName}>          {  studentTest.studentName  } </td>\r\n                            <td key={studentTest.submitted}>            {  studentTest.submitted    } </td>\r\n                            {  <td key={studentTest.questions}>         {  studentTest.questions.filter((question) => question.answer === \"\").map((answer, questionID) => {\r\n                                if (answer !== \"\") numOfQuestions++;\r\n\r\n                                if (studentTest.questions[studentTest.questions.length - 1].questionID === questionID) return numOfQuestions;\r\n                                else return \"\";\r\n                            })} </td> }                         \r\n                            \r\n                            {/* this td is responsible for resetting the num of questions counter */}\r\n                            <td key=\"hidden\" style={{display: \"none\"}}> {  numOfQuestions = 0  } </td>\r\n\r\n                            <td key={studentTest.grade}>                {  studentTest.grade        } </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n};\r\n","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\QuestionStatisticsTable\\QuestionStatisticsTable.js",["330"],"import styles                   from './QuestionStatisticsTable.css';\r\n\r\nexport const QuestionStatisticsTable = ({ test, studentTests, handleRespondentClick, handleQuestionClick }) => {\r\n\r\n    let numOfQuestions = 0;\r\n\r\n    return (\r\n        <>\r\n            <table id=\"question_statistics__table\">\r\n                <tbody>\r\n                    <tr className=\"header_row space_under border_bottom\">\r\n                        <th>        ID                                      </th>\r\n                        <th>        Question                                </th>\r\n                        <th>        Number of Submissions                   </th>\r\n                        <th>        Percentage Answered Correctly           </th>\r\n                    </tr>\r\n\r\n                    { studentTests && studentTests.filter((studentTest) => studentTest.testID === test.testID).map((studentTest) => (  \r\n                        <>\r\n                            {studentTest.questions.filter((question) => question.answer === \"\").map((answer, questionID) => {\r\n                                    if (answer !== \"\") numOfQuestions++;\r\n\r\n                                    if (studentTest.questions[studentTest.questions.length - 1].questionID === questionID) return numOfQuestions;\r\n                                    else return \"\";\r\n                            })};\r\n                        </>\r\n                    ))}\r\n\r\n\r\n                    \r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n};\r\n","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\Admin\\Filter\\Filter.js",["331"],"import styles                   from './Filter.css';\r\n\r\nexport const Filter = ({ filterStatus, totalAmount, filteredAmount, handleFilterByChange, handleFilterContentChange }) => {\r\n\r\n    return (\r\n        <div id=\"filter__container\">\r\n            <div id=\"filter_by__container\">\r\n                <label> Filter by: </label>\r\n                <select onChange={ (e) => handleFilterByChange(e.target.value) }>\r\n                    <option value=\"tags\">       tags       </option>\r\n                    <option value=\"content\">    content    </option>\r\n                </select>\r\n            </div>\r\n\r\n            <div id=\"filter_input__container\">\r\n                <input id=\"filter__input\" type=\"text\" onChange={ (e) => handleFilterContentChange(e.target.value) } placeholder=\"Enter a list of keywords separated by commas\"/>\r\n            </div>\r\n\r\n            <div id=\"filter_status__container\">\r\n                <label id=\"filter__status\">         Filter is   {filterStatus === false ? \"OFF\" : \"ON\"}                                                           </label>\r\n            </div>\r\n\r\n            <div id=\"amount_filtered__container\">\r\n                <label id=\"amount__filtered\">       Filtered    {filteredAmount ? filteredAmount : \"\"} of total {totalAmount ? totalAmount : \"\"}    </label>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\services\\tests.js",[],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Student\\StartPage\\StartPage.js",["332","333","334","335","336"],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Student\\AfterSubmit\\AfterSubmit.js",["337","338"],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Student\\Test\\Test.js",["339","340","341","342","343","344","345","346","347","348","349"],"C:\\Users\\ofeki\\OneDrive\\שולחן העבודה\\ExamApp design ver\\ExamsApp\\react_client_exams_app\\src\\components\\pages\\Student\\ReviewTest\\ReviewTest.js",[],{"ruleId":"350","replacedBy":"351"},{"ruleId":"352","replacedBy":"353"},{"ruleId":"354","severity":1,"message":"355","line":1,"column":17,"nodeType":"356","messageId":"357","endLine":1,"endColumn":26},{"ruleId":"354","severity":1,"message":"358","line":5,"column":10,"nodeType":"356","messageId":"357","endLine":5,"endColumn":16},{"ruleId":"354","severity":1,"message":"359","line":9,"column":12,"nodeType":"356","messageId":"357","endLine":9,"endColumn":18},{"ruleId":"354","severity":1,"message":"358","line":2,"column":10,"nodeType":"356","messageId":"357","endLine":2,"endColumn":16},{"ruleId":"354","severity":1,"message":"360","line":4,"column":8,"nodeType":"356","messageId":"357","endLine":4,"endColumn":20},{"ruleId":"354","severity":1,"message":"361","line":1,"column":17,"nodeType":"356","messageId":"357","endLine":1,"endColumn":25},{"ruleId":"354","severity":1,"message":"362","line":1,"column":8,"nodeType":"356","messageId":"357","endLine":1,"endColumn":13},{"ruleId":"354","severity":1,"message":"361","line":2,"column":17,"nodeType":"356","messageId":"357","endLine":2,"endColumn":25},{"ruleId":"354","severity":1,"message":"362","line":1,"column":8,"nodeType":"356","messageId":"357","endLine":1,"endColumn":13},{"ruleId":"354","severity":1,"message":"361","line":2,"column":17,"nodeType":"356","messageId":"357","endLine":2,"endColumn":25},{"ruleId":"354","severity":1,"message":"362","line":1,"column":8,"nodeType":"356","messageId":"357","endLine":1,"endColumn":13},{"ruleId":"354","severity":1,"message":"361","line":2,"column":17,"nodeType":"356","messageId":"357","endLine":2,"endColumn":25},{"ruleId":"354","severity":1,"message":"358","line":2,"column":10,"nodeType":"356","messageId":"357","endLine":2,"endColumn":16},{"ruleId":"354","severity":1,"message":"363","line":4,"column":8,"nodeType":"356","messageId":"357","endLine":4,"endColumn":21},{"ruleId":"354","severity":1,"message":"364","line":4,"column":8,"nodeType":"356","messageId":"357","endLine":4,"endColumn":20},{"ruleId":"354","severity":1,"message":"365","line":2,"column":8,"nodeType":"356","messageId":"357","endLine":2,"endColumn":24},{"ruleId":"350","replacedBy":"366"},{"ruleId":"352","replacedBy":"367"},{"ruleId":"354","severity":1,"message":"368","line":10,"column":8,"nodeType":"356","messageId":"357","endLine":10,"endColumn":14},{"ruleId":"354","severity":1,"message":"361","line":1,"column":17,"nodeType":"356","messageId":"357","endLine":1,"endColumn":25},{"ruleId":"354","severity":1,"message":"355","line":2,"column":17,"nodeType":"356","messageId":"357","endLine":2,"endColumn":26},{"ruleId":"354","severity":1,"message":"368","line":5,"column":8,"nodeType":"356","messageId":"357","endLine":5,"endColumn":14},{"ruleId":"354","severity":1,"message":"368","line":1,"column":8,"nodeType":"356","messageId":"357","endLine":1,"endColumn":14},{"ruleId":"354","severity":1,"message":"358","line":5,"column":17,"nodeType":"356","messageId":"357","endLine":5,"endColumn":23},{"ruleId":"354","severity":1,"message":"359","line":9,"column":12,"nodeType":"356","messageId":"357","endLine":9,"endColumn":18},{"ruleId":"354","severity":1,"message":"368","line":3,"column":8,"nodeType":"356","messageId":"357","endLine":3,"endColumn":14},{"ruleId":"354","severity":1,"message":"362","line":1,"column":8,"nodeType":"356","messageId":"357","endLine":1,"endColumn":13},{"ruleId":"354","severity":1,"message":"368","line":3,"column":8,"nodeType":"356","messageId":"357","endLine":3,"endColumn":14},{"ruleId":"354","severity":1,"message":"358","line":2,"column":10,"nodeType":"356","messageId":"357","endLine":2,"endColumn":16},{"ruleId":"354","severity":1,"message":"369","line":3,"column":10,"nodeType":"356","messageId":"357","endLine":3,"endColumn":14},{"ruleId":"354","severity":1,"message":"368","line":4,"column":8,"nodeType":"356","messageId":"357","endLine":4,"endColumn":14},{"ruleId":"354","severity":1,"message":"368","line":4,"column":8,"nodeType":"356","messageId":"357","endLine":4,"endColumn":14},{"ruleId":"354","severity":1,"message":"362","line":1,"column":8,"nodeType":"356","messageId":"357","endLine":1,"endColumn":13},{"ruleId":"354","severity":1,"message":"361","line":2,"column":17,"nodeType":"356","messageId":"357","endLine":2,"endColumn":25},{"ruleId":"354","severity":1,"message":"368","line":2,"column":8,"nodeType":"356","messageId":"357","endLine":2,"endColumn":14},{"ruleId":"354","severity":1,"message":"368","line":2,"column":8,"nodeType":"356","messageId":"357","endLine":2,"endColumn":14},{"ruleId":"354","severity":1,"message":"368","line":2,"column":8,"nodeType":"356","messageId":"357","endLine":2,"endColumn":14},{"ruleId":"354","severity":1,"message":"368","line":2,"column":8,"nodeType":"356","messageId":"357","endLine":2,"endColumn":14},{"ruleId":"354","severity":1,"message":"368","line":2,"column":8,"nodeType":"356","messageId":"357","endLine":2,"endColumn":14},{"ruleId":"354","severity":1,"message":"368","line":4,"column":8,"nodeType":"356","messageId":"357","endLine":4,"endColumn":14},{"ruleId":"354","severity":1,"message":"370","line":8,"column":11,"nodeType":"356","messageId":"357","endLine":8,"endColumn":19},{"ruleId":"371","severity":1,"message":"372","line":85,"column":14,"nodeType":"373","messageId":"374","endLine":85,"endColumn":15},{"ruleId":"354","severity":1,"message":"368","line":1,"column":8,"nodeType":"356","messageId":"357","endLine":1,"endColumn":14},{"ruleId":"354","severity":1,"message":"368","line":1,"column":8,"nodeType":"356","messageId":"357","endLine":1,"endColumn":14},{"ruleId":"354","severity":1,"message":"375","line":5,"column":17,"nodeType":"356","messageId":"357","endLine":5,"endColumn":27},{"ruleId":"354","severity":1,"message":"368","line":6,"column":8,"nodeType":"356","messageId":"357","endLine":6,"endColumn":14},{"ruleId":"354","severity":1,"message":"376","line":13,"column":13,"nodeType":"356","messageId":"357","endLine":13,"endColumn":17},{"ruleId":"377","severity":1,"message":"378","line":83,"column":41,"nodeType":"379","messageId":"380","endLine":83,"endColumn":43},{"ruleId":"381","severity":1,"message":"382","line":147,"column":8,"nodeType":"383","endLine":147,"endColumn":10,"suggestions":"384"},{"ruleId":"354","severity":1,"message":"368","line":4,"column":8,"nodeType":"356","messageId":"357","endLine":4,"endColumn":14},{"ruleId":"354","severity":1,"message":"385","line":11,"column":11,"nodeType":"356","messageId":"357","endLine":11,"endColumn":20},{"ruleId":"354","severity":1,"message":"386","line":23,"column":33,"nodeType":"356","messageId":"357","endLine":23,"endColumn":46},{"ruleId":"377","severity":1,"message":"378","line":90,"column":38,"nodeType":"379","messageId":"380","endLine":90,"endColumn":40},{"ruleId":"381","severity":1,"message":"387","line":232,"column":6,"nodeType":"383","endLine":232,"endColumn":15,"suggestions":"388"},{"ruleId":"381","severity":1,"message":"389","line":271,"column":6,"nodeType":"383","endLine":271,"endColumn":8,"suggestions":"390"},{"ruleId":"354","severity":1,"message":"368","line":3,"column":8,"nodeType":"356","messageId":"357","endLine":3,"endColumn":14},{"ruleId":"381","severity":1,"message":"391","line":100,"column":8,"nodeType":"383","endLine":100,"endColumn":10,"suggestions":"392"},{"ruleId":"354","severity":1,"message":"368","line":6,"column":8,"nodeType":"356","messageId":"357","endLine":6,"endColumn":14},{"ruleId":"354","severity":1,"message":"393","line":38,"column":11,"nodeType":"356","messageId":"357","endLine":38,"endColumn":15},{"ruleId":"354","severity":1,"message":"394","line":62,"column":11,"nodeType":"356","messageId":"357","endLine":62,"endColumn":26},{"ruleId":"354","severity":1,"message":"395","line":62,"column":39,"nodeType":"356","messageId":"357","endLine":62,"endColumn":57},{"ruleId":"354","severity":1,"message":"396","line":86,"column":9,"nodeType":"356","messageId":"357","endLine":86,"endColumn":22},{"ruleId":"377","severity":1,"message":"378","line":110,"column":37,"nodeType":"379","messageId":"380","endLine":110,"endColumn":39},{"ruleId":"377","severity":1,"message":"378","line":150,"column":22,"nodeType":"379","messageId":"380","endLine":150,"endColumn":24},{"ruleId":"381","severity":1,"message":"397","line":305,"column":6,"nodeType":"383","endLine":305,"endColumn":22,"suggestions":"398"},{"ruleId":"381","severity":1,"message":"399","line":320,"column":6,"nodeType":"383","endLine":320,"endColumn":8,"suggestions":"400"},{"ruleId":"354","severity":1,"message":"401","line":2,"column":17,"nodeType":"356","messageId":"357","endLine":2,"endColumn":23},{"ruleId":"354","severity":1,"message":"368","line":4,"column":8,"nodeType":"356","messageId":"357","endLine":4,"endColumn":14},{"ruleId":"354","severity":1,"message":"402","line":12,"column":13,"nodeType":"356","messageId":"357","endLine":12,"endColumn":18},{"ruleId":"354","severity":1,"message":"368","line":7,"column":8,"nodeType":"356","messageId":"357","endLine":7,"endColumn":14},{"ruleId":"403","severity":1,"message":"404","line":77,"column":26,"nodeType":"405","messageId":"406","endLine":77,"endColumn":28},{"ruleId":"377","severity":1,"message":"407","line":180,"column":64,"nodeType":"379","messageId":"408","endLine":180,"endColumn":66},{"ruleId":"377","severity":1,"message":"378","line":185,"column":41,"nodeType":"379","messageId":"380","endLine":185,"endColumn":43},{"ruleId":"381","severity":1,"message":"409","line":252,"column":8,"nodeType":"383","endLine":252,"endColumn":10,"suggestions":"410"},{"ruleId":"354","severity":1,"message":"368","line":4,"column":8,"nodeType":"356","messageId":"357","endLine":4,"endColumn":14},{"ruleId":"354","severity":1,"message":"411","line":16,"column":13,"nodeType":"356","messageId":"357","endLine":16,"endColumn":19},{"ruleId":"354","severity":1,"message":"412","line":17,"column":13,"nodeType":"356","messageId":"357","endLine":17,"endColumn":26},{"ruleId":"354","severity":1,"message":"413","line":20,"column":13,"nodeType":"356","messageId":"357","endLine":20,"endColumn":25},{"ruleId":"354","severity":1,"message":"414","line":74,"column":11,"nodeType":"356","messageId":"357","endLine":74,"endColumn":29},{"ruleId":"381","severity":1,"message":"415","line":96,"column":8,"nodeType":"383","endLine":96,"endColumn":10,"suggestions":"416"},{"ruleId":"417","severity":2,"message":"418","line":104,"column":42,"nodeType":"419","messageId":"420","endLine":104,"endColumn":48},{"ruleId":"421","severity":2,"message":"422","line":104,"column":90,"nodeType":"356","messageId":"423","endLine":104,"endColumn":99},{"ruleId":"421","severity":2,"message":"424","line":104,"column":124,"nodeType":"356","messageId":"423","endLine":104,"endColumn":141},{"ruleId":"354","severity":1,"message":"368","line":1,"column":8,"nodeType":"356","messageId":"357","endLine":1,"endColumn":14},{"ruleId":"354","severity":1,"message":"368","line":1,"column":8,"nodeType":"356","messageId":"357","endLine":1,"endColumn":14},{"ruleId":"354","severity":1,"message":"368","line":1,"column":8,"nodeType":"356","messageId":"357","endLine":1,"endColumn":14},{"ruleId":"354","severity":1,"message":"368","line":3,"column":8,"nodeType":"356","messageId":"357","endLine":3,"endColumn":14},{"ruleId":"377","severity":1,"message":"378","line":30,"column":32,"nodeType":"379","messageId":"380","endLine":30,"endColumn":34},{"ruleId":"377","severity":1,"message":"378","line":73,"column":30,"nodeType":"379","messageId":"380","endLine":73,"endColumn":32},{"ruleId":"381","severity":1,"message":"425","line":119,"column":8,"nodeType":"383","endLine":119,"endColumn":23,"suggestions":"426"},{"ruleId":"381","severity":1,"message":"427","line":130,"column":8,"nodeType":"383","endLine":130,"endColumn":15,"suggestions":"428"},{"ruleId":"354","severity":1,"message":"429","line":12,"column":11,"nodeType":"356","messageId":"357","endLine":12,"endColumn":24},{"ruleId":"381","severity":1,"message":"430","line":41,"column":8,"nodeType":"383","endLine":41,"endColumn":10,"suggestions":"431"},{"ruleId":"354","severity":1,"message":"432","line":6,"column":33,"nodeType":"356","messageId":"357","endLine":6,"endColumn":48},{"ruleId":"354","severity":1,"message":"433","line":23,"column":33,"nodeType":"356","messageId":"357","endLine":23,"endColumn":51},{"ruleId":"377","severity":1,"message":"378","line":32,"column":34,"nodeType":"379","messageId":"380","endLine":32,"endColumn":36},{"ruleId":"377","severity":1,"message":"378","line":33,"column":52,"nodeType":"379","messageId":"380","endLine":33,"endColumn":54},{"ruleId":"377","severity":1,"message":"378","line":36,"column":51,"nodeType":"379","messageId":"380","endLine":36,"endColumn":53},{"ruleId":"377","severity":1,"message":"378","line":37,"column":69,"nodeType":"379","messageId":"380","endLine":37,"endColumn":71},{"ruleId":"354","severity":1,"message":"434","line":110,"column":17,"nodeType":"356","messageId":"357","endLine":110,"endColumn":25},{"ruleId":"377","severity":1,"message":"378","line":145,"column":28,"nodeType":"379","messageId":"380","endLine":145,"endColumn":30},{"ruleId":"377","severity":1,"message":"378","line":147,"column":50,"nodeType":"379","messageId":"380","endLine":147,"endColumn":52},{"ruleId":"377","severity":1,"message":"378","line":221,"column":58,"nodeType":"379","messageId":"380","endLine":221,"endColumn":60},{"ruleId":"381","severity":1,"message":"430","line":262,"column":8,"nodeType":"383","endLine":262,"endColumn":19,"suggestions":"435"},"no-native-reassign",["436"],"no-negated-in-lhs",["437"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'button' is assigned a value but never used.","'login_styles' is defined but never used.","'useState' is defined but never used.","'react' is defined but never used.","'signup_styles' is defined but never used.","'admin_styles' is defined but never used.","'questions_styles' is defined but never used.",["436"],["437"],"'styles' is defined but never used.","'Link' is defined but never used.","'students' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'fetchTests' is defined but never used.","'tags' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location'. Either include it or remove the dependency array.","ArrayExpression",["438"],"'questions' is assigned a value but never used.","'setDifficulty' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handlePossibleAnswersChange'. Either include it or remove the dependency array.",["439"],"React Hook useEffect has missing dependencies: 'fetchQuestionTypes' and 'fetchQuestions'. Either include them or remove the dependency array.",["440"],"React Hook useEffect has a missing dependency: 'location.state.field'. Either include it or remove the dependency array.",["441"],"'link' is assigned a value but never used.","'questionsAmount' is assigned a value but never used.","'setQuestionsAmount' is assigned a value but never used.","'initialStates' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'caseEditTest' and 'test'. Either include them or remove the dependency array.",["442"],"React Hook useEffect has missing dependencies: 'fetchCertificateTemplates', 'fetchLanguages', 'fetchTestTypes', and 'fetchTests'. Either include them or remove the dependency array.",["443"],"'filter' is defined but never used.","'tests' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'fetchStudentTests' and 'location.state'. Either include them or remove the dependency array.",["444"],"'filter' is assigned a value but never used.","'filterContent' is assigned a value but never used.","'filterByTags' is assigned a value but never used.","'handleFilterChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.",["445"],"react/jsx-no-undef","'Filter' is not defined.","JSXIdentifier","undefined","no-undef","'questions' is not defined.","undef","'filteredQuestions' is not defined.","React Hook useEffect has a missing dependency: 'pushHistory'. Either include it or remove the dependency array.",["446"],"React Hook useEffect has missing dependencies: 'checkLink' and 'props'. Either include them or remove the dependency array.",["447"],"'reviewAnswers' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'location.state'. Either include them or remove the dependency array.",["448"],"'setStudentTests' is assigned a value but never used.","'setAllBeenAnswered' is assigned a value but never used.","'dateTime' is assigned a value but never used.",["449"],"no-global-assign","no-unsafe-negation",{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},"Update the dependencies array to be: [location]",{"range":"474","text":"475"},"Update the dependencies array to be: [answers, handlePossibleAnswersChange]",{"range":"476","text":"477"},"Update the dependencies array to be: [fetchQuestionTypes, fetchQuestions]",{"range":"478","text":"479"},"Update the dependencies array to be: [location.state.field]",{"range":"480","text":"481"},"Update the dependencies array to be: [caseEditTest, location.state, test]",{"range":"482","text":"483"},"Update the dependencies array to be: [fetchCertificateTemplates, fetchLanguages, fetchTestTypes, fetchTests]",{"range":"484","text":"485"},"Update the dependencies array to be: [fetchStudentTests, location.state]",{"range":"486","text":"487"},"Update the dependencies array to be: [location.state]",{"range":"488","text":"489"},"Update the dependencies array to be: [pushHistory, student, test]",{"range":"490","text":"491"},"Update the dependencies array to be: [checkLink, props, tests]",{"range":"492","text":"493"},"Update the dependencies array to be: [history, location.state]",{"range":"494","text":"495"},"Update the dependencies array to be: [history, location.state, questions]",{"range":"496","text":"497"},[4620,4622],"[location]",[7322,7331],"[answers, handlePossibleAnswersChange]",[8846,8848],"[fetchQuestionTypes, fetchQuestions]",[3412,3414],"[location.state.field]",[10550,10566],"[caseEditTest, location.state, test]",[11009,11011],"[fetchCertificateTemplates, fetchLanguages, fetchTestTypes, fetchTests]",[8852,8854],"[fetchStudentTests, location.state]",[3080,3082],"[location.state]",[3477,3492],"[pushHistory, student, test]",[3764,3771],"[checkLink, props, tests]",[1080,1082],"[history, location.state]",[9908,9919],"[history, location.state, questions]"]