{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\Admin\\\\GradesTable\\\\GradesTable.js\";\nimport styles from './GradesTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GradesTable = ({\n  test,\n  studentTests,\n  handleRespondentClick\n}) => {\n  let numOfQuestions = 0;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"grades__table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"header_row space_under border_bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"        ID                                      \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"        Respondent                              \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"        Submitted                               \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"        Number of Questions Answered            \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"        Grade                                   \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), studentTests && studentTests.filter(studentTest => studentTest.testID === test.testID).map(studentTest => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: handleRespondentClick,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", studentTest.stID, \" \"]\n          }, studentTest.stID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", studentTest.studentName, \" \"]\n          }, studentTest.studentName, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", studentTest.submitted, \" \"]\n          }, studentTest.submitted, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", studentTest.questions.filter(question => question.answer === \"\").map((answer, questionID) => {\n              if (answer !== \"\") numOfQuestions++;\n              if (studentTest.questions[studentTest.questions.length - 1].questionID === questionID) return numOfQuestions;else return \"\";\n            }), \" \"]\n          }, studentTest.questions, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              display: \"none\"\n            },\n            children: [\" \", numOfQuestions = 0, \" \"]\n          }, \"hidden\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", studentTest.grade, \" \"]\n          }, studentTest.grade, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this)]\n        }, \"row\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = GradesTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"GradesTable\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/Admin/GradesTable/GradesTable.js"],"names":["styles","GradesTable","test","studentTests","handleRespondentClick","numOfQuestions","filter","studentTest","testID","map","stID","studentName","submitted","questions","question","answer","questionID","length","display","grade"],"mappings":";AAAA,OAAOA,MAAP,MAAqC,mBAArC;;;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA;AAAtB,CAAD,KAAmD;AAE1E,MAAIC,cAAc,GAAG,CAArB;AAEA,sBACI;AAAA,2BACI;AAAO,MAAA,EAAE,EAAC,eAAV;AAAA,6BACI;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,sCAAd;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EASKF,YAAY,IAAIA,YAAY,CAACG,MAAb,CAAqBC,WAAD,IAAiBA,WAAW,CAACC,MAAZ,KAAuBN,IAAI,CAACM,MAAjE,EAAyEC,GAAzE,CAA8EF,WAAD,iBAC1F;AAAc,UAAA,OAAO,EAAEH,qBAAvB;AAAA,kCACI;AAAA,4BAA+BG,WAAW,CAACG,IAA3C;AAAA,aAASH,WAAW,CAACG,IAArB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,4BAAsCH,WAAW,CAACI,WAAlD;AAAA,aAASJ,WAAW,CAACI,WAArB;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,4BAAoCJ,WAAW,CAACK,SAAhD;AAAA,aAASL,WAAW,CAACK,SAArB;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAIO;AAAA,4BAAkCL,WAAW,CAACM,SAAZ,CAAsBP,MAAtB,CAA8BQ,QAAD,IAAcA,QAAQ,CAACC,MAAT,KAAoB,EAA/D,EAAmEN,GAAnE,CAAuE,CAACM,MAAD,EAASC,UAAT,KAAwB;AAChI,kBAAID,MAAM,KAAK,EAAf,EAAmBV,cAAc;AAEjC,kBAAIE,WAAW,CAACM,SAAZ,CAAsBN,WAAW,CAACM,SAAZ,CAAsBI,MAAtB,GAA+B,CAArD,EAAwDD,UAAxD,KAAuEA,UAA3E,EAAuF,OAAOX,cAAP,CAAvF,KACK,OAAO,EAAP;AACR,aALoC,CAAlC;AAAA,aAASE,WAAW,CAACM,SAArB;AAAA;AAAA;AAAA;AAAA,kBAJP,eAYI;AAAiB,YAAA,KAAK,EAAE;AAACK,cAAAA,OAAO,EAAE;AAAV,aAAxB;AAAA,4BAA+Cb,cAAc,GAAG,CAAhE;AAAA,aAAQ,QAAR;AAAA;AAAA;AAAA;AAAA,kBAZJ,eAcI;AAAA,4BAAgCE,WAAW,CAACY,KAA5C;AAAA,aAASZ,WAAW,CAACY,KAArB;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA,WAAQ,KAAR;AAAA;AAAA;AAAA;AAAA,gBADa,CATrB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAkCH,CAtCM;KAAMlB,W","sourcesContent":["import styles                   from './GradesTable.css';\r\n\r\nexport const GradesTable = ({ test, studentTests, handleRespondentClick }) => {\r\n\r\n    let numOfQuestions = 0;\r\n\r\n    return (\r\n        <>\r\n            <table id=\"grades__table\">\r\n                <tbody>\r\n                    <tr className=\"header_row space_under border_bottom\">\r\n                        <th>        ID                                      </th>\r\n                        <th>        Respondent                              </th>\r\n                        <th>        Submitted                               </th>\r\n                        <th>        Number of Questions Answered            </th>\r\n                        <th>        Grade                                   </th>\r\n                    </tr>\r\n\r\n                    {studentTests && studentTests.filter((studentTest) => studentTest.testID === test.testID).map((studentTest) => (                             \r\n                        <tr key=\"row\" onClick={handleRespondentClick}>\r\n                            <td key={studentTest.stID}> {  studentTest.stID         } </td>\r\n                            <td key={studentTest.studentName}> {  studentTest.studentName  } </td>\r\n                            <td key={studentTest.submitted}> {  studentTest.submitted    } </td>\r\n                            {  <td key={studentTest.questions}> {studentTest.questions.filter((question) => question.answer === \"\").map((answer, questionID) => {\r\n                                if (answer !== \"\") numOfQuestions++;\r\n\r\n                                if (studentTest.questions[studentTest.questions.length - 1].questionID === questionID) return numOfQuestions;\r\n                                else return \"\";\r\n                            })} </td> }                         \r\n                            \r\n                            {/* this td is responsible for resetting the num of questions counter */}\r\n                            <td key=\"hidden\" style={{display: \"none\"}}> {  numOfQuestions = 0  } </td>\r\n\r\n                            <td key={studentTest.grade}> {  studentTest.grade        } </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}