{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\pages\\\\Admin\\\\CreateEditTest\\\\CreateEditTest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '../../../shared/Button/Button';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport styles from './CreateEditTest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateEditTest = ({\n  field,\n  test\n}) => {\n  _s();\n\n  // ----------------------------- Top Content Hooks -----------------------------\n  // *General Details Table*\n  const [language, setLanguage] = useState(test ? test.language : \"\");\n  const [testType, setTestType] = useState(test ? test.testType : \"\");\n  const [testName, setTestName] = useState(test ? test.testName : \"\");\n  const [passingGrade, setPassingGrade] = useState(test ? test.passingGrade : \"\");\n  const [messageHeader, setMessageHeader] = useState(test ? test.messageHeader : \"\");\n  const [messageSuccess, setMessageSuccess] = useState(test ? test.passingSubject : \"\");\n  const [messageFailure, setMessageFailure] = useState(test ? test.passingSubject : \"\");\n  const [certificateTemplate, setCertificateTemplate] = useState(test ? test.passingSubject : \"\"); // *Email Delivery Table*         \n  // Status Container          \n\n  const [status, setStatus] = useState(\"OFF\");\n  const [from, setFrom] = useState(test ? test.passingSubject : \"\");\n  const [cc, setCC] = useState(test ? test.passingSubject : \"\");\n  const [bcc, setBCC] = useState(test ? test.passingSubject : \"\"); // Passing the Test Container\n\n  const [passingMessageSubject, setPassingMessageSubject] = useState(test ? test.passingSubject : \"\");\n  const [passingMessageBody, setPassingMessageBody] = useState(test ? test.passingSubject : \"\"); // Failing the Test Container\n\n  const [failingMessageSubject, setFailingMessageSubject] = useState(\"\");\n  const [failingMessageBody, setFailingMessageBody] = useState(\"\"); // --------------------------- Bottom Content Hooks ---------------------------\n\n  const [testTypes, setTestTypes] = useState(null);\n  const [certificateTemplates, setCertificateTemplates] = useState(null);\n  const [languages, setLanguages] = useState(null); // *Filter Container*\n\n  const [filter, setFilter] = useState(false);\n  const [filterContent, setFilterContent] = useState(\"\"); // *Questions Table\n\n  const [questionsAmount, setQuestionsAmount] = useState(0); // ----------------------------------------------------------------------------\n\n  const handleStatus = value => {\n    setFrom(value);\n  };\n\n  const history = useHistory();\n\n  const Back = () => {\n    history.goBack();\n  };\n\n  const Show = () => {};\n\n  const Save = () => {};\n\n  const fetchLanguages = () => {\n    fetch(\"http://localhost:8000/languages\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setLanguages(data);\n      setLanguage(language ? language : data[0].type);\n    }).catch(err => console.log('error fetching question types:' + err));\n  };\n\n  const fetchTestTypes = () => {\n    fetch(\"http://localhost:8000/testTypes\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setTestTypes(data);\n      setTestType(testType ? testType : data[0].type);\n    }).catch(err => console.log('error fetching question types:' + err));\n  };\n\n  const fetchCertificateTemplates = () => {\n    fetch(\"http://localhost:8000/certificateTemplates\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setCertificateTemplates(data);\n      setCertificateTemplate(certificateTemplate ? certificateTemplate : data[0].template);\n    }).catch(err => console.log('error fetching question types:' + err));\n  };\n\n  useEffect(() => {\n    document.title = `${test === undefined ? \"Create\" : \"Edit\"} Test`;\n  }, [test]); // Meant for fetching the neccessary information on first render\n\n  useEffect(() => {\n    let isMounted = true; // note mutable flag\n\n    if (isMounted) {\n      // add conditional check\n      fetchTestTypes();\n      fetchCertificateTemplates();\n    }\n\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create_edit_test noselect\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", test === undefined ? \"Create\" : \"Edit\", \" Test \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"new_test__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"top_content__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section__headers\",\n          children: \" General Test Details \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content__section\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            id: \"general_details__table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Field of Study: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    id: \"field__label\",\n                    children: [\" \", field ? field : \"undefined\", \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Language: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"  \", /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"language__select\",\n                    onChange: e => setLanguage(e.target.value),\n                    children: [languages && testTypes.map(testType => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: testType.type,\n                      children: [\" \", testType.type, \" \"]\n                    }, testType.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 29\n                    }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"english\",\n                      onChange: e => setLanguage(e.target.value),\n                      defaultValue: true,\n                      children: \" English  \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"hebrew\",\n                      onChange: e => setLanguage(e.target.value),\n                      children: \" Hebrew   \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 25\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Test Type: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"test_type__select\",\n                    onChange: e => setTestType(e.target.value),\n                    children: testTypes && testTypes.map(testType => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: testType.type,\n                      children: [\" \", testType.type, \" \"]\n                    }, testType.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Test Name:                                                                                                                                                  \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"test_name__input\",\n                    type: \"text\",\n                    placeholder: \"Type test name\",\n                    value: testName,\n                    onChange: e => setTestName(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Passing Grade:                                                                                                                                              \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"passing_grade__input\",\n                    type: \"text\",\n                    placeholder: \"Grade\",\n                    value: passingGrade,\n                    onChange: e => setPassingGrade(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Show correct answers after submission:                                                                                                                      \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"show_answers__checkbox\",\n                    type: \"checkbox\",\n                    defaultChecked: true,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Message header:                                                                                                                                             \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"message_header__input\",\n                    type: \"text\",\n                    placeholder: \"Type something\",\n                    value: messageHeader,\n                    onChange: e => setMessageHeader(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Message to show on success:                                                                                                                                 \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"message_success__input\",\n                    type: \"text\",\n                    placeholder: \"Type something\",\n                    value: messageSuccess,\n                    onChange: e => setMessageSuccess(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Message to show on failure:                                                                                                                                 \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"message_failure__input\",\n                    type: \"text\",\n                    placeholder: \"Type something\",\n                    value: messageFailure,\n                    onChange: e => setMessageFailure(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Certificate Templates: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"certificate__select\",\n                    onChange: e => setCertificateTemplate(e.target.value),\n                    children: certificateTemplates && certificateTemplates.map(certificate => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: certificate.template,\n                      children: [\" \", certificate.template, \" \"]\n                    }, certificate.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content__section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section__headers\",\n            children: \" Email Delivery Upon Test Completion \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            id: \"email_delivery__table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Current Status:                                                                                                                                             \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"sending_emails__container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      id: \"sending_emails__label\",\n                      children: [\" Emails \", status === \"OFF\" ? `won't` : \"will\", \" be sent upon test completion.                                                   \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\" to turn \", status === \"OFF\" ? \"ON\" : \"OFF\", \" email delivery, \", status === \"OFF\" ? \"fill out\" : \"reset\", \" the mandatory                    \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \" fields in this section:                                                                                                              \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" From: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"from__input\",\n                    type: \"text\",\n                    value: from,\n                    onChange: e => handleStatus(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" CC: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"cc__input\",\n                    type: \"text\",\n                    value: cc,\n                    onChange: e => setCC(e.target.value),\n                    disabled: from ? false : true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" BCC: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"bcc__input\",\n                    type: \"text\",\n                    value: bcc,\n                    onChange: e => setBCC(e.target.value),\n                    disabled: from ? false : true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            id: \"passing_test__table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Message subject:                                                                                                                                            \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"message_subject__input\",\n                    type: \"text\",\n                    value: passingMessageSubject,\n                    onChange: e => setPassingMessageSubject(e.target.value),\n                    disabled: from ? false : true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Message body:                                                                                                                                               \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"message_body__input\",\n                    type: \"text\",\n                    value: passingMessageBody,\n                    onChange: e => setPassingMessageBody(e.target.value),\n                    disabled: from ? false : true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    fontWeight: 'bold'\n                  },\n                  children: \" Predefined Templated - Click to copy to clipboard \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" NEED TO ADD TEMPLATES HERE \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"failing_test__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Message subject:                                                                                                                                            \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"message_subject__input\",\n                  type: \"text\",\n                  value: failingMessageSubject,\n                  onChange: e => setFailingMessageSubject(e.target.value),\n                  disabled: from ? false : true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Message body:                                                                                                                                               \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"message_body__input\",\n                  type: \"text\",\n                  value: failingMessageBody,\n                  onChange: e => setFailingMessageBody(e.target.value),\n                  disabled: from ? false : true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: \" Predefined Templated - Click to copy to clipboard \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \" NEED TO ADD TEMPLATES HERE \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bottom_content__container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"questions__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section__headers\",\n            children: \" Questions \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"explanation\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: [\" Note: This test is set to be a \", `'${testType}'`, \" test, which means:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"sub__label\",\n              children: \" All the questions that you select here will be included in the test. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"sub__label\",\n              children: \" All respondents will receive the SAME set of questions. presented in a different order. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"sub__label\",\n              children: [\" *TIP: if you want each respondent to receive a different set of questions, change the test type to 'Random' in the\", /*#__PURE__*/_jsxDEV(Link, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this), \" section.* \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"question_table__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                fontWeight: 'bold',\n                color: 'orange'\n              },\n              children: \" Select the questions that you want to include in the test \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" You can use the tag filter to narrow down the list to a specific subject - Don't worry, filtering won't affect your previous selections. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"filter__container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: \" Filter by tags or content \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"tag_content__input\",\n                type: \"text\",\n                onChange: e => {\n                  setFilterContent(e.target.value);\n                  filterContent === \"\" ? setFilter(false) : setFilter(true);\n                },\n                placeholder: \"Enter a list of keywords separated by commas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                id: \"filter_state\",\n                children: [\" Filter is \", filter === false ? \"OFF\" : \"ON\", \"  \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              id: \"questions__table\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: [\" Currently showing \", `AMOUNT OF QUESTIONS`, \" questions (\", `AMOUNT OF QUESTIONS`, \" selected \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \" What is the DOM? \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \" *IN SMALL TEXT* Javascript | Advanced\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"table_buttons__container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\" Showing 1-\", `AMOUNT OF QUESTIONS`, \" of \", `AMOUNT OF QUESTIONS`, \" filtered questions\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: [\" Next 2 \", `>>`, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \" Show only Selected \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: [\" Show All \", `AMOUNT OF QUESTIONS`, \" questions \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\" The test will include \", `AMOUNT OF QUESTIONS`, \" in total \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"buttons__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => Back(),\n          children: [\" \", `<<`, \" Back  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => Show(),\n          children: \"  Show         \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => Save(),\n          children: [\"  Save \", `>>`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateEditTest, \"2y8P7fcMJlWB126F9lWiHQQCZ+4=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateEditTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateEditTest\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Admin/CreateEditTest/CreateEditTest.js"],"names":["React","useState","useEffect","Button","Link","useHistory","styles","CreateEditTest","field","test","language","setLanguage","testType","setTestType","testName","setTestName","passingGrade","setPassingGrade","messageHeader","setMessageHeader","messageSuccess","setMessageSuccess","passingSubject","messageFailure","setMessageFailure","certificateTemplate","setCertificateTemplate","status","setStatus","from","setFrom","cc","setCC","bcc","setBCC","passingMessageSubject","setPassingMessageSubject","passingMessageBody","setPassingMessageBody","failingMessageSubject","setFailingMessageSubject","failingMessageBody","setFailingMessageBody","testTypes","setTestTypes","certificateTemplates","setCertificateTemplates","languages","setLanguages","filter","setFilter","filterContent","setFilterContent","questionsAmount","setQuestionsAmount","handleStatus","value","history","Back","goBack","Show","Save","fetchLanguages","fetch","method","then","res","json","data","type","catch","err","console","log","fetchTestTypes","fetchCertificateTemplates","template","document","title","undefined","isMounted","e","target","map","id","certificate","fontWeight","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport        { Button }              from '../../../shared/Button/Button';\r\nimport        { Link }                from 'react-router-dom';\r\nimport        { useHistory }          from 'react-router-dom';\r\nimport styles                         from './CreateEditTest.css';\r\n\r\nexport const CreateEditTest = ({ field, test }) => {\r\n\r\n  // ----------------------------- Top Content Hooks -----------------------------\r\n\r\n  // *General Details Table*\r\n  const [ language,                   setLanguage               ] = useState(test ? test.language : \"\");\r\n  const [ testType,                   setTestType               ] = useState(test ? test.testType : \"\");\r\n  const [ testName,                   setTestName               ] = useState(test ? test.testName : \"\");\r\n  const [ passingGrade,               setPassingGrade           ] = useState(test ? test.passingGrade : \"\");\r\n  const [ messageHeader,              setMessageHeader          ] = useState(test ? test.messageHeader : \"\");\r\n  const [ messageSuccess,             setMessageSuccess         ] = useState(test ? test.passingSubject : \"\");\r\n  const [ messageFailure,             setMessageFailure         ] = useState(test ? test.passingSubject : \"\");\r\n  const [ certificateTemplate,        setCertificateTemplate    ] = useState(test ? test.passingSubject : \"\");\r\n\r\n  // *Email Delivery Table*         \r\n  // Status Container          \r\n  const [ status,                     setStatus                 ] = useState(\"OFF\");\r\n  const [ from,                       setFrom                   ] = useState(test ? test.passingSubject : \"\");\r\n  const [ cc,                         setCC                     ] = useState(test ? test.passingSubject : \"\");\r\n  const [ bcc,                        setBCC                    ] = useState(test ? test.passingSubject : \"\");    \r\n\r\n  // Passing the Test Container\r\n  const [ passingMessageSubject,      setPassingMessageSubject  ] = useState(test ? test.passingSubject : \"\");\r\n  const [ passingMessageBody,         setPassingMessageBody     ] = useState(test ? test.passingSubject : \"\");    \r\n\r\n  // Failing the Test Container\r\n  const [ failingMessageSubject,      setFailingMessageSubject  ] = useState(\"\");    \r\n  const [ failingMessageBody,         setFailingMessageBody     ] = useState(\"\");  \r\n\r\n  // --------------------------- Bottom Content Hooks ---------------------------\r\n  \r\n  const [ testTypes,                  setTestTypes              ] = useState(null);\r\n  const [ certificateTemplates,       setCertificateTemplates   ] = useState(null);\r\n  const [ languages,                  setLanguages              ] = useState(null);\r\n\r\n  // *Filter Container*\r\n  const [ filter,                     setFilter                 ] = useState(false);\r\n  const [ filterContent,              setFilterContent          ] = useState(\"\");\r\n\r\n  // *Questions Table\r\n  const [ questionsAmount,            setQuestionsAmount        ] = useState(0);\r\n\r\n  // ----------------------------------------------------------------------------\r\n\r\n  const handleStatus = (value) => {\r\n    setFrom(value);\r\n  }\r\n\r\n  const history = useHistory();\r\n\r\n  const Back = () => {\r\n      history.goBack();\r\n  }\r\n\r\n  const Show = () => {\r\n    \r\n  }\r\n\r\n  const Save = () => {  \r\n    \r\n  }\r\n\r\n  const fetchLanguages = () => {\r\n    fetch(\"http://localhost:8000/languages\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setLanguages(data); \r\n      setLanguage(language ? language : data[0].type); \r\n    })\r\n    .catch((err) => console.log('error fetching question types:' + err))\r\n  }\r\n\r\n  const fetchTestTypes = () => {\r\n    fetch(\"http://localhost:8000/testTypes\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setTestTypes(data); \r\n      setTestType(testType ? testType : data[0].type); \r\n    })\r\n    .catch((err) => console.log('error fetching question types:' + err))\r\n  }\r\n\r\n  const fetchCertificateTemplates = () => {\r\n    fetch(\"http://localhost:8000/certificateTemplates\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setCertificateTemplates(data); \r\n      setCertificateTemplate(certificateTemplate ? certificateTemplate : data[0].template); \r\n    })\r\n    .catch((err) => console.log('error fetching question types:' + err))\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = `${test === undefined ? \"Create\" : \"Edit\"} Test`;\r\n  }, [test])\r\n\r\n  // Meant for fetching the neccessary information on first render\r\n  useEffect(() => {\r\n    let isMounted = true;           // note mutable flag\r\n\r\n    if (isMounted) {                // add conditional check\r\n      fetchTestTypes();\r\n      fetchCertificateTemplates();\r\n    }\r\n\r\n    return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"create_edit_test noselect\">\r\n      <h1> {test === undefined ? \"Create\" : \"Edit\"} Test </h1> {/* className=\"page__header\" */}\r\n      <form className=\"new_test__form\">\r\n        <div id=\"top_content__container\">\r\n          \r\n          <h2 className=\"section__headers\"> General Test Details </h2>\r\n          <div className=\"content__section\">\r\n            {/* Might not work, JUST FOR NOW !!! */}\r\n            <table id=\"general_details__table\">\r\n              <tbody>\r\n                <tr>\r\n                  <td> <label> Field of Study: </label> </td>\r\n                  <td> <label id=\"field__label\"> {field ? field : \"undefined\"} </label> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Language: </label> </td>\r\n                  <td>  <select id=\"language__select\" onChange={(e) => setLanguage (e.target.value)}>\r\n                          {languages && testTypes.map((testType) => (\r\n                            <option key={testType.id} value={testType.type}> {testType.type} </option>\r\n                          ))}\r\n\r\n                        {/* <option className=\"question_type\" value=\"\" selected disabled hidden > Choose Language  </option> */}\r\n                          <option value=\"english\"     onChange={(e) => setLanguage (e.target.value)} defaultValue > English  </option>\r\n                          <option value=\"hebrew\"      onChange={(e) => setLanguage (e.target.value)}              > Hebrew   </option>\r\n                        </select> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Test Type: </label> </td>\r\n                  <td> <select id=\"test_type__select\" onChange={(e) => setTestType (e.target.value)}>\r\n                          {testTypes && testTypes.map((testType) => (\r\n                            <option key={testType.id} value={testType.type}> {testType.type} </option>\r\n                          ))}\r\n                        </select> </td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td> <label> Test Name:                                                                                                                                                  </label> </td>\r\n                  <td> <input id=\"test_name__input\"       type=\"text\"     placeholder=\"Type test name\"      value={testName}        onChange={(e) => setTestName     (e.target.value)}   required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Passing Grade:                                                                                                                                              </label> </td>\r\n                  <td> <input id=\"passing_grade__input\"   type=\"text\"     placeholder=\"Grade\"               value={passingGrade}    onChange={(e) => setPassingGrade (e.target.value)}   required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Show correct answers after submission:                                                                                                                      </label> </td>\r\n                  <td> <input id=\"show_answers__checkbox\" type=\"checkbox\" defaultChecked                                                                                                 required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Message header:                                                                                                                                             </label> </td>\r\n                  <td> <input id=\"message_header__input\"  type=\"text\"     placeholder=\"Type something\"      value={messageHeader}   onChange={(e) => setMessageHeader  (e.target.value)} required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Message to show on success:                                                                                                                                 </label> </td>\r\n                  <td> <input id=\"message_success__input\" type=\"text\"     placeholder=\"Type something\"      value={messageSuccess}  onChange={(e) => setMessageSuccess (e.target.value)} required/> </td>\r\n                </tr>   \r\n\r\n                <tr>    \r\n                  <td> <label> Message to show on failure:                                                                                                                                 </label> </td>\r\n                  <td> <input id=\"message_failure__input\" type=\"text\"     placeholder=\"Type something\"      value={messageFailure}  onChange={(e) => setMessageFailure (e.target.value)} required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Certificate Templates: </label> </td>\r\n                  <td> <select id=\"certificate__select\" onChange={(e) => setCertificateTemplate (e.target.value)}>\r\n                          {certificateTemplates && certificateTemplates.map((certificate) => (\r\n                            <option key={certificate.id} value={certificate.template}> {certificate.template} </option>\r\n                          ))}\r\n                        </select> </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div className=\"content__section\">\r\n            <h2 className=\"section__headers\"> Email Delivery Upon Test Completion </h2>\r\n            <table id=\"email_delivery__table\">\r\n              <tbody>\r\n                <tr>\r\n                  <td> <label> Current Status:                                                                                                                                             </label> </td>\r\n                  <td> <div id=\"sending_emails__container\">      \r\n                          <label id=\"sending_emails__label\" > Emails {status === \"OFF\" ? `won't` : \"will\"} be sent upon test completion.                                                   </label>\r\n                          <label                    > to turn {status === \"OFF\" ? \"ON\" : \"OFF\"} email delivery, {status === \"OFF\" ? \"fill out\" : \"reset\"} the mandatory                    </label>\r\n                          <label                    > fields in this section:                                                                                                              </label>\r\n                        </div> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> From: </label> </td>\r\n                  <td> <input id=\"from__input\"  type=\"text\" value={from}  onChange={(e) => handleStatus(e.target.value)}                                                                         /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> CC: </label> </td>      \r\n                  <td> <input id=\"cc__input\"    type=\"text\" value={cc}    onChange={(e) => setCC(e.target.value)}   disabled={from ? false : true}                                               /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> BCC: </label> </td>       \r\n                  <td> <input id=\"bcc__input\"   type=\"text\" value={bcc}   onChange={(e) => setBCC(e.target.value)}  disabled={from ? false : true}                                               /> </td>\r\n                </tr>      \r\n              </tbody>\r\n            </table>       \r\n         \r\n         \r\n            <table id=\"passing_test__table\">   \r\n              <tbody>\r\n                <tr>       \r\n                  <td> <label> Message subject:                                                                                                                                            </label> </td>\r\n                  <td> <input id=\"message_subject__input\" type=\"text\" value={passingMessageSubject} onChange={(e) => setPassingMessageSubject(e.target.value)}  disabled={from ? false : true}   /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> Message body:                                                                                                                                               </label> </td>\r\n                  <td> <input id=\"message_body__input\"    type=\"text\" value={passingMessageBody}    onChange={(e) => setPassingMessageBody(e.target.value)} disabled={from ? false : true}       /> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <label style={{fontWeight: 'bold'}}> Predefined Templated - Click to copy to clipboard </label>\r\n                  <label> NEED TO ADD TEMPLATES HERE </label>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n\r\n          <table id=\"failing_test__table\">\r\n            <tbody>\r\n              <tr>\r\n                <td> <label> Message subject:                                                                                                                                            </label> </td>\r\n                <td> <input id=\"message_subject__input\" type=\"text\" value={failingMessageSubject} onChange={(e) => setFailingMessageSubject(e.target.value)}  disabled={from ? false : true}   /> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td> <label> Message body:                                                                                                                                               </label> </td>\r\n                <td> <input id=\"message_body__input\"    type=\"text\" value={failingMessageBody}    onChange={(e) => setFailingMessageBody(e.target.value)} disabled={from ? false : true}       /> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <label style={{fontWeight: 'bold'}}> Predefined Templated - Click to copy to clipboard </label>\r\n                <label> NEED TO ADD TEMPLATES HERE </label>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div id=\"bottom_content__container\">\r\n          <div id=\"questions__container\">\r\n            <h2 className=\"section__headers\"> Questions </h2>\r\n            <div id=\"explanation\">\r\n              <label style={{fontWeight: 'bold'}}> Note: This test is set to be a {`'${testType}'`} test, which means:</label>\r\n              \r\n              {/* INSTEAD OF THIS: */}\r\n              <label className=\"sub__label\"> All the questions that you select here will be included in the test. </label>\r\n              <label className=\"sub__label\"> All respondents will receive the SAME set of questions. presented in a different order. </label>\r\n\r\n              {/* NEED TO CHANGE THE 'LINK' TO SOMETHING ELSE - SOMETHING THAT WILL REFER THE USER BACK TO THE TEST DETAILS  */}\r\n              <label className=\"sub__label\"> *TIP: if you want each respondent to receive a different set of questions, change the test type to 'Random' in the \r\n                <Link></Link> section.* </label>\r\n\r\n              {/* FOR EVERY LABEL OR SOMETHING FROM THE DB THAT CONTAINS THE TEST TYPES, I WILL NEED TO DO THIS */}\r\n              {/* <label className=\"sub__label\"> {TestType.child.text} </label> */}\r\n            </div>\r\n\r\n            <div id=\"question_table__container\">\r\n              <label style={{fontWeight: 'bold', color: 'orange'}}> Select the questions that you want to include in the test </label>\r\n              <label> You can use the tag filter to narrow down the list to a specific subject - Don't worry, filtering won't affect your previous selections. </label>\r\n\r\n              <div id=\"filter__container\">\r\n                <label style={{fontWeight: 'bold'}}> Filter by tags or content </label>\r\n                <input id=\"tag_content__input\" type=\"text\"\r\n                            onChange={(e) => { setFilterContent(e.target.value); filterContent === \"\" ? setFilter(false) : setFilter(true)} }\r\n                            placeholder='Enter a list of keywords separated by commas'/>\r\n                    <label id=\"filter_state\"> Filter is {filter === false ? \"OFF\" : \"ON\"}  </label>\r\n              </div>\r\n\r\n              <table id=\"questions__table\">\r\n                <tbody>\r\n                  <th> Currently showing {`AMOUNT OF QUESTIONS`} questions ({`AMOUNT OF QUESTIONS`} selected </th>\r\n                  <tr>\r\n                    {/* CHANGE THIS SO EVERY QUESTION THAT MATCHES THE FILTER WILL BE PLACED IN A NEW TABLE ROW, AND THAT THE SHOW BUTTON CAN SHOW THE QUESTIONS CONTENT\r\n                    PLS PAY ATTENTION THAT THIS KIND OF OPEN MENU CAN BE CREATED AND RE-USED FOR THE 'TEST REPORT' PAGE AS WELL */}\r\n\r\n                    <td>\r\n                      <label> What is the DOM? </label>\r\n                      <label> *IN SMALL TEXT* Javascript | Advanced</label>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n              <div id=\"table_buttons__container\">\r\n                <label> Showing 1-{`AMOUNT OF QUESTIONS`} of {`AMOUNT OF QUESTIONS`} filtered questions</label>\r\n                <button> Next 2 {`>>`} </button>\r\n                <button> Show only Selected </button>\r\n                <button> Show All {`AMOUNT OF QUESTIONS`} questions </button>\r\n              </div>\r\n            </div>\r\n\r\n            <label> The test will include {`AMOUNT OF QUESTIONS`} in total </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"buttons__container\">\r\n            <button onClick={() => Back() }> {`<<` } Back  </button>\r\n            <button onClick={() => Show() }>  Show         </button>\r\n            <button onClick={() => Save() }>  Save {`>>` } </button>\r\n          </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};"]},"metadata":{},"sourceType":"module"}