{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\pages\\\\Admin\\\\TestReport\\\\TestReport.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { SummaryTable } from '../../../Admin/SummaryTable/SummaryTable';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport styles from './TestReport.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TestReport = () => {\n  _s();\n\n  // ------------------------ Fetch Info Hooks -----------------------\n  const [field, setField] = useState(null);\n  const [test, setTest] = useState(null);\n  const [dateRange, setDateRange] = useState(null); // ------------------------- Summary Hooks -------------------------\n\n  const [averageGrade, setAverageGrade] = useState(0); // ------------------------- Grades Hooks --------------------------\n\n  const [respondentChosen, setRespondentChosen] = useState(false); // ----------------------- Statistics Hooks ------------------------\n\n  const [filterContent, setFilterContent] = useState(\"\"); // -----------------------------------------------------------------\n\n  const location = useLocation(); // for location state\n\n  const history = useHistory();\n\n  const back = () => {\n    history.goBack();\n  };\n\n  const expandAll = () => {};\n\n  const exportToExecl = () => {};\n\n  const printReport = () => {};\n\n  const countNumberOfQuestions = () => {};\n\n  useEffect(() => {\n    document.title = \"Test Report\";\n  }, []);\n  useEffect(() => {\n    let isMounted = true; // note mutable flag\n\n    if (isMounted) {// add conditional check\n    }\n\n    console.log(location.state.field); // for location state\n\n    console.log(location.state.test); // for location state\n\n    console.log(location.state.dateRange);\n    setField(location.state.field);\n    setTest(location.state.test);\n    setDateRange(location.state.dateRange);\n    countNumberOfQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test_report noselect\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"headers__container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" Test result for \", field, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"content__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"Summary_table__container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"questions__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"space_under\",\n              children: /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Summary \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this), test && Object.keys(test).map(p => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"space_under\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\" \", p.testName, \"   \"]\n                  }, p.testName, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"   \", p.testID, \"     \"]\n                  }, p.testID, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\" \", p.testCode, \" \"]\n                  }, p.testCode, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\" \", p.testType, \" \"]\n                  }, p.testType, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\" \", p.numOfQuestions, \" \"]\n                  }, p.numOfQuestions, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\" \", p.testName, \" \"]\n                  }, p.testName, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\" \", p.testName, \" \"]\n                  }, p.testName, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\" \", p.testName, \" \"]\n                  }, p.testName, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => expandAll(),\n        children: \" Expand All \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"Details__table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"header_row space_under border_bottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"        ID                     \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"        Question               \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"        Answered Correctly?    \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"        Date Answered          \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"buttons__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"regular__button\",\n          onClick: () => back(),\n          children: [\"  \", `<<`, \" Back    \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"regular__button\",\n          onClick: () => exportToExecl(),\n          children: \"  Export To Excel \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"regular__button\",\n          onClick: () => printReport(),\n          children: \"  Print Report    \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TestReport, \"o+6oA0LA/nXL/OmJ/YVGjvVPClA=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = TestReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestReport\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Admin/TestReport/TestReport.js"],"names":["React","useEffect","useState","SummaryTable","useHistory","useLocation","styles","TestReport","field","setField","test","setTest","dateRange","setDateRange","averageGrade","setAverageGrade","respondentChosen","setRespondentChosen","filterContent","setFilterContent","location","history","back","goBack","expandAll","exportToExecl","printReport","countNumberOfQuestions","document","title","isMounted","console","log","state","Object","keys","map","p","testName","testID","testCode","testType","numOfQuestions"],"mappings":"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","sourcesContent":["import React, { useEffect, useState }       from 'react';\r\nimport        { SummaryTable }              from '../../../Admin/SummaryTable/SummaryTable';\r\nimport        { useHistory, useLocation }   from 'react-router-dom';\r\nimport styles                               from './TestReport.css'\r\n\r\nexport const TestReport = () => {\r\n\r\n    // ------------------------ Fetch Info Hooks -----------------------\r\n\r\n    const [ field,               setField               ]       = useState(null);\r\n    const [ test,                setTest                ]       = useState(null);\r\n    const [ dateRange,           setDateRange           ]       = useState(null);\r\n\r\n    // ------------------------- Summary Hooks -------------------------\r\n    \r\n    const [ averageGrade,        setAverageGrade        ]       = useState(0);\r\n    \r\n    // ------------------------- Grades Hooks --------------------------\r\n    \r\n    const [ respondentChosen,    setRespondentChosen    ]       = useState(false);\r\n    \r\n    // ----------------------- Statistics Hooks ------------------------\r\n\r\n    const [ filterContent,       setFilterContent       ]       = useState(\"\");\r\n\r\n    // -----------------------------------------------------------------\r\n\r\n    const location = useLocation(); // for location state\r\n\r\n    const history = useHistory();\r\n    const back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const expandAll = () => {\r\n\r\n    }\r\n    \r\n    const exportToExecl = () => {\r\n\r\n    }\r\n\r\n    const printReport = () => {\r\n\r\n    }\r\n\r\n    const countNumberOfQuestions = () => {\r\n\r\n    }\r\n    \r\n    useEffect(() => {\r\n        document.title = \"Test Report\";\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n    \r\n        if (isMounted) {                // add conditional check\r\n\r\n        }\r\n\r\n        console.log(location.state.field)  // for location state\r\n        console.log(location.state.test)  // for location state\r\n        console.log(location.state.dateRange) \r\n\r\n        setField(location.state.field);\r\n        setTest(location.state.test)\r\n        setDateRange(location.state.dateRange);\r\n\r\n        countNumberOfQuestions();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"test_report noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1> Test result for {field} </h1>\r\n            </div>\r\n\r\n            <div id=\"content__container\">\r\n                <div id=\"Summary_table__container\">                    \r\n                <table id=\"questions__table\">\r\n                    <tbody>\r\n                        <tr className=\"space_under\">\r\n                            <th> Summary </th>\r\n                        </tr>\r\n\r\n                        {test && Object.keys(test).map((p) => {\r\n                            return (\r\n                                <tr className=\"space_under\">\r\n                                    <td><label key={p.testName}> {p.testName}   </label></td>\r\n                                    <td><label key={p.testID}>   {p.testID}     </label></td>\r\n                                    <td><label key={p.testCode}> {p.testCode} </label></td>\r\n                                    <td><label key={p.testType}> {p.testType} </label></td>\r\n                                    <td><label key={p.numOfQuestions}> {p.numOfQuestions} </label></td>\r\n                                    <td><label key={p.testName}> {p.testName} </label></td>\r\n                                    <td><label key={p.testName}> {p.testName} </label></td>\r\n                                    <td><label key={p.testName}> {p.testName} </label></td>\r\n                                </tr> \r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n\r\n                <button onClick={ () => expandAll() }> Expand All </button>\r\n                <table id=\"Details__table\">\r\n                    <tbody>\r\n                        <tr className=\"header_row space_under border_bottom\">\r\n                            <th>        ID                     </th>\r\n                            <th>        Question               </th>\r\n                            <th>        Answered Correctly?    </th>\r\n                            <th>        Date Answered          </th>\r\n                        </tr>\r\n                        {/* {{AdminMenu.map(({ title, content }) => (                              <<-------------------    EXAMPLE\r\n                                        <Accordion title={title} content={content} />\r\n                                    ))}}\r\n                        <tr >                                                                 <<-------------------    EXAMPLE 2  \r\n                            { {children.map(({ ID, Link, name, update, type, version }) => (\r\n                                \r\n                            <td> {ID} </td>\r\n                            <td> {Link} </td>\r\n                            <td> {name} </td>\r\n                            <td> {update} </td>\r\n                            <td> {type} </td>\r\n                            <td> {version} </td>\r\n                            <td> </td>\r\n                            ))}}\r\n                        </tr> */}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div id=\"buttons__container\">\r\n                    <button className=\"regular__button\" onClick={ () =>   back()           }>  {`<<` } Back    </button>\r\n                    <button className=\"regular__button\" onClick={ () =>   exportToExecl()  }>  Export To Excel </button>\r\n                    <button className=\"regular__button\" onClick={ () =>   printReport()    }>  Print Report    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}