{"ast":null,"code":"import _slicedToArray from\"C:/Users/ofeki/OneDrive/\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4/ExamApp design ver/ExamsApp/react_client_exams_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{HashLink as Link}from'react-router-hash-link';import{useHistory,useLocation}from'react-router-dom';import{Filter}from'../../../../../Admin/Filter/Filter';import{QuestionTable}from'../../../../../Admin/QuestionTable/QuestionTable';import styles from'./CreateEditTest.css';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function CreateEditTest(){// -------------------------------------------- Fetch Info Hooks --------------------------------------------\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),field=_useState2[0],setField=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),test=_useState4[0],setTest=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),tests=_useState6[0],setTests=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),testTypes=_useState8[0],setTestTypes=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),certificateTemplates=_useState10[0],setCertificateTemplates=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),languages=_useState12[0],setLanguages=_useState12[1];var _useState13=useState(null),_useState14=_slicedToArray(_useState13,2),questions=_useState14[0],setQuestions=_useState14[1];var _useState15=useState(null),_useState16=_slicedToArray(_useState15,2),filteredQuestions=_useState16[0],setFilteredQuestions=_useState16[1];// -------------------------------------------- Top Content Hooks -------------------------------------------\n// *General Details Table*\nvar _useState17=useState(0),_useState18=_slicedToArray(_useState17,2),testID=_useState18[0],setTestID=_useState18[1];var _useState19=useState(0),_useState20=_slicedToArray(_useState19,2),testCode=_useState20[0],setTestCode=_useState20[1];var _useState21=useState(\"\"),_useState22=_slicedToArray(_useState21,2),testType=_useState22[0],setTestType=_useState22[1];var _useState23=useState(\"\"),_useState24=_slicedToArray(_useState23,2),testName=_useState24[0],setTestName=_useState24[1];var _useState25=useState(\"\"),_useState26=_slicedToArray(_useState25,2),language=_useState26[0],setLanguage=_useState26[1];var _useState27=useState(\"\"),_useState28=_slicedToArray(_useState27,2),passingGrade=_useState28[0],setPassingGrade=_useState28[1];var _useState29=useState(\"\"),_useState30=_slicedToArray(_useState29,2),header=_useState30[0],setHeader=_useState30[1];var _useState31=useState(\"\"),_useState32=_slicedToArray(_useState31,2),messageSuccess=_useState32[0],setMessageSuccess=_useState32[1];var _useState33=useState(\"\"),_useState34=_slicedToArray(_useState33,2),messageFailure=_useState34[0],setMessageFailure=_useState34[1];var _useState35=useState(1),_useState36=_slicedToArray(_useState35,2),version=_useState36[0],setVersion=_useState36[1];var _useState37=useState(0),_useState38=_slicedToArray(_useState37,2),certificateTemplateID=_useState38[0],setCertificateTemplateID=_useState38[1];var _useState39=useState(false),_useState40=_slicedToArray(_useState39,2),reviewTest=_useState40[0],setReviewTest=_useState40[1];var _useState41=useState(Date.now()),_useState42=_slicedToArray(_useState41,2),lastUpdate=_useState42[0],setLastUpdate=_useState42[1];var _useState43=useState(\"\"),_useState44=_slicedToArray(_useState43,2),link=_useState44[0],setLink=_useState44[1];// *Email Delivery Table*         \n// Status Container          \nvar _useState45=useState(\"OFF\"),_useState46=_slicedToArray(_useState45,2),status=_useState46[0],setStatus=_useState46[1];var _useState47=useState(\"\"),_useState48=_slicedToArray(_useState47,2),from=_useState48[0],setFrom=_useState48[1];var _useState49=useState(\"\"),_useState50=_slicedToArray(_useState49,2),cc=_useState50[0],setCC=_useState50[1];var _useState51=useState(\"\"),_useState52=_slicedToArray(_useState51,2),bcc=_useState52[0],setBCC=_useState52[1];// Passing the Test Container\nvar _useState53=useState(\"\"),_useState54=_slicedToArray(_useState53,2),passingSubject=_useState54[0],setPassingSubject=_useState54[1];var _useState55=useState(\"\"),_useState56=_slicedToArray(_useState55,2),passingBody=_useState56[0],setPassingBody=_useState56[1];// Failing the Test Container\nvar _useState57=useState(\"\"),_useState58=_slicedToArray(_useState57,2),failingSubject=_useState58[0],setFailingSubject=_useState58[1];var _useState59=useState(\"\"),_useState60=_slicedToArray(_useState59,2),failingBody=_useState60[0],setFailingBody=_useState60[1];// -------------------------------------------- Bottom Content Hooks ----------------------------------------\n// *Filter Container*\nvar _useState61=useState(false),_useState62=_slicedToArray(_useState61,2),filterStatus=_useState62[0],setFilterStatus=_useState62[1];var _useState63=useState(true),_useState64=_slicedToArray(_useState63,2),filterByTags=_useState64[0],setFilterByTags=_useState64[1];// *Questions Table\nvar _useState65=useState(0),_useState66=_slicedToArray(_useState65,2),questionsAmount=_useState66[0],setQuestionsAmount=_useState66[1];var _useState67=useState([]),_useState68=_slicedToArray(_useState67,2),selectedQuestions=_useState68[0],setSelectedQuestions=_useState68[1];// ----------------------------------------------------------------------------------------------------------\nvar baseLink=\"http://localhost:3000\";var location=useLocation();var history=useHistory();var handleBack=function handleBack(){history.goBack();};var handleShow=function handleShow(){};var handleShowSelected=function handleShowSelected(){};var handleShowAll=function handleShowAll(){};var initialStates=function initialStates(){};var handleSelectedQuestion=function handleSelectedQuestion(newSelectedQuestions){setSelectedQuestions(newSelectedQuestions);};var handleFilterByChange=function handleFilterByChange(value){if(value===\"tags\")setFilterByTags(true);else setFilterByTags(false);};var handleFilterContentChange=function handleFilterContentChange(value){if(value===\"\")setFilterStatus(false);else setFilterStatus(true);var newQuestionList=questions;setFilteredQuestions(newQuestionList.filter(function(question){var contains=false;if(filterByTags===true){question.tags.map(function(tag){if(tag.toLowerCase().includes(value))contains=true;});}else{if(question.title.toLowerCase().includes(value))contains=true;}if(contains===true)return question;else return null;}));};var handleStatus=function handleStatus(value){if(value===\"\")setStatus(\"OFF\");else setStatus(\"ON\");};var handleFromChange=function handleFromChange(value){handleStatus(value);setFrom(value);};var generateRandomID=function generateRandomID(length){var result='';var characters='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';var charactersLength=characters.length;for(var i=0;i<length;i++){result+=characters.charAt(Math.floor(Math.random()*charactersLength));}return result;};var generateRandomLink=function generateRandomLink(){var length=10;var randomID=generateRandomID(length);setTestCode(randomID);var randomLink=\"\".concat(baseLink,\"/student/\").concat(randomID);tests.map(function(test){if(test.testCode===randomID){randomID=generateRandomID(length);setTestCode(randomID);randomLink=\"\".concat(baseLink,\"/student/\").concat(randomID);}});return randomLink;};var handleSubmit=function handleSubmit(event){event.preventDefault();var link=generateRandomLink();setLink(link);submitTest(link);};var submitTest=function submitTest(link){console.log(testID);fetch('http://localhost:8000/tests',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({testID:testID,testCode:testCode,testName:testName,testType:testType,language:language,questions:selectedQuestions,passingGrade:passingGrade,header:header,messageSuccess:messageSuccess,messageFailure:messageFailure,passingSubject:passingSubject,passingBody:passingBody,failingSubject:failingSubject,failingBody:failingBody,link:link,version:version,reviewTest:reviewTest,lastUpdate:lastUpdate})}).then(function(res){return res.json();}).then(function(data){console.log(data);// initialState(); \n}).catch(function(err){return console.log(\"error \".concat(err));});};var caseEditTest=function caseEditTest(){var editTest=location.state.test;setTest(editTest);setTestID(editTest.testID);setTestCode(editTest.testCode);setTestType(editTest.testType);setTestName(editTest.testName);setLanguage(editTest.language);setSelectedQuestions(editTest.questions);setPassingGrade(editTest.passingGrade);setHeader(editTest.header);setMessageSuccess(editTest.messageSuccess);setMessageFailure(editTest.messageFailure);setPassingSubject(editTest.passingSubject);setPassingBody(editTest.passingBody);setFailingSubject(editTest.failingSubject);setFailingBody(editTest.failingBody);setLink(editTest.link);setVersion(editTest.version+1);setCertificateTemplateID(editTest.certificateTemplate);setReviewTest(editTest.reviewTest);setLastUpdate(editTest.lastUpdate);};var fetchLanguages=function fetchLanguages(){fetch(\"http://localhost:8000/languages\",{method:'GET'}).then(function(res){return res.json();}).then(function(data){setLanguages(data);setLanguage(language!==\"\"?language:data[0].languageType);}).catch(function(err){return console.log('error fetching languages:'+err);});};var fetchTestTypes=function fetchTestTypes(){fetch(\"http://localhost:8000/testTypes\",{method:'GET'}).then(function(res){return res.json();}).then(function(data){setTestTypes(data);setTestType(testType!==\"\"?testType:data[0].typeName);}).catch(function(err){return console.log('error fetching test types:'+err);});};var fetchCertificateTemplates=function fetchCertificateTemplates(){fetch(\"http://localhost:8000/certificateTemplates\",{method:'GET'}).then(function(res){return res.json();}).then(function(data){setCertificateTemplates(data);setCertificateTemplateID(certificateTemplateID!==\"\"?certificateTemplateID:data[0].templateID);}).catch(function(err){return console.log('error fetching certificate templates:'+err);});};var fetchQuestions=function fetchQuestions(){fetch(\"http://localhost:8000/questions\",{method:'GET'}).then(function(res){return res.json();}).then(function(data){setQuestions(data);setFilteredQuestions(data);}).catch(function(err){return console.log('error fetching questions:'+err);});};var fetchTests=function fetchTests(){fetch(\"http://localhost:8000/tests\",{method:'GET'}).then(function(res){return res.json();}).then(function(data){setTests(data);if(test===null)setTestID(data[data.length-1].testID+1);}).catch(function(err){return console.log('error fetching test types:'+err);});};useEffect(function(){document.title=\"\".concat(test===null?\"Create\":\"Edit\",\" Question\");if(location.state){if(location.state.field){console.log(location.state.field);setField(location.state.field);}if(location.state.test){console.log(location.state.test);caseEditTest();}}},[location.state]);// Meant for fetching the necessary information on first render\nuseEffect(function(){var isMounted=true;// note mutable flag\nif(isMounted){// add conditional check\nfetchLanguages();fetchTestTypes();fetchCertificateTemplates();fetchTests();fetchQuestions();}return function(){isMounted=false;};// cleanup toggles value, if unmounted\n},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"create_edit_test noselect\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"page__header\",children:[\" \",test===null?\"Create\":\"Edit\",\" Test \"]}),\" \",/*#__PURE__*/_jsxs(\"form\",{className:\"new_test__form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{id:\"top_content__container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"content__section\",children:/*#__PURE__*/_jsx(\"table\",{id:\"general_details__table\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{className:\"space_under header_row border_bottom\",children:/*#__PURE__*/_jsx(\"th\",{colSpan:\"2\",children:\" General Test Details \"})}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Field of Study: \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsxs(\"label\",{id:\"field__label\",children:[\" \",field===null?\"undefined\":field,\" \"]}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Language: \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\"  \",/*#__PURE__*/_jsx(\"select\",{id:\"language__select\",onChange:function onChange(e){return setLanguage(e.target.value);},children:languages&&languages.map(function(language){return/*#__PURE__*/_jsxs(\"option\",{value:language.languageName,children:[\" \",language.languageName,\" \"]},language.languageID);})}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Test Type: \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"select\",{id:\"test_type__select\",onChange:function onChange(e){return setTestType(e.target.value);},children:testTypes&&testTypes.map(function(testType){return/*#__PURE__*/_jsxs(\"option\",{value:testType.typeName,children:[\" \",testType.typeName,\" \"]},testType.typeID);})}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Test Name:                                                                                                                                                           \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"test_name__input\",type:\"text\",placeholder:\"Insert test name\",value:testName,onChange:function onChange(e){return setTestName(e.target.value);},required:true}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Passing Grade:                                                                                                                                                       \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"passing_grade__input\",type:\"text\",placeholder:\"Insert passing grade\",value:passingGrade,onChange:function onChange(e){return setPassingGrade(e.target.value);},required:true}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Show correct answers after submission:                                                                                                                               \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"show_answers__checkbox\",type:\"checkbox\",value:reviewTest,onChange:function onChange(e){return setReviewTest(e.target.value);},required:true}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Message header:                                                                                                                                                      \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"message_header__input\",type:\"text\",placeholder:\"Insert header\",value:header,onChange:function onChange(e){return setHeader(e.target.value);},required:true}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Message to show on success:                                                                                                                                          \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"message_success__input\",type:\"text\",placeholder:\"Insert success message\",value:messageSuccess,onChange:function onChange(e){return setMessageSuccess(e.target.value);},required:true}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Message to show on failure:                                                                                                                                         \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"message_failure__input\",type:\"text\",placeholder:\"Insert failure message\",value:messageFailure,onChange:function onChange(e){return setMessageFailure(e.target.value);},required:true}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Certificate Templates: \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"select\",{id:\"certificate__select\",onChange:function onChange(e){return setCertificateTemplateID(e.target.key);},children:certificateTemplates&&certificateTemplates.map(function(certificate){return/*#__PURE__*/_jsxs(\"option\",{value:certificate.templateName,children:[\" \",certificate.templateName,\" \"]},certificate.templateID);})}),\" \"]})]})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"content__section\",children:[/*#__PURE__*/_jsx(\"table\",{id:\"email_delivery__table\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{className:\"space_under header_row border_bottom\",children:/*#__PURE__*/_jsx(\"th\",{colSpan:\"2\",children:\" Email Delivery Upon Test Completion \"})}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsxs(\"label\",{children:[\" Current Status: \\\"\",status===\"OFF\"?\"OFF\":\"ON\",\"\\\"                                                                                                         \"]}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsxs(\"div\",{id:\"sending_emails__container\",children:[/*#__PURE__*/_jsxs(\"label\",{id:\"sending_emails__label\",children:[\" Emails \",status===\"OFF\"?\"won't\":\"will\",\" be sent upon test completion.                                                   \"]}),/*#__PURE__*/_jsxs(\"label\",{children:[\" to turn \",status===\"OFF\"?\"ON\":\"OFF\",\" email delivery, \",status===\"OFF\"?\"fill out\":\"reset\",\" the mandatory                    \"]}),/*#__PURE__*/_jsx(\"label\",{children:\" fields in this section:                                                                                                              \"})]}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" From: \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"from__input\",type:\"text\",value:from,onChange:function onChange(e){return handleFromChange(e.target.value);}}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" CC: \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"cc__input\",type:\"text\",value:cc,onChange:function onChange(e){return setCC(e.target.value);},disabled:from?false:true}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" BCC: \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"bcc__input\",type:\"text\",value:bcc,onChange:function onChange(e){return setBCC(e.target.value);},disabled:from?false:true}),\" \"]})]})]})}),/*#__PURE__*/_jsx(\"table\",{id:\"passing_test__table\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{className:\"space_under sub_header_row border_bottom\",children:/*#__PURE__*/_jsx(\"th\",{colSpan:\"2\",children:\" Passing the test \"})}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Message subject:                                                                                                                                            \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"message_subject__input\",type:\"text\",value:passingSubject,onChange:function onChange(e){return setPassingSubject(e.target.value);},disabled:from?false:true}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Message body:                                                                                                                                               \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"message_body__input\",type:\"text\",value:passingBody,onChange:function onChange(e){return setPassingBody(e.target.value);},disabled:from?false:true}),\" \"]})]}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"label\",{style:{fontWeight:'bold'},children:\" Predefined Templated - Click to copy to clipboard \"}),/*#__PURE__*/_jsx(\"label\",{children:\" NEED TO ADD TEMPLATES HERE \"})]})})]})})]}),/*#__PURE__*/_jsx(\"table\",{id:\"failing_test__table\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{className:\"space_under sub_header_row border_bottom\",children:/*#__PURE__*/_jsx(\"th\",{colspan:\"2\",children:\" Failing the test \"})}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Message subject:                                                                                                                                     \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"message_subject__input\",type:\"text\",value:failingSubject,onChange:function onChange(e){return setFailingSubject(e.target.value);},disabled:from?false:true}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Message body:                                                                                                                                        \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"message_body__input\",type:\"text\",value:failingBody,onChange:function onChange(e){return setFailingBody(e.target.value);},disabled:from?false:true}),\" \"]})]}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"label\",{style:{fontWeight:'bold'},children:\" Predefined Templated - Click to copy to clipboard \"}),/*#__PURE__*/_jsx(\"label\",{children:\" NEED TO ADD TEMPLATES HERE \"})]})})]})})]}),/*#__PURE__*/_jsx(\"div\",{id:\"bottom_content__container\",children:/*#__PURE__*/_jsxs(\"div\",{id:\"questions__container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section__headers\",children:\" Questions \"}),/*#__PURE__*/_jsxs(\"div\",{id:\"explanation\",children:[/*#__PURE__*/_jsxs(\"label\",{style:{fontWeight:'bold'},children:[\" Note: This test is set to be a \\\"\",\"\".concat(testType),\"\\\" test, which means:\"]}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\" All the questions that you select here will be included in the test. \"}),/*#__PURE__*/_jsxs(\"li\",{children:[\" All respondents will receive \",\"\".concat(testType.includes(\"random\")?\"a DIFFERENT\":\"the SAME\"),\" set of questions, presented in a different order. \"]})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"sub__label\",children:[\" *TIP: if you want each respondent to receive \",\"\".concat(testType.includes(\"random\")?\"the SAME\":\"a DIFFERENT\"),\" set of questions, change the test type to \\\"\",\"\".concat(testType.includes(\"random\")?\"Predefined\":\"Random\"),\"\\\" in the\",/*#__PURE__*/_jsx(Link,{to:\"/admin/\".concat(test===null?\"create\":\"edit\",\"-test#test_type__select\"),children:\" Test Details\"}),\" section.* \"]})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"question_table__container\",children:[/*#__PURE__*/_jsx(\"label\",{style:{fontWeight:'bold',color:'orange'},children:\" Select the questions that you want to include in the test \"}),/*#__PURE__*/_jsx(\"label\",{children:\" You can use the tag filter to narrow down the list to a specific subject - Don't worry, filtering won't affect your previous selections. \"}),questions&&filteredQuestions&&/*#__PURE__*/_jsx(Filter,{filterStatus:filterStatus,totalAmount:questions.length,filteredAmount:filteredQuestions.length,handleFilterByChange:handleFilterByChange,handleFilterContentChange:handleFilterContentChange}),/*#__PURE__*/_jsx(QuestionTable,{createEditTest:true,questions:filteredQuestions,filteredQuestions:filteredQuestions,selectedQuestions:selectedQuestions,tests:tests,handleSelectedQuestion:handleSelectedQuestion,handleShowAll:handleShowAll,handleShowSelected:handleShowSelected}),/*#__PURE__*/_jsxs(\"label\",{children:[\" The test will include \",selectedQuestions.length,\" questions in total \"]})]})]})}),/*#__PURE__*/_jsxs(\"div\",{id:\"buttons__container\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"regular__button\",onClick:function onClick(){return handleBack();},children:[\" \",\"<<\",\" Back  \"]}),/*#__PURE__*/_jsx(\"button\",{className:\"regular__button\",onClick:function onClick(){return handleShow();},children:\"  Show         \"}),/*#__PURE__*/_jsxs(\"button\",{className:\"regular__button\",type:\"submit\",children:[\"  Save \",\">>\",\" \"]})]})]})]});};","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Admin/MainPage/ManageTests/CreateEditTest/CreateEditTest.js"],"names":["React","useState","useEffect","HashLink","Link","useHistory","useLocation","Filter","QuestionTable","styles","CreateEditTest","field","setField","test","setTest","tests","setTests","testTypes","setTestTypes","certificateTemplates","setCertificateTemplates","languages","setLanguages","questions","setQuestions","filteredQuestions","setFilteredQuestions","testID","setTestID","testCode","setTestCode","testType","setTestType","testName","setTestName","language","setLanguage","passingGrade","setPassingGrade","header","setHeader","messageSuccess","setMessageSuccess","messageFailure","setMessageFailure","version","setVersion","certificateTemplateID","setCertificateTemplateID","reviewTest","setReviewTest","Date","now","lastUpdate","setLastUpdate","link","setLink","status","setStatus","from","setFrom","cc","setCC","bcc","setBCC","passingSubject","setPassingSubject","passingBody","setPassingBody","failingSubject","setFailingSubject","failingBody","setFailingBody","filterStatus","setFilterStatus","filterByTags","setFilterByTags","questionsAmount","setQuestionsAmount","selectedQuestions","setSelectedQuestions","baseLink","location","history","handleBack","goBack","handleShow","handleShowSelected","handleShowAll","initialStates","handleSelectedQuestion","newSelectedQuestions","handleFilterByChange","value","handleFilterContentChange","newQuestionList","filter","question","contains","tags","map","tag","toLowerCase","includes","title","handleStatus","handleFromChange","generateRandomID","length","result","characters","charactersLength","i","charAt","Math","floor","random","generateRandomLink","randomID","randomLink","handleSubmit","event","preventDefault","submitTest","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","data","catch","err","caseEditTest","editTest","state","certificateTemplate","fetchLanguages","languageType","fetchTestTypes","typeName","fetchCertificateTemplates","templateID","fetchQuestions","fetchTests","document","isMounted","e","target","languageName","languageID","typeID","key","certificate","templateName","fontWeight","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect     }   from  'react';\r\nimport        { HashLink as Link        }   from  'react-router-hash-link';\r\nimport        { useHistory, useLocation }   from  'react-router-dom';\r\nimport        { Filter                  }   from '../../../../../Admin/Filter/Filter';\r\nimport        { QuestionTable           }   from '../../../../../Admin/QuestionTable/QuestionTable';\r\nimport styles                               from  './CreateEditTest.css';\r\n\r\nexport default function CreateEditTest() {\r\n\r\n  // -------------------------------------------- Fetch Info Hooks --------------------------------------------\r\n\r\n  const [ field,                      setField                  ] = useState(null);\r\n  const [ test,                       setTest                   ] = useState(null);\r\n\r\n  const [ tests,                      setTests                  ] = useState(null);\r\n  const [ testTypes,                  setTestTypes              ] = useState(null);\r\n  const [ certificateTemplates,       setCertificateTemplates   ] = useState(null);\r\n  const [ languages,                  setLanguages              ] = useState(null);\r\n  const [ questions,                  setQuestions              ] = useState(null);\r\n  const [ filteredQuestions,          setFilteredQuestions      ] = useState(null);\r\n\r\n  // -------------------------------------------- Top Content Hooks -------------------------------------------\r\n\r\n  // *General Details Table*\r\n  const [ testID,                     setTestID                 ] = useState(0);\r\n  const [ testCode,                   setTestCode               ] = useState(0);\r\n  const [ testType,                   setTestType               ] = useState(\"\");\r\n  const [ testName,                   setTestName               ] = useState(\"\");\r\n  const [ language,                   setLanguage               ] = useState(\"\");\r\n  const [ passingGrade,               setPassingGrade           ] = useState(\"\");\r\n  const [ header,                     setHeader                 ] = useState(\"\");\r\n  const [ messageSuccess,             setMessageSuccess         ] = useState(\"\");\r\n  const [ messageFailure,             setMessageFailure         ] = useState(\"\");\r\n  const [ version,                    setVersion                ] = useState(1);\r\n  const [ certificateTemplateID,      setCertificateTemplateID  ] = useState(0);\r\n  const [ reviewTest,                 setReviewTest             ] = useState(false);\r\n  const [ lastUpdate,                 setLastUpdate             ] = useState(Date.now());\r\n  const [ link,                       setLink                   ] = useState(\"\");\r\n\r\n  // *Email Delivery Table*         \r\n  // Status Container          \r\n  const [ status,                     setStatus                 ] = useState(\"OFF\");\r\n  const [ from,                       setFrom                   ] = useState(\"\");\r\n  const [ cc,                         setCC                     ] = useState(\"\");\r\n  const [ bcc,                        setBCC                    ] = useState(\"\");    \r\n\r\n  // Passing the Test Container\r\n  const [ passingSubject,             setPassingSubject         ] = useState(\"\");\r\n  const [ passingBody,                setPassingBody            ] = useState(\"\");    \r\n\r\n  // Failing the Test Container\r\n  const [ failingSubject,             setFailingSubject         ] = useState(\"\");   \r\n  const [ failingBody,                setFailingBody            ] = useState(\"\");    \r\n\r\n  // -------------------------------------------- Bottom Content Hooks ----------------------------------------\r\n\r\n  // *Filter Container*\r\n  const [ filterStatus,               setFilterStatus           ]  = useState(false);\r\n  const [ filterByTags,               setFilterByTags           ]  = useState(true);\r\n\r\n  // *Questions Table\r\n  const [ questionsAmount,            setQuestionsAmount        ] = useState(0); \r\n  const [ selectedQuestions,          setSelectedQuestions      ] = useState([]);\r\n\r\n  // ----------------------------------------------------------------------------------------------------------\r\n\r\n  const baseLink = \"http://localhost:3000\"\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  \r\n  const handleBack = () => {\r\n    history.goBack();\r\n  }\r\n  \r\n  const handleShow = () => {\r\n    \r\n  }\r\n  \r\n  const handleShowSelected = () => {\r\n    \r\n  }\r\n\r\n  const handleShowAll = () => {\r\n    \r\n  }\r\n\r\n  const initialStates = () => {\r\n\r\n  }\r\n\r\n  const handleSelectedQuestion = (newSelectedQuestions) => {\r\n    setSelectedQuestions(newSelectedQuestions);\r\n  }\r\n\r\n  const handleFilterByChange = (value) => {\r\n    if (value === \"tags\") setFilterByTags(true);\r\n    else setFilterByTags(false);\r\n  }\r\n\r\n  const handleFilterContentChange = (value) => {\r\n        \r\n    if (value === \"\") setFilterStatus(false);\r\n    else setFilterStatus(true);\r\n\r\n    let newQuestionList = questions;\r\n    setFilteredQuestions(newQuestionList.filter((question) => { \r\n        \r\n        let contains = false;\r\n\r\n        if (filterByTags === true) {\r\n            question.tags.map((tag) => {\r\n                if (tag.toLowerCase().includes(value)) contains = true;\r\n            });\r\n        } else {\r\n            if (question.title.toLowerCase().includes(value)) contains = true;\r\n        }\r\n\r\n        if (contains === true) return question;\r\n        else return null;\r\n\r\n    }));\r\n}\r\n\r\n  const handleStatus = (value) => {\r\n    if (value === \"\") setStatus(\"OFF\");\r\n    else setStatus(\"ON\");\r\n  }\r\n\r\n  const handleFromChange = (value) => {\r\n    handleStatus(value);\r\n    setFrom(value);\r\n  }\r\n\r\n  const generateRandomID = (length) => {\r\n\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const generateRandomLink = () => {\r\n    let length = 10;\r\n    let randomID = generateRandomID(length);\r\n    setTestCode(randomID);\r\n    let randomLink = `${baseLink}/student/${randomID}`\r\n\r\n    tests.map((test) => {\r\n      if (test.testCode === randomID) {\r\n            randomID = generateRandomID(length);\r\n            setTestCode(randomID);\r\n            randomLink = `${baseLink}/student/${randomID}`\r\n      }\r\n    });\r\n\r\n    return randomLink;\r\n  }\r\n\r\n  const handleSubmit = (event) => {  \r\n    event.preventDefault();\r\n    let link = generateRandomLink();\r\n    setLink(link);\r\n\r\n    submitTest(link);\r\n  }\r\n\r\n  const submitTest = (link) => {\r\n    console.log(testID);\r\n    fetch('http://localhost:8000/tests', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      testID: testID,\r\n      testCode: testCode,\r\n      testName: testName,\r\n      testType: testType,\r\n      language: language,\r\n      questions: selectedQuestions,\r\n      passingGrade: passingGrade,\r\n      header: header,\r\n      messageSuccess: messageSuccess,\r\n      messageFailure: messageFailure,\r\n      passingSubject: passingSubject,\r\n      passingBody: passingBody,\r\n      failingSubject: failingSubject,\r\n      failingBody: failingBody,\r\n      link: link,\r\n      version: version,\r\n      reviewTest: reviewTest,\r\n      lastUpdate: lastUpdate\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => { \r\n        console.log(data); \r\n        // initialState(); \r\n      })\r\n      .catch((err) => console.log(`error ${err}`))\r\n  }\r\n\r\n  const caseEditTest = () => {\r\n\r\n    let editTest = location.state.test;\r\n    setTest(editTest);\r\n    setTestID(editTest.testID);\r\n    setTestCode(editTest.testCode);\r\n    setTestType(editTest.testType);\r\n    setTestName(editTest.testName);\r\n    setLanguage(editTest.language);\r\n    setSelectedQuestions(editTest.questions);\r\n    setPassingGrade(editTest.passingGrade);\r\n    setHeader(editTest.header);\r\n    setMessageSuccess(editTest.messageSuccess);\r\n    setMessageFailure(editTest.messageFailure);\r\n    setPassingSubject(editTest.passingSubject);\r\n    setPassingBody(editTest.passingBody);\r\n    setFailingSubject(editTest.failingSubject);\r\n    setFailingBody(editTest.failingBody);\r\n    setLink(editTest.link);\r\n    setVersion(editTest.version + 1);\r\n    setCertificateTemplateID(editTest.certificateTemplate);\r\n    setReviewTest(editTest.reviewTest);\r\n    setLastUpdate(editTest.lastUpdate);\r\n  }\r\n\r\n  const fetchLanguages = () => {\r\n    fetch(\"http://localhost:8000/languages\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setLanguages(data); \r\n      setLanguage(language !== \"\" ? language : data[0].languageType); \r\n    })\r\n    .catch((err) => console.log('error fetching languages:' + err))\r\n  }\r\n\r\n  const fetchTestTypes = () => {\r\n    fetch(\"http://localhost:8000/testTypes\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setTestTypes(data); \r\n      setTestType(testType !== \"\" ? testType : data[0].typeName); \r\n    })\r\n    .catch((err) => console.log('error fetching test types:' + err))\r\n  }\r\n\r\n  const fetchCertificateTemplates = () => {\r\n    fetch(\"http://localhost:8000/certificateTemplates\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setCertificateTemplates(data); \r\n      setCertificateTemplateID(certificateTemplateID !== \"\" ? certificateTemplateID : data[0].templateID); \r\n    })\r\n    .catch((err) => console.log('error fetching certificate templates:' + err))\r\n  }\r\n\r\n  const fetchQuestions = () => {\r\n    fetch(\"http://localhost:8000/questions\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setQuestions(data);\r\n      setFilteredQuestions(data); \r\n    })\r\n    .catch((err) => console.log('error fetching questions:' + err))\r\n  }\r\n\r\n  const fetchTests = () => {\r\n    fetch(\"http://localhost:8000/tests\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setTests(data); \r\n      if (test === null) setTestID(data[data.length - 1].testID + 1); \r\n    })\r\n    .catch((err) => console.log('error fetching test types:' + err))\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = `${test === null ? \"Create\" : \"Edit\"} Question`;\r\n\r\n    if (location.state) {\r\n\r\n      if (location.state.field) {\r\n        console.log(location.state.field);\r\n        setField(location.state.field);\r\n      }\r\n\r\n      if (location.state.test) {\r\n        console.log(location.state.test);\r\n        caseEditTest();\r\n      }\r\n    }\r\n  }, [location.state])\r\n\r\n    // Meant for fetching the necessary information on first render\r\n  useEffect(() => {\r\n    let isMounted = true;           // note mutable flag\r\n\r\n    if (isMounted) {                // add conditional check\r\n      fetchLanguages();\r\n      fetchTestTypes();\r\n      fetchCertificateTemplates();\r\n      fetchTests();\r\n      fetchQuestions();\r\n    }\r\n\r\n    return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"create_edit_test noselect\">\r\n      <h1 className=\"page__header\"> {test === null ? \"Create\" : \"Edit\"} Test </h1> {/* className=\"page__header\" */}\r\n      <form className=\"new_test__form\" onSubmit={handleSubmit}>\r\n        <div id=\"top_content__container\">\r\n          \r\n          <div className=\"content__section\">\r\n            <table id=\"general_details__table\">\r\n              <tbody>\r\n                <tr className=\"space_under header_row border_bottom\">\r\n                  <th colSpan=\"2\"> General Test Details </th>\r\n                </tr>\r\n                <tr>\r\n                  <td> <label> Field of Study: </label> </td>\r\n                  <td> <label id=\"field__label\"> {field === null ? \"undefined\" : field} </label> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Language: </label> </td>\r\n                  <td>  <select id=\"language__select\" onChange={(e) => setLanguage (e.target.value)}>\r\n                          {languages && languages.map((language) => (\r\n                            <option key={language.languageID} value={language.languageName}> {language.languageName} </option>\r\n                          ))} \r\n                        </select> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Test Type: </label> </td>\r\n                  <td> <select id=\"test_type__select\" onChange={(e) => setTestType (e.target.value)}>\r\n                          {testTypes && testTypes.map((testType) => (\r\n                            <option key={testType.typeID} value={testType.typeName}> {testType.typeName} </option>\r\n                          ))}\r\n                        </select> </td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td> <label> Test Name:                                                                                                                                                           </label> </td>\r\n                  <td> <input id=\"test_name__input\"       type=\"text\"       placeholder=\"Insert test name\"            value={testName}        onChange={(e) => setTestName(e.target.value)}         required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Passing Grade:                                                                                                                                                       </label> </td>\r\n                  <td> <input id=\"passing_grade__input\"   type=\"text\"       placeholder=\"Insert passing grade\"        value={passingGrade}    onChange={(e) => setPassingGrade(e.target.value)}     required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Show correct answers after submission:                                                                                                                               </label> </td>\r\n                  <td> <input id=\"show_answers__checkbox\" type=\"checkbox\"                                           value={reviewTest}      onChange={(e) => setReviewTest(e.target.value)}       required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Message header:                                                                                                                                                      </label> </td>\r\n                  <td> <input id=\"message_header__input\"  type=\"text\"       placeholder=\"Insert header\"               value={header}          onChange={(e) => setHeader(e.target.value)}           required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Message to show on success:                                                                                                                                          </label> </td>\r\n                  <td> <input id=\"message_success__input\" type=\"text\"       placeholder=\"Insert success message\"      value={messageSuccess}  onChange={(e) => setMessageSuccess(e.target.value)}   required/> </td>\r\n                </tr>   \r\n\r\n                <tr>    \r\n                  <td> <label> Message to show on failure:                                                                                                                                         </label> </td>\r\n                  <td> <input id=\"message_failure__input\" type=\"text\"       placeholder=\"Insert failure message\"      value={messageFailure}   onChange={(e) => setMessageFailure(e.target.value)}  required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Certificate Templates: </label> </td>\r\n                  <td> <select id=\"certificate__select\" onChange={(e) => setCertificateTemplateID(e.target.key)}>\r\n                          {certificateTemplates && certificateTemplates.map((certificate) => (\r\n                            <option key={certificate.templateID} value={certificate.templateName}> {certificate.templateName} </option>\r\n                          ))}\r\n                        </select> </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div className=\"content__section\">\r\n            <table id=\"email_delivery__table\">\r\n              <tbody>\r\n                <tr className=\"space_under header_row border_bottom\">\r\n                  <th colSpan=\"2\"> Email Delivery Upon Test Completion </th>\r\n                </tr>\r\n                <tr>\r\n                  <td> <label> Current Status: \"{status === \"OFF\" ? `OFF` : \"ON\"}\"                                                                                                         </label> </td>\r\n                  <td> <div id=\"sending_emails__container\">      \r\n                          <label id=\"sending_emails__label\" > Emails {status === \"OFF\" ? `won't` : \"will\"} be sent upon test completion.                                                   </label>\r\n                          <label                    > to turn {status === \"OFF\" ? \"ON\" : \"OFF\"} email delivery, {status === \"OFF\" ? \"fill out\" : \"reset\"} the mandatory                    </label>\r\n                          <label                    > fields in this section:                                                                                                              </label>\r\n                        </div> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> From: </label> </td>\r\n                  <td> <input id=\"from__input\"  type=\"text\" value={from}  onChange={(e) => handleFromChange(e.target.value)}                                                                     /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> CC: </label> </td>      \r\n                  <td> <input id=\"cc__input\"    type=\"text\" value={cc}    onChange={(e) => setCC(e.target.value)}   disabled={from ? false : true}                                               /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> BCC: </label> </td>       \r\n                  <td> <input id=\"bcc__input\"   type=\"text\" value={bcc}   onChange={(e) => setBCC(e.target.value)}  disabled={from ? false : true}                                               /> </td>\r\n                </tr>      \r\n              </tbody>\r\n            </table>       \r\n         \r\n         \r\n            <table id=\"passing_test__table\">   \r\n              <tbody>\r\n                <tr className=\"space_under sub_header_row border_bottom\">\r\n                  <th colSpan=\"2\"> Passing the test </th>\r\n                </tr>\r\n                <tr>       \r\n                  <td> <label> Message subject:                                                                                                                                            </label> </td>\r\n                  <td> <input id=\"message_subject__input\" type=\"text\" value={passingSubject} onChange={(e) => setPassingSubject(e.target.value)}  disabled={from ? false : true}   /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> Message body:                                                                                                                                               </label> </td>\r\n                  <td> <input id=\"message_body__input\"    type=\"text\" value={passingBody}    onChange={(e) => setPassingBody(e.target.value)} disabled={from ? false : true}       /> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td>\r\n                    <label style={{fontWeight: 'bold'}}> Predefined Templated - Click to copy to clipboard </label>\r\n                    <label> NEED TO ADD TEMPLATES HERE </label>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n\r\n          <table id=\"failing_test__table\">\r\n            <tbody>\r\n              <tr className=\"space_under sub_header_row border_bottom\">\r\n                  <th colspan=\"2\"> Failing the test </th>\r\n                </tr>\r\n              <tr>\r\n                <td> <label> Message subject:                                                                                                                                     </label> </td>\r\n                <td> <input id=\"message_subject__input\" type=\"text\" value={failingSubject} onChange={(e) => setFailingSubject(e.target.value)}  disabled={from ? false : true}   /> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td> <label> Message body:                                                                                                                                        </label> </td>\r\n                <td> <input id=\"message_body__input\"    type=\"text\" value={failingBody}    onChange={(e) => setFailingBody(e.target.value)} disabled={from ? false : true}       /> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  <label style={{fontWeight: 'bold'}}> Predefined Templated - Click to copy to clipboard </label>\r\n                  <label> NEED TO ADD TEMPLATES HERE </label>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div id=\"bottom_content__container\">\r\n          <div id=\"questions__container\">\r\n            <h2 className=\"section__headers\"> Questions </h2>\r\n            <div id=\"explanation\">\r\n              <label style={{fontWeight: 'bold'}}> Note: This test is set to be a \"{`${testType}`}\" test, which means:</label>\r\n              \r\n              <ul>\r\n                <li> All the questions that you select here will be included in the test. </li>\r\n                <li> All respondents will receive {`${testType.includes(\"random\") ? \"a DIFFERENT\" : \"the SAME\"}`} set of questions, presented in a different order. </li>\r\n              </ul>\r\n\r\n              <label className=\"sub__label\"> *TIP: if you want each respondent to receive {`${testType.includes(\"random\") ? \"the SAME\" : \"a DIFFERENT\"}`} set of questions, change the test type to \"{`${testType.includes(\"random\") ? \"Predefined\" : \"Random\"}`}\" in the \r\n                  <Link to={`/admin/${test === null ? \"create\" : \"edit\"}-test#test_type__select`} > Test Details</Link> section.* </label>\r\n            </div>\r\n\r\n            <div id=\"question_table__container\">\r\n              <label style={{fontWeight: 'bold', color: 'orange'}}> Select the questions that you want to include in the test </label>\r\n              <label> You can use the tag filter to narrow down the list to a specific subject - Don't worry, filtering won't affect your previous selections. </label>\r\n\r\n              { questions && filteredQuestions && <Filter filterStatus={filterStatus} totalAmount={questions.length} filteredAmount={filteredQuestions.length} \r\n                handleFilterByChange={handleFilterByChange} handleFilterContentChange={handleFilterContentChange}/> }\r\n\r\n              { <QuestionTable createEditTest={true} questions={filteredQuestions} filteredQuestions={filteredQuestions} selectedQuestions={selectedQuestions} tests={tests} \r\n                handleSelectedQuestion={handleSelectedQuestion} handleShowAll={handleShowAll} handleShowSelected={handleShowSelected}/> }\r\n\r\n                <label> The test will include {selectedQuestions.length} questions in total </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"buttons__container\">\r\n            <button className=\"regular__button\" onClick={() => handleBack() }> {`<<` } Back  </button>\r\n            <button className=\"regular__button\" onClick={() => handleShow() }>  Show         </button>\r\n            <button className=\"regular__button\" type=\"submit\"                >  Save {`>>` } </button>\r\n          </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};"]},"metadata":{},"sourceType":"module"}