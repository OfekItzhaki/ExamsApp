{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\Admin\\\\GradesTable\\\\GradesTable.js\";\nimport styles from './GradesTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GradesTable = ({\n  studentTests\n}) => {\n  let numOfQuestions = 0;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"grades__table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"header_row space_under border_bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"        ID                                      \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"        Respondent                              \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"        Submitted                               \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"        Number of Questions Answered            \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"        Grade                                   \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), studentTests && studentTests.map(studentTest => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", studentTest.stID, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", studentTest.studentName, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", studentTest.submitted, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", studentTest.questions.map(question => question.answer !== \"\" ? numOfQuestions++ : \"\"), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", studentTest.grade, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = GradesTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"GradesTable\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/Admin/GradesTable/GradesTable.js"],"names":["styles","GradesTable","studentTests","numOfQuestions","map","studentTest","stID","studentName","submitted","questions","question","answer","grade"],"mappings":";AAAA,OAAOA,MAAP,MAAqC,mBAArC;;;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAE7C,MAAIC,cAAc,GAAG,CAArB;AAEA,sBACI;AAAA,2BACI;AAAO,MAAA,EAAE,EAAC,eAAV;AAAA,6BACI;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,sCAAd;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EASKD,YAAY,IAAIA,YAAY,CAACE,GAAb,CAAkBC,WAAD,iBAC9B;AAAA,kCACI;AAAA,4BAAQA,WAAW,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,4BAAQD,WAAW,CAACE,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,4BAAQF,WAAW,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,4BAAQH,WAAW,CAACI,SAAZ,CAAsBL,GAAtB,CAA2BM,QAAD,IAAcA,QAAQ,CAACC,MAAT,KAAoB,EAApB,GAAyBR,cAAc,EAAvC,GAA4C,EAApF,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA,4BAAQE,WAAW,CAACO,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADa,CATrB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAyBH,CA7BM;KAAMX,W","sourcesContent":["import styles                   from './GradesTable.css';\r\n\r\nexport const GradesTable = ({ studentTests }) => {\r\n\r\n    let numOfQuestions = 0;\r\n\r\n    return (\r\n        <>\r\n            <table id=\"grades__table\">\r\n                <tbody>\r\n                    <tr className=\"header_row space_under border_bottom\">\r\n                        <th>        ID                                      </th>\r\n                        <th>        Respondent                              </th>\r\n                        <th>        Submitted                               </th>\r\n                        <th>        Number of Questions Answered            </th>\r\n                        <th>        Grade                                   </th>\r\n                    </tr>\r\n\r\n                    {studentTests && studentTests.map((studentTest) => (                             \r\n                        <tr>\r\n                            <td> {  studentTest.stID            } </td>\r\n                            <td> {  studentTest.studentName     } </td>\r\n                            <td> {  studentTest.submitted       } </td>\r\n                            <td> {  studentTest.questions.map((question) => question.answer !== \"\" ? numOfQuestions++ : \"\")} </td>\r\n                            <td> {  studentTest.grade           } </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}