{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\pages\\\\Admin\\\\Reports\\\\Reports.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styles from './Reports.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Reports = ({\n  type\n}) => {\n  _s();\n\n  // ------------------------ Fetch Info Hooks -----------------------\n  const [tests, setTests] = useState(null); // ------------------------- Content Hooks -------------------------\n\n  const [testChosen, setTestChosen] = useState(null);\n  const [dateFrom, setDateFrom] = useState(\"\");\n  const [dateTo, setDateTo] = useState(\"\");\n  const [dateRange, setDateRange] = useState(\"\");\n  const [past, setPast] = useState(true);\n  const history = useHistory();\n\n  const back = () => {\n    history.goBack();\n  };\n\n  const handleCheckboxChange = checked => {\n    setPast(checked);\n    document.getElementById(\"date__from\").value = new Date().toISOString().substring(0, 10);\n    document.getElementById(\"date__to\").value = new Date().toISOString().substring(0, 10);\n    setDateRange(`${document.getElementById(\"date__from\").value} - ${document.getElementById(\"date__to\").value}`);\n  };\n\n  const handleTestChange = test => {\n    setTestChosen(test);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    generateReport();\n  };\n\n  const generateReport = () => {\n    console.log(\"generate report\");\n    setDateRange(dateFrom - dateTo);\n    history.push({\n      pathname: '/admin/test-report',\n      // search: '?update=true',  // query string\n      state: {\n        // location state\n        // update: true,\n        test: testChosen,\n        dateRange: dateRange\n      }\n    });\n  };\n\n  const fetchTests = () => {\n    fetch(\"http://localhost:8000/tests\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setTests(data);\n    }).catch(err => console.log('error fetching tests:' + err));\n  };\n\n  useEffect(() => {\n    document.title = \"Reports\";\n  }, []);\n  useEffect(() => {\n    let isMounted = true; // note mutable flag\n\n    if (isMounted) {\n      // add conditional check\n      fetchTests();\n    }\n\n    let today = new Date();\n    let todayDate = today.toISOString().split(\"T\")[0];\n    document.getElementById(\"date__from\").setAttribute(\"min\", \"1999-01-01\");\n    document.getElementById(\"date__from\").setAttribute(\"max\", todayDate);\n    document.getElementById(\"date__to\").setAttribute(\"min\", \"1999-01-01\");\n    document.getElementById(\"date__to\").setAttribute(\"max\", todayDate);\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reports noselect\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"headers__container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" Test Report for \", type ? type : \"\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"content__container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"report__form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"content__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  id: \"label__test_name\",\n                  children: \"       Select Test:            \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"test__select\",\n                  onChange: e => handleTestChange(e.target.value),\n                  children: tests && tests.map(test => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: test.testName,\n                    children: [\" \", test.testName, \" \"]\n                  }, test.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 41\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 38\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  id: \"label__date_range\",\n                  children: \"      Date Range:             \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  id: \"label__from\",\n                  children: \"            From:                   \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"date__from\",\n                  type: \"date\",\n                  onChange: e => setDateFrom(e.target.value),\n                  disabled: past,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  id: \"label__to\",\n                  children: \"              To:                     \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"date__to\",\n                  type: \"date\",\n                  onChange: e => setDateTo(e.target.value),\n                  disabled: past,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"  \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  id: \"label__OR\",\n                  children: \"              OR                      \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"  \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: past,\n                  onChange: e => handleCheckboxChange(e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  id: \"label__past\",\n                  children: \"                Any date in the past        \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"button__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"regular__button\",\n            onClick: () => back(),\n            children: [\"     \", `<<`, \" Back                \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"regular__button\",\n            type: \"submit\",\n            children: \"               Generate Report             \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reports, \"suZBVvbiu+ZY5O9+68OYTxXx+cE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Reports;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Admin/Reports/Reports.js"],"names":["React","useEffect","useState","useHistory","styles","Reports","type","tests","setTests","testChosen","setTestChosen","dateFrom","setDateFrom","dateTo","setDateTo","dateRange","setDateRange","past","setPast","history","back","goBack","handleCheckboxChange","checked","document","getElementById","value","Date","toISOString","substring","handleTestChange","test","handleSubmit","event","preventDefault","generateReport","console","log","push","pathname","state","fetchTests","fetch","method","then","res","json","data","catch","err","title","isMounted","today","todayDate","split","setAttribute","e","target","map","testName","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA6C,OAA7C;AACA,SAAgBC,UAAhB,QAA6C,kBAA7C;AACA,OAAOC,MAAP,MAA6C,eAA7C;;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAEjC;AAEA,QAAM,CAAEC,KAAF,EAAeC,QAAf,IAAoCN,QAAQ,CAAC,IAAD,CAAlD,CAJiC,CAMjC;;AAEA,QAAM,CAAEO,UAAF,EAAeC,aAAf,IAAoCR,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAAES,QAAF,EAAeC,WAAf,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAEW,MAAF,EAAeC,SAAf,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAEa,SAAF,EAAeC,YAAf,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAEe,IAAF,EAAeC,OAAf,IAAoChB,QAAQ,CAAC,IAAD,CAAlD;AAEA,QAAMiB,OAAO,GAAGhB,UAAU,EAA1B;;AACA,QAAMiB,IAAI,GAAG,MAAM;AACfD,IAAAA,OAAO,CAACE,MAAR;AACH,GAFD;;AAIA,QAAMC,oBAAoB,GAAIC,OAAD,IAAa;AACtCL,IAAAA,OAAO,CAACK,OAAD,CAAP;AAEAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,GAA8C,IAAIC,IAAJ,GAAWC,WAAX,GAAyBC,SAAzB,CAAmC,CAAnC,EAAsC,EAAtC,CAA9C;AACAL,IAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApC,GAA4C,IAAIC,IAAJ,GAAWC,WAAX,GAAyBC,SAAzB,CAAmC,CAAnC,EAAsC,EAAtC,CAA5C;AAEAb,IAAAA,YAAY,CAAE,GAAEQ,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAM,MAAKF,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAAM,EAA/F,CAAZ;AACH,GAPD;;AASA,QAAMI,gBAAgB,GAAIC,IAAD,IAAU;AAC/BrB,IAAAA,aAAa,CAACqB,IAAD,CAAb;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,cAAc;AACjB,GAHD;;AAKA,QAAMA,cAAc,GAAG,MAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACArB,IAAAA,YAAY,CAACL,QAAQ,GAAGE,MAAZ,CAAZ;AAEAM,IAAAA,OAAO,CAACmB,IAAR,CAAa;AACTC,MAAAA,QAAQ,EAAE,oBADD;AAET;AACAC,MAAAA,KAAK,EAAE;AAAG;AACN;AACFT,QAAAA,IAAI,EAAEtB,UAFD;AAGLM,QAAAA,SAAS,EAAEA;AAHN;AAHE,KAAb;AASH,GAbD;;AAeA,QAAM0B,UAAU,GAAG,MAAM;AACrBC,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,MAAAA,MAAM,EAAE;AAD2B,KAAhC,CAAL,CAGCC,IAHD,CAGOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHf,EAICF,IAJD,CAIOG,IAAD,IAAU;AACdvC,MAAAA,QAAQ,CAACuC,IAAD,CAAR;AACD,KAND,EAOCC,KAPD,CAOQC,GAAD,IAASb,OAAO,CAACC,GAAR,CAAY,0BAA0BY,GAAtC,CAPhB;AAQH,GATD;;AAWAhD,EAAAA,SAAS,CAAC,MAAM;AACZuB,IAAAA,QAAQ,CAAC0B,KAAT,GAAiB,SAAjB;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAjD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkD,SAAS,GAAG,IAAhB,CADY,CACoB;;AAEhC,QAAIA,SAAJ,EAAe;AAAiB;AAC5BV,MAAAA,UAAU;AACb;;AAED,QAAIW,KAAK,GAAG,IAAIzB,IAAJ,EAAZ;AACA,QAAI0B,SAAS,GAAGD,KAAK,CAACxB,WAAN,GAAoB0B,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAhB;AACA9B,IAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsC8B,YAAtC,CAAmD,KAAnD,EAA0D,YAA1D;AACA/B,IAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsC8B,YAAtC,CAAmD,KAAnD,EAA0DF,SAA1D;AAEA7B,IAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoC8B,YAApC,CAAiD,KAAjD,EAAwD,YAAxD;AACA/B,IAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoC8B,YAApC,CAAiD,KAAjD,EAAwDF,SAAxD;AAEA,WAAO,MAAM;AAAEF,MAAAA,SAAS,GAAG,KAAZ;AAAmB,KAAlC,CAfY,CAewB;AACvC,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACI;AAAK,MAAA,EAAE,EAAC,oBAAR;AAAA,6BACI;AAAA,wCAAsB7C,IAAI,GAAGA,IAAH,GAAU,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,EAAE,EAAC,oBAAR;AAAA,6BACI;AAAM,QAAA,EAAE,EAAC,cAAT;AAAwB,QAAA,QAAQ,EAAE0B,YAAlC;AAAA,gCACI;AAAO,UAAA,EAAE,EAAC,gBAAV;AAAA,iCACI;AAAA,oCACI;AAAA,sCACI;AAAA,uCACI;AAAO,kBAAA,EAAE,EAAC,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAKI;AAAA,6CAAK;AAAQ,kBAAA,EAAE,EAAC,cAAX;AAA0B,kBAAA,QAAQ,EAAGwB,CAAD,IAAO1B,gBAAgB,CAAC0B,CAAC,CAACC,MAAF,CAAS/B,KAAV,CAA3D;AAAA,4BACCnB,KAAK,IAAIA,KAAK,CAACmD,GAAN,CAAW3B,IAAD,iBACjB;AAAsB,oBAAA,KAAK,EAAEA,IAAI,CAAC4B,QAAlC;AAAA,oCAA8C5B,IAAI,CAAC4B,QAAnD;AAAA,qBAAa5B,IAAI,CAAC6B,EAAlB;AAAA;AAAA;AAAA;AAAA,0BADO;AADV;AAAA;AAAA;AAAA;AAAA,wBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAYI;AAAA,sCACI;AAAA,uCACI;AAAO,kBAAA,EAAE,EAAC,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII;AAAA,wCACI;AAAO,kBAAA,EAAE,EAAC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,kBAAA,EAAE,EAAC,YAAV;AAAwB,kBAAA,IAAI,EAAC,MAA7B;AAAoC,kBAAA,QAAQ,EAAIJ,CAAD,IAAO5C,WAAW,CAAC4C,CAAC,CAACC,MAAF,CAAS/B,KAAV,CAAjE;AAAqF,kBAAA,QAAQ,EAAET,IAA/F;AAAsG,kBAAA,QAAQ;AAA9G;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAQI;AAAA,wCACI;AAAO,kBAAA,EAAE,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,kBAAA,EAAE,EAAC,UAAV;AAAwB,kBAAA,IAAI,EAAC,MAA7B;AAAoC,kBAAA,QAAQ,EAAIuC,CAAD,IAAO1C,SAAS,CAAC0C,CAAC,CAACC,MAAF,CAAS/B,KAAV,CAA/D;AAAqF,kBAAA,QAAQ,EAAET,IAA/F;AAAsG,kBAAA,QAAQ;AAA9G;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZJ,eAyBI;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,uCACI;AAAO,kBAAA,EAAE,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBJ,eAgCI;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,wCACI;AAAO,kBAAA,IAAI,EAAC,UAAZ;AAAuB,kBAAA,OAAO,EAAEA,IAAhC;AAAsC,kBAAA,QAAQ,EAAIuC,CAAD,IAAOlC,oBAAoB,CAACkC,CAAC,CAACC,MAAF,CAASlC,OAAV;AAA5E;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,kBAAA,EAAE,EAAC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eA2CI;AAAK,UAAA,EAAE,EAAC,mBAAR;AAAA,kCACI;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AAAoC,YAAA,OAAO,EAAE,MAAMH,IAAI,EAAvD;AAAA,gCAAmE,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AAAoC,YAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0DH,CA/IM;;GAAMf,O;UAcOF,U;;;KAdPE,O","sourcesContent":["import React, { useEffect, useState }   from 'react';\r\nimport        { useHistory }            from 'react-router-dom';\r\nimport styles                           from './Reports.css';\r\n\r\nexport const Reports = ({ type }) => {\r\n\r\n    // ------------------------ Fetch Info Hooks -----------------------\r\n\r\n    const [ tests,       setTests ]         = useState(null);\r\n\r\n    // ------------------------- Content Hooks -------------------------\r\n\r\n    const [ testChosen,  setTestChosen  ]   = useState(null);\r\n    const [ dateFrom,    setDateFrom    ]   = useState(\"\");\r\n    const [ dateTo,      setDateTo      ]   = useState(\"\");\r\n    const [ dateRange,   setDateRange   ]   = useState(\"\");\r\n    const [ past,        setPast        ]   = useState(true);\r\n\r\n    const history = useHistory();\r\n    const back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const handleCheckboxChange = (checked) => {\r\n        setPast(checked);\r\n\r\n        document.getElementById(\"date__from\").value = new Date().toISOString().substring(0, 10); \r\n        document.getElementById(\"date__to\").value = new Date().toISOString().substring(0, 10);\r\n\r\n        setDateRange(`${document.getElementById(\"date__from\").value} - ${document.getElementById(\"date__to\").value}`)\r\n    }\r\n\r\n    const handleTestChange = (test) => {\r\n        setTestChosen(test);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        generateReport();\r\n    }\r\n\r\n    const generateReport = () => {\r\n        console.log(\"generate report\");\r\n        setDateRange(dateFrom - dateTo);\r\n\r\n        history.push({\r\n            pathname: '/admin/test-report',\r\n            // search: '?update=true',  // query string\r\n            state: {  // location state\r\n                // update: true,\r\n              test: testChosen,\r\n              dateRange: dateRange, \r\n            },\r\n        }); \r\n    }\r\n\r\n    const fetchTests = () => {\r\n        fetch(\"http://localhost:8000/tests\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n          setTests(data); \r\n        })\r\n        .catch((err) => console.log('error fetching tests:' + err))\r\n    }\r\n    \r\n    useEffect(() => {\r\n        document.title = \"Reports\";\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n    \r\n        if (isMounted) {                // add conditional check\r\n            fetchTests();\r\n        }\r\n\r\n        let today = new Date();\r\n        let todayDate = today.toISOString().split(\"T\")[0];\r\n        document.getElementById(\"date__from\").setAttribute(\"min\", \"1999-01-01\");\r\n        document.getElementById(\"date__from\").setAttribute(\"max\", todayDate);\r\n\r\n        document.getElementById(\"date__to\").setAttribute(\"min\", \"1999-01-01\");\r\n        document.getElementById(\"date__to\").setAttribute(\"max\", todayDate);\r\n    \r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"reports noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1> Test Report for {type ? type : \"\"} </h1>\r\n            </div>\r\n            <div id=\"content__container\">\r\n                <form id=\"report__form\" onSubmit={handleSubmit}>\r\n                    <table id=\"content__table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <label id=\"label__test_name\">       Select Test:            </label>\r\n                                </td>\r\n\r\n                                <td> <select id=\"test__select\" onChange={(e) => handleTestChange(e.target.value)}>\r\n                                     {tests && tests.map((test) => (\r\n                                        <option key={test.id} value={test.testName}> {test.testName} </option>\r\n                                     ))}\r\n                                     </select> </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label id=\"label__date_range\">      Date Range:             </label>\r\n                                </td>\r\n                                <td>\r\n                                    <label id=\"label__from\">            From:                   </label>\r\n                                    <input id=\"date__from\"  type=\"date\" onChange={ (e) => setDateFrom(e.target.value) }  disabled={past}  required/>\r\n                                </td>\r\n                                <td>\r\n                                    <label id=\"label__to\">              To:                     </label>\r\n                                    <input id=\"date__to\"    type=\"date\" onChange={ (e) => setDateTo(e.target.value)   }  disabled={past}  required/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>  </td>\r\n                                <td>\r\n                                    <label id=\"label__OR\">              OR                      </label>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>  </td>\r\n                                <td>\r\n                                    <input type=\"checkbox\" checked={past} onChange={ (e) => handleCheckboxChange(e.target.checked) } />\r\n                                    <label id=\"label__past\">                Any date in the past        </label>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div id=\"button__container\">\r\n                        <button className=\"regular__button\" onClick={() => back() }>     {`<<` } Back                </button>\r\n                        <button className=\"regular__button\" type=\"submit\">               Generate Report             </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}