{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\pages\\\\Admin\\\\MainPage\\\\ManageQuestions\\\\ManageQuestions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { QuestionTable } from '../../../../Admin/QuestionTable/QuestionTable';\nimport { useHistory } from 'react-router-dom';\nimport { Filter } from '../../../../Admin/Filter/Filter';\nimport styles from './ManageQuestions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ManageQuestions() {\n  _s();\n\n  // ---------------------------- Fetch Info Hooks ---------------------------\n  const [questions, setQuestions] = useState(null);\n  const [tags, setTags] = useState(null);\n  const [field, setField] = useState(null);\n  const [tests, setTests] = useState(null); // ----------------------------- Content Hooks -----------------------------    \n\n  const [filterStatus, setFilter] = useState(false);\n  const [filterByTags, setFilterByTags] = useState(true);\n  const [filteredQuestions, setFilteredQuestions] = useState([]); // ----------------------------------------------------------------------------\n\n  const history = useHistory();\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const handleNewQuestion = () => {\n    history.push(\"/admin/create-question\");\n  };\n\n  const handleNext = () => {};\n\n  const handleShowAll = () => {};\n\n  const handleDelete = id => {\n    const newQuestions = questions.filter(question => questions.id !== id);\n    setQuestions(newQuestions);\n  };\n\n  const handleFilterByChange = value => {\n    if (value === \"tags\") setFilterByTags(true);else setFilterByTags(false);\n  };\n\n  const handleFilterContentChange = value => {\n    if (value === \"\") setFilter(false);else setFilter(true);\n    let newQuestionList = questions;\n    setFilteredQuestions(newQuestionList.filter(question => {\n      let contains = false;\n\n      if (filterByTags === true) {\n        question.tags.map(tag => {\n          if (tag.toLowerCase().includes(value)) contains = true;\n        });\n      } else {\n        if (question.title.toLowerCase().includes(value)) contains = true;\n      }\n\n      if (contains === true) return question;else return null;\n    }));\n  };\n\n  const fetchTags = () => {\n    fetch(\"http://localhost:8000/tags\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setTags(data);\n    }).catch(err => console.log('error fetching tags:' + err));\n  };\n\n  const fetchQuestions = () => {\n    fetch(\"http://localhost:8000/questions\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setQuestions(data);\n      setFilteredQuestions(data);\n    }).catch(err => console.log('error fetching questions:' + err));\n  }; // Meant for fetching the necessary information on first render\n\n\n  useEffect(() => {\n    document.title = \"Manage Questions\";\n    let isMounted = true; // note mutable flag\n\n    if (isMounted) {\n      // add conditional check \n      fetchQuestions();\n      fetchTags();\n    }\n\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage_questions noselect\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"headers__container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page__header\",\n        children: [\" Available Questions for \", field ? field : \"\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), questions && filteredQuestions && /*#__PURE__*/_jsxDEV(Filter, {\n      filterStatus: filterStatus,\n      totalAmount: questions.length,\n      filteredAmount: filteredQuestions.length,\n      handleFilterByChange: handleFilterByChange,\n      handleFilterContentChange: handleFilterContentChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 49\n    }, this), filteredQuestions && /*#__PURE__*/_jsxDEV(QuestionTable, {\n      questions: filteredQuestions,\n      filteredQuestions: filteredQuestions,\n      tests: tests,\n      handleNext: handleNext,\n      handleShowAll: handleShowAll,\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttons__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"regular__button\",\n        onClick: () => handleBack(),\n        children: [\"  \", `<<`, \" Back         \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"regular__button\",\n        onClick: () => handleNewQuestion(),\n        children: [\"  New Question \", `>>`, \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ManageQuestions, \"Qi/TNF+e1cIpBB2VKIH15mKQxvE=\", false, function () {\n  return [useHistory];\n});\n\n_c = ManageQuestions;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageQuestions\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Admin/MainPage/ManageQuestions/ManageQuestions.js"],"names":["React","useEffect","useState","QuestionTable","useHistory","Filter","styles","ManageQuestions","questions","setQuestions","tags","setTags","field","setField","tests","setTests","filterStatus","setFilter","filterByTags","setFilterByTags","filteredQuestions","setFilteredQuestions","history","handleBack","goBack","handleNewQuestion","push","handleNext","handleShowAll","handleDelete","id","newQuestions","filter","question","handleFilterByChange","value","handleFilterContentChange","newQuestionList","contains","map","tag","toLowerCase","includes","title","fetchTags","fetch","method","then","res","json","data","catch","err","console","log","fetchQuestions","document","isMounted","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState }   from 'react';\r\nimport        { QuestionTable       }   from '../../../../Admin/QuestionTable/QuestionTable';\r\nimport        { useHistory          }   from 'react-router-dom';\r\nimport        { Filter              }   from '../../../../Admin/Filter/Filter';\r\nimport styles                           from './ManageQuestions.css';\r\n\r\nexport default function ManageQuestions() {\r\n\r\n    // ---------------------------- Fetch Info Hooks ---------------------------\r\n\r\n    const [ questions,          setQuestions            ]  = useState(null);\r\n    const [ tags,               setTags                 ]  = useState(null);\r\n\r\n    const [ field,              setField                ]  = useState(null);\r\n    const [ tests,              setTests                ]  = useState(null);\r\n\r\n    // ----------------------------- Content Hooks -----------------------------    \r\n\r\n    const [ filterStatus,       setFilter               ]  = useState(false);\r\n    const [ filterByTags,       setFilterByTags         ]  = useState(true);\r\n\r\n    const [ filteredQuestions,  setFilteredQuestions    ] = useState([]);\r\n\r\n    // ----------------------------------------------------------------------------\r\n\r\n    const history = useHistory();\r\n\r\n    const handleBack = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const handleNewQuestion = () => {\r\n        history.push(\"/admin/create-question\");\r\n    }\r\n\r\n    const handleNext = () => {\r\n        \r\n    }\r\n\r\n    const handleShowAll = () => {\r\n\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        const newQuestions = questions.filter(question => questions.id !== id);\r\n        setQuestions(newQuestions);\r\n    }\r\n\r\n    const handleFilterByChange = (value) => {\r\n        if (value === \"tags\") setFilterByTags(true);\r\n        else setFilterByTags(false);\r\n    }\r\n\r\n    const handleFilterContentChange = (value) => {\r\n        \r\n        if (value === \"\") setFilter(false);\r\n        else setFilter(true);\r\n\r\n        let newQuestionList = questions;\r\n        setFilteredQuestions(newQuestionList.filter((question) => { \r\n            \r\n            let contains = false;\r\n\r\n            if (filterByTags === true) {\r\n                question.tags.map((tag) => {\r\n                    if (tag.toLowerCase().includes(value)) contains = true;\r\n                });\r\n            } else {\r\n                if (question.title.toLowerCase().includes(value)) contains = true;\r\n            }\r\n\r\n            if (contains === true) return question;\r\n            else return null;\r\n\r\n        }));\r\n    }\r\n\r\n    const fetchTags = () => {\r\n        fetch(\"http://localhost:8000/tags\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n          setTags(data); \r\n        })\r\n        .catch((err) => console.log('error fetching tags:' + err))\r\n      }\r\n\r\n    const fetchQuestions = () => {\r\n        fetch(\"http://localhost:8000/questions\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            setQuestions(data)\r\n            setFilteredQuestions(data);\r\n        })\r\n        .catch((err) => console.log('error fetching questions:' + err))\r\n      }\r\n\r\n    // Meant for fetching the necessary information on first render\r\n    useEffect(() => {\r\n        document.title = \"Manage Questions\";\r\n\r\n        let isMounted = true;           // note mutable flag\r\n\r\n        if (isMounted) {                // add conditional check \r\n            fetchQuestions();\r\n            fetchTags();\r\n        }\r\n\r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"manage_questions noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1 className=\"page__header\"> Available Questions for {field ? field : \"\"} </h1>\r\n            </div>\r\n\r\n            { questions && filteredQuestions && <Filter filterStatus={filterStatus} totalAmount={questions.length} filteredAmount={filteredQuestions.length} \r\n                handleFilterByChange={handleFilterByChange} handleFilterContentChange={handleFilterContentChange}/> }\r\n\r\n            { filteredQuestions && <QuestionTable questions={filteredQuestions} filteredQuestions={filteredQuestions} tests={tests} handleNext={handleNext} handleShowAll={handleShowAll} handleDelete={handleDelete} /> }\r\n\r\n            <div id=\"buttons__container\">\r\n                <button className=\"regular__button\" onClick={() =>   handleBack()          }>  {`<<` } Back         </button>\r\n                <button className=\"regular__button\" onClick={() =>   handleNewQuestion()   }>  New Question {`>>`}  </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}