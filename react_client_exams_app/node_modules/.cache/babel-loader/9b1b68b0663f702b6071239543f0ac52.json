{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\pages\\\\Admin\\\\MainPage\\\\ManageTests\\\\CreateEditTest\\\\CreateEditTest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '../../../../../shared/Button/Button';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport styles from './CreateEditTest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateEditTest() {\n  _s();\n\n  // -------------------------------------------- Fetch Info Hooks --------------------------------------------\n  const [field, setField] = useState(null);\n  const [tests, setTests] = useState(null);\n  const [testTypes, setTestTypes] = useState(null);\n  const [certificateTemplates, setCertificateTemplates] = useState(null);\n  const [languages, setLanguages] = useState(null); // -------------------------------------------- Top Content Hooks -------------------------------------------\n  // *General Details Table*\n\n  const [testID, setTestID] = useState(0);\n  const [language, setLanguage] = useState(\"\");\n  const [testType, setTestType] = useState(\"\");\n  const [testName, setTestName] = useState(\"\");\n  const [passingGrade, setPassingGrade] = useState(\"\");\n  const [header, setHeader] = useState(\"\");\n  const [messageSuccess, setMessageSuccess] = useState(\"\");\n  const [messageFailure, setMessageFailure] = useState(\"\");\n  const [certificateTemplate, setCertificateTemplate] = useState(\"\"); // *Email Delivery Table*         \n  // Status Container          \n\n  const [status, setStatus] = useState(\"OFF\");\n  const [from, setFrom] = useState(\"\");\n  const [cc, setCC] = useState(\"\");\n  const [bcc, setBCC] = useState(\"\"); // Passing the Test Container\n\n  const [passingMessageSubject, setPassingMessageSubject] = useState(\"\");\n  const [passingMessageBody, setPassingMessageBody] = useState(\"\"); // Failing the Test Container\n\n  const [failingMessageSubject, setFailingMessageSubject] = useState(\"\");\n  const [failingMessageBody, setFailingMessageBody] = useState(\"\"); // -------------------------------------------- Bottom Content Hooks ----------------------------------------\n  // *Filter Container*\n\n  const [filter, setFilter] = useState(false);\n  const [filterContent, setFilterContent] = useState(\"\"); // *Questions Table\n\n  const [questionsAmount, setQuestionsAmount] = useState(0); // ----------------------------------------------------------------------------------------------------------\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const handleShow = () => {};\n\n  const initialStates = () => {};\n\n  const handleStatus = value => {\n    if (value === \"\") setStatus(\"OFF\");else setStatus(\"ON\");\n  };\n\n  const handleFromChange = value => {\n    handleStatus(value);\n    setFrom(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  const saveTest = () => {\n    fetch('http://localhost:8000/tests', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({// id: questionID,\n        // tags: tags,\n        // last_update: Date.now,\n        // type: type,\n        // title: questionHeader,\n        // text: questionText,\n        // difficulty: (question && question.difficulty ? question.difficulty : \"low\"),\n        // answers: possibleAnswers,\n        // num_of_tests: (question && question.num_of_tests ? question.num_of_tests : 0),\n        // answersLayout: answersLayout\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data); // initialState(); \n    }).catch(err => console.log(`error ${err}`));\n  };\n\n  const caseEditTest = () => {\n    let editTest = location.state.test;\n    setTestID(editTest.testID);\n    setTestType(editTest.testType);\n    setTestName(editTest.testName);\n    setPassingGrade(editTest.passingGrade);\n    setHeader(editTest.header);\n    setMessageSuccess(editTest.messageSuccess);\n    setMessageFailure(editTest.messageFailure);\n    setCertificateTemplate(editTest.certificateTemplate);\n  };\n\n  const fetchLanguages = () => {\n    fetch(\"http://localhost:8000/languages\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setLanguages(data);\n      setLanguage(language ? language : data[0].languageType);\n    }).catch(err => console.log('error fetching languages:' + err));\n  };\n\n  const fetchTestTypes = () => {\n    fetch(\"http://localhost:8000/testTypes\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setTestTypes(data);\n      setTestType(testType ? testType : data[0].typeName);\n    }).catch(err => console.log('error fetching test types:' + err));\n  };\n\n  const fetchCertificateTemplates = () => {\n    fetch(\"http://localhost:8000/certificateTemplates\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setCertificateTemplates(data);\n      setCertificateTemplate(certificateTemplate ? certificateTemplate : data[0].templateName);\n    }).catch(err => console.log('error fetching certificate templates:' + err));\n  };\n\n  const fetchTests = () => {\n    fetch(\"http://localhost:8000/tests\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setTests(data);\n      setTestID(data[data.length - 1].testID + 1);\n    }).catch(err => console.log('error fetching test types:' + err));\n  };\n\n  useEffect(() => {\n    document.title = `${location.state.test === null ? \"Create\" : \"Edit\"} Question`;\n\n    if (location.state) {\n      if (location.state.field) {\n        console.log(location.state.field);\n        setField(location.state.field);\n      }\n\n      if (location.state.test) {\n        console.log(location.state.test);\n        caseEditTest();\n      } else {}\n    }\n  }, [location.state]); // Meant for fetching the necessary information on first render\n\n  useEffect(() => {\n    let isMounted = true; // note mutable flag\n\n    if (isMounted) {\n      // add conditional check\n      fetchLanguages();\n      fetchTestTypes();\n      fetchCertificateTemplates();\n      fetchTests();\n    }\n\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create_edit_test noselect\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page__header\",\n      children: [\" \", location.state.test === null ? \"Create\" : \"Edit\", \" Test \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"new_test__form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"top_content__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content__section\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            id: \"general_details__table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"space_under header_row border_bottom\",\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  colspan: \"2\",\n                  children: \" General Test Details \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Field of Study: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    id: \"field__label\",\n                    children: [\" \", field ? field : \"undefined\", \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Language: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"  \", /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"language__select\",\n                    onChange: e => setLanguage(e.target.value),\n                    children: languages && languages.map(language => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: language.languageName,\n                      children: [\" \", language.languageName, \" \"]\n                    }, language.languageID, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 25\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Test Type: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"test_type__select\",\n                    onChange: e => setTestType(e.target.value),\n                    children: testTypes && testTypes.map(testType => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: testType.typeName,\n                      children: [\" \", testType.typeName, \" \"]\n                    }, testType.typeID, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Test Name:                                                                                                                                                  \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"test_name__input\",\n                    type: \"text\",\n                    placeholder: \"Type something\",\n                    value: testName,\n                    onChange: e => setTestName(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Passing Grade:                                                                                                                                              \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"passing_grade__input\",\n                    type: \"text\",\n                    placeholder: \"Grade\",\n                    value: passingGrade,\n                    onChange: e => setPassingGrade(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Show correct answers after submission:                                                                                                                      \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"show_answers__checkbox\",\n                    type: \"checkbox\",\n                    defaultChecked: true,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Message header:                                                                                                                                             \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"message_header__input\",\n                    type: \"text\",\n                    placeholder: \"Type something\",\n                    value: header,\n                    onChange: e => setHeader(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Message to show on success:                                                                                                                                 \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"message_success__input\",\n                    type: \"text\",\n                    placeholder: \"Type something\",\n                    value: messageSuccess,\n                    onChange: e => setMessageSuccess(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Message to show on failure:                                                                                                                                 \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"message_failure__input\",\n                    type: \"text\",\n                    placeholder: \"Type something\",\n                    value: messageFailure,\n                    onChange: e => setMessageFailure(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Certificate Templates: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"certificate__select\",\n                    onChange: e => setCertificateTemplate(e.target.value),\n                    children: certificateTemplates && certificateTemplates.map(certificate => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: certificate.templateName,\n                      children: [\" \", certificate.templateName, \" \"]\n                    }, certificate.templateID, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content__section\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            id: \"email_delivery__table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"space_under header_row border_bottom\",\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  colspan: \"2\",\n                  children: \" Email Delivery Upon Test Completion \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\" Current Status: \\\"\", status === \"OFF\" ? `OFF` : \"ON\", \"\\\"                                                                                                         \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"sending_emails__container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      id: \"sending_emails__label\",\n                      children: [\" Emails \", status === \"OFF\" ? `won't` : \"will\", \" be sent upon test completion.                                                   \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\" to turn \", status === \"OFF\" ? \"ON\" : \"OFF\", \" email delivery, \", status === \"OFF\" ? \"fill out\" : \"reset\", \" the mandatory                    \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \" fields in this section:                                                                                                              \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" From: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"from__input\",\n                    type: \"text\",\n                    value: from,\n                    onChange: e => handleFromChange(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" CC: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"cc__input\",\n                    type: \"text\",\n                    value: cc,\n                    onChange: e => setCC(e.target.value),\n                    disabled: from ? false : true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" BCC: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"bcc__input\",\n                    type: \"text\",\n                    value: bcc,\n                    onChange: e => setBCC(e.target.value),\n                    disabled: from ? false : true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            id: \"passing_test__table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"space_under sub_header_row border_bottom\",\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  colspan: \"2\",\n                  children: \" Passing the test \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Message subject:                                                                                                                                            \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"message_subject__input\",\n                    type: \"text\",\n                    value: passingMessageSubject,\n                    onChange: e => setPassingMessageSubject(e.target.value),\n                    disabled: from ? false : true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Message body:                                                                                                                                               \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"message_body__input\",\n                    type: \"text\",\n                    value: passingMessageBody,\n                    onChange: e => setPassingMessageBody(e.target.value),\n                    disabled: from ? false : true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    style: {\n                      fontWeight: 'bold'\n                    },\n                    children: \" Predefined Templated - Click to copy to clipboard \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" NEED TO ADD TEMPLATES HERE \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"failing_test__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"space_under sub_header_row border_bottom\",\n              children: /*#__PURE__*/_jsxDEV(\"th\", {\n                colspan: \"2\",\n                children: \" Failing the test \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Message subject:                                                                                                                                            \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"message_subject__input\",\n                  type: \"text\",\n                  value: failingMessageSubject,\n                  onChange: e => setFailingMessageSubject(e.target.value),\n                  disabled: from ? false : true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Message body:                                                                                                                                               \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"message_body__input\",\n                  type: \"text\",\n                  value: failingMessageBody,\n                  onChange: e => setFailingMessageBody(e.target.value),\n                  disabled: from ? false : true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    fontWeight: 'bold'\n                  },\n                  children: \" Predefined Templated - Click to copy to clipboard \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" NEED TO ADD TEMPLATES HERE \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bottom_content__container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"questions__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section__headers\",\n            children: \" Questions \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"explanation\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: [\" Note: This test is set to be a \", `'${testType}'`, \" test, which means:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"sub__label\",\n              children: \" All the questions that you select here will be included in the test. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"sub__label\",\n              children: \" All respondents will receive the SAME set of questions presented in a different order. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"sub__label\",\n              children: [\" *TIP: if you want each respondent to receive a different set of questions, change the test type to 'Random' in the \", /*#__PURE__*/_jsxDEV(Link, {\n                to: `/admin/${location.state === null ? \"create\" : \"edit\"}-test#test_type__select`,\n                children: \"Test Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 161\n              }, this), \" section.* \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"question_table__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                fontWeight: 'bold',\n                color: 'orange'\n              },\n              children: \" Select the questions that you want to include in the test \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" You can use the tag filter to narrow down the list to a specific subject - Don't worry, filtering won't affect your previous selections. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"filter__container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: \" Filter by tags or content \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"tag_content__input\",\n                type: \"text\",\n                onChange: e => {\n                  setFilterContent(e.target.value);\n                  filterContent === \"\" ? setFilter(false) : setFilter(true);\n                },\n                placeholder: \"Enter a list of keywords separated by commas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                id: \"filter_state\",\n                children: [\" Filter is \", filter === false ? \"OFF\" : \"ON\", \"  \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              id: \"questions__table\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: [\" Currently showing \", questionsAmount, \" questions (\", questionsAmount, \" selected) \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \" What is the DOM? \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \" *IN SMALL TEXT* Javascript | Advanced\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"table_buttons__container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\" Showing 1-\", `AMOUNT OF QUESTIONS`, \" of \", `AMOUNT OF QUESTIONS`, \" filtered questions\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: [\" Next 2 \", `>>`, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \" Show only Selected \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: [\" Show All \", `AMOUNT OF QUESTIONS`, \" questions \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\" The test will include \", `AMOUNT OF QUESTIONS`, \" in total \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"buttons__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"regular__button\",\n          onClick: () => handleBack(),\n          children: [\" \", `<<`, \" Back  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"regular__button\",\n          onClick: () => handleShow(),\n          children: \"  Show         \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"regular__button\",\n          type: \"submit\",\n          children: [\"  Save \", `>>`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateEditTest, \"lJgo82JCr5h5SOS5SI+DkjfTf+k=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = CreateEditTest;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateEditTest\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Admin/MainPage/ManageTests/CreateEditTest/CreateEditTest.js"],"names":["React","useState","useEffect","Button","HashLink","Link","useHistory","useLocation","styles","CreateEditTest","field","setField","tests","setTests","testTypes","setTestTypes","certificateTemplates","setCertificateTemplates","languages","setLanguages","testID","setTestID","language","setLanguage","testType","setTestType","testName","setTestName","passingGrade","setPassingGrade","header","setHeader","messageSuccess","setMessageSuccess","messageFailure","setMessageFailure","certificateTemplate","setCertificateTemplate","status","setStatus","from","setFrom","cc","setCC","bcc","setBCC","passingMessageSubject","setPassingMessageSubject","passingMessageBody","setPassingMessageBody","failingMessageSubject","setFailingMessageSubject","failingMessageBody","setFailingMessageBody","filter","setFilter","filterContent","setFilterContent","questionsAmount","setQuestionsAmount","location","history","handleBack","goBack","handleShow","initialStates","handleStatus","value","handleFromChange","handleSubmit","event","preventDefault","saveTest","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","catch","err","caseEditTest","editTest","state","test","fetchLanguages","languageType","fetchTestTypes","typeName","fetchCertificateTemplates","templateName","fetchTests","length","document","title","isMounted","e","target","map","languageName","languageID","typeID","certificate","templateID","fontWeight","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }           from  'react';\r\nimport        { Button }                        from  '../../../../../shared/Button/Button';\r\nimport        { HashLink as Link }              from  'react-router-hash-link';\r\nimport        { useHistory, useLocation }       from  'react-router-dom';\r\nimport styles                                   from  './CreateEditTest.css';\r\n\r\nexport default function CreateEditTest() {\r\n\r\n  // -------------------------------------------- Fetch Info Hooks --------------------------------------------\r\n\r\n  const [ field,                      setField                  ] = useState(null);\r\n\r\n  const [ tests,                      setTests                  ] = useState(null);\r\n  const [ testTypes,                  setTestTypes              ] = useState(null);\r\n  const [ certificateTemplates,       setCertificateTemplates   ] = useState(null);\r\n  const [ languages,                  setLanguages              ] = useState(null);\r\n\r\n  // -------------------------------------------- Top Content Hooks -------------------------------------------\r\n\r\n  // *General Details Table*\r\n  const [ testID,                     setTestID                 ] = useState(0);\r\n  const [ language,                   setLanguage               ] = useState(\"\");\r\n  const [ testType,                   setTestType               ] = useState(\"\");\r\n  const [ testName,                   setTestName               ] = useState(\"\");\r\n  const [ passingGrade,               setPassingGrade           ] = useState(\"\");\r\n  const [ header,                     setHeader                 ] = useState(\"\");\r\n  const [ messageSuccess,             setMessageSuccess         ] = useState(\"\");\r\n  const [ messageFailure,             setMessageFailure         ] = useState(\"\");\r\n  const [ certificateTemplate,        setCertificateTemplate    ] = useState(\"\");\r\n\r\n  // *Email Delivery Table*         \r\n  // Status Container          \r\n  const [ status,                     setStatus                 ] = useState(\"OFF\");\r\n  const [ from,                       setFrom                   ] = useState(\"\");\r\n  const [ cc,                         setCC                     ] = useState(\"\");\r\n  const [ bcc,                        setBCC                    ] = useState(\"\");    \r\n\r\n  // Passing the Test Container\r\n  const [ passingMessageSubject,      setPassingMessageSubject  ] = useState(\"\");\r\n  const [ passingMessageBody,         setPassingMessageBody     ] = useState(\"\");    \r\n\r\n  // Failing the Test Container\r\n  const [ failingMessageSubject,      setFailingMessageSubject  ] = useState(\"\");   \r\n  const [ failingMessageBody,         setFailingMessageBody     ] = useState(\"\");    \r\n\r\n  // -------------------------------------------- Bottom Content Hooks ----------------------------------------\r\n\r\n  // *Filter Container*\r\n  const [ filter,                     setFilter                 ] = useState(false);\r\n  const [ filterContent,              setFilterContent          ] = useState(\"\");\r\n\r\n  // *Questions Table\r\n  const [ questionsAmount,            setQuestionsAmount        ] = useState(0);    \r\n\r\n  // ----------------------------------------------------------------------------------------------------------\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  \r\n  const handleBack = () => {\r\n    history.goBack();\r\n  }\r\n  \r\n  const handleShow = () => {\r\n    \r\n  }\r\n\r\n  const initialStates = () => {\r\n\r\n  }\r\n\r\n  const handleStatus = (value) => {\r\n    if (value === \"\") setStatus(\"OFF\");\r\n    else setStatus(\"ON\");\r\n  }\r\n\r\n  const handleFromChange = (value) => {\r\n    handleStatus(value);\r\n    setFrom(value);\r\n  }\r\n\r\n  const handleSubmit = (event) => {  \r\n    event.preventDefault();\r\n  }\r\n\r\n  const saveTest = () => {\r\n    fetch('http://localhost:8000/tests', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n        // id: questionID,\r\n        // tags: tags,\r\n        // last_update: Date.now,\r\n        // type: type,\r\n        // title: questionHeader,\r\n        // text: questionText,\r\n        // difficulty: (question && question.difficulty ? question.difficulty : \"low\"),\r\n        // answers: possibleAnswers,\r\n        // num_of_tests: (question && question.num_of_tests ? question.num_of_tests : 0),\r\n        // answersLayout: answersLayout\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => { \r\n        console.log(data); \r\n        // initialState(); \r\n      })\r\n      .catch((err) => console.log(`error ${err}`))\r\n  }\r\n\r\n  const caseEditTest = () => {\r\n    let editTest = location.state.test;\r\n\r\n    setTestID(editTest.testID);\r\n    setTestType(editTest.testType);\r\n    setTestName(editTest.testName);\r\n    setPassingGrade(editTest.passingGrade);\r\n    setHeader(editTest.header);\r\n    setMessageSuccess(editTest.messageSuccess);\r\n    setMessageFailure(editTest.messageFailure);\r\n    setCertificateTemplate(editTest.certificateTemplate);\r\n  }\r\n\r\n  const fetchLanguages = () => {\r\n    fetch(\"http://localhost:8000/languages\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setLanguages(data); \r\n      setLanguage(language ? language : data[0].languageType); \r\n    })\r\n    .catch((err) => console.log('error fetching languages:' + err))\r\n  }\r\n\r\n  const fetchTestTypes = () => {\r\n    fetch(\"http://localhost:8000/testTypes\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setTestTypes(data); \r\n      setTestType(testType ? testType : data[0].typeName); \r\n    })\r\n    .catch((err) => console.log('error fetching test types:' + err))\r\n  }\r\n\r\n  const fetchCertificateTemplates = () => {\r\n    fetch(\"http://localhost:8000/certificateTemplates\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setCertificateTemplates(data); \r\n      setCertificateTemplate(certificateTemplate ? certificateTemplate : data[0].templateName); \r\n    })\r\n    .catch((err) => console.log('error fetching certificate templates:' + err))\r\n  }\r\n\r\n  const fetchTests = () => {\r\n    fetch(\"http://localhost:8000/tests\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setTests(data); \r\n      setTestID(data[data.length - 1].testID + 1); \r\n    })\r\n    .catch((err) => console.log('error fetching test types:' + err))\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = `${location.state.test === null ? \"Create\" : \"Edit\"} Question`;\r\n\r\n    if (location.state) {\r\n\r\n      if (location.state.field) {\r\n        console.log(location.state.field);\r\n        setField(location.state.field);\r\n      }\r\n\r\n      if (location.state.test) {\r\n        console.log(location.state.test);\r\n        caseEditTest();\r\n      } else {\r\n\r\n      }\r\n    }\r\n  }, [location.state])\r\n\r\n    // Meant for fetching the necessary information on first render\r\n  useEffect(() => {\r\n    let isMounted = true;           // note mutable flag\r\n\r\n    if (isMounted) {                // add conditional check\r\n      fetchLanguages();\r\n      fetchTestTypes();\r\n      fetchCertificateTemplates();\r\n      fetchTests();\r\n    }\r\n\r\n    return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"create_edit_test noselect\">\r\n      <h1 className=\"page__header\"> {location.state.test === null ? \"Create\" : \"Edit\"} Test </h1> {/* className=\"page__header\" */}\r\n      <form className=\"new_test__form\" onSubmit={handleSubmit}>\r\n        <div id=\"top_content__container\">\r\n          \r\n          <div className=\"content__section\">\r\n            <table id=\"general_details__table\">\r\n              <tbody>\r\n                <tr className=\"space_under header_row border_bottom\">\r\n                  <th colspan=\"2\"> General Test Details </th>\r\n                </tr>\r\n                <tr>\r\n                  <td> <label> Field of Study: </label> </td>\r\n                  <td> <label id=\"field__label\"> {field ? field : \"undefined\"} </label> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Language: </label> </td>\r\n                  <td>  <select id=\"language__select\" onChange={(e) => setLanguage (e.target.value)}>\r\n                          {languages && languages.map((language) => (\r\n                            <option key={language.languageID} value={language.languageName}> {language.languageName} </option>\r\n                          ))} \r\n                        </select> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Test Type: </label> </td>\r\n                  <td> <select id=\"test_type__select\" onChange={(e) => setTestType (e.target.value)}>\r\n                          {testTypes && testTypes.map((testType) => (\r\n                            <option key={testType.typeID} value={testType.typeName}> {testType.typeName} </option>\r\n                          ))}\r\n                        </select> </td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td> <label> Test Name:                                                                                                                                                  </label> </td>\r\n                  <td> <input id=\"test_name__input\"       type=\"text\"     placeholder=\"Type something\"      value={testName}        onChange={(e) => setTestName(e.target.value)}        required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Passing Grade:                                                                                                                                              </label> </td>\r\n                  <td> <input id=\"passing_grade__input\"   type=\"text\"     placeholder=\"Grade\"               value={passingGrade}    onChange={(e) => setPassingGrade(e.target.value)}    required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Show correct answers after submission:                                                                                                                      </label> </td>\r\n                  <td> <input id=\"show_answers__checkbox\" type=\"checkbox\" defaultChecked                                                                                                 required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Message header:                                                                                                                                             </label> </td>\r\n                  <td> <input id=\"message_header__input\"  type=\"text\"     placeholder=\"Type something\"      value={header}          onChange={(e) => setHeader(e.target.value)}          required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Message to show on success:                                                                                                                                 </label> </td>\r\n                  <td> <input id=\"message_success__input\" type=\"text\"     placeholder=\"Type something\"      value={messageSuccess}  onChange={(e) => setMessageSuccess(e.target.value)}  required/> </td>\r\n                </tr>   \r\n\r\n                <tr>    \r\n                  <td> <label> Message to show on failure:                                                                                                                                 </label> </td>\r\n                  <td> <input id=\"message_failure__input\" type=\"text\"     placeholder=\"Type something\"      value={messageFailure}  onChange={(e) => setMessageFailure(e.target.value)}  required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Certificate Templates: </label> </td>\r\n                  <td> <select id=\"certificate__select\" onChange={(e) => setCertificateTemplate (e.target.value)}>\r\n                          {certificateTemplates && certificateTemplates.map((certificate) => (\r\n                            <option key={certificate.templateID} value={certificate.templateName}> {certificate.templateName} </option>\r\n                          ))}\r\n                        </select> </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div className=\"content__section\">\r\n            <table id=\"email_delivery__table\">\r\n              <tbody>\r\n                <tr className=\"space_under header_row border_bottom\">\r\n                  <th colspan=\"2\"> Email Delivery Upon Test Completion </th>\r\n                </tr>\r\n                <tr>\r\n                  <td> <label> Current Status: \"{status === \"OFF\" ? `OFF` : \"ON\"}\"                                                                                                         </label> </td>\r\n                  <td> <div id=\"sending_emails__container\">      \r\n                          <label id=\"sending_emails__label\" > Emails {status === \"OFF\" ? `won't` : \"will\"} be sent upon test completion.                                                   </label>\r\n                          <label                    > to turn {status === \"OFF\" ? \"ON\" : \"OFF\"} email delivery, {status === \"OFF\" ? \"fill out\" : \"reset\"} the mandatory                    </label>\r\n                          <label                    > fields in this section:                                                                                                              </label>\r\n                        </div> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> From: </label> </td>\r\n                  <td> <input id=\"from__input\"  type=\"text\" value={from}  onChange={(e) => handleFromChange(e.target.value)}                                                                     /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> CC: </label> </td>      \r\n                  <td> <input id=\"cc__input\"    type=\"text\" value={cc}    onChange={(e) => setCC(e.target.value)}   disabled={from ? false : true}                                               /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> BCC: </label> </td>       \r\n                  <td> <input id=\"bcc__input\"   type=\"text\" value={bcc}   onChange={(e) => setBCC(e.target.value)}  disabled={from ? false : true}                                               /> </td>\r\n                </tr>      \r\n              </tbody>\r\n            </table>       \r\n         \r\n         \r\n            <table id=\"passing_test__table\">   \r\n              <tbody>\r\n                <tr className=\"space_under sub_header_row border_bottom\">\r\n                  <th colspan=\"2\"> Passing the test </th>\r\n                </tr>\r\n                <tr>       \r\n                  <td> <label> Message subject:                                                                                                                                            </label> </td>\r\n                  <td> <input id=\"message_subject__input\" type=\"text\" value={passingMessageSubject} onChange={(e) => setPassingMessageSubject(e.target.value)}  disabled={from ? false : true}   /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> Message body:                                                                                                                                               </label> </td>\r\n                  <td> <input id=\"message_body__input\"    type=\"text\" value={passingMessageBody}    onChange={(e) => setPassingMessageBody(e.target.value)} disabled={from ? false : true}       /> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td>\r\n                    <label style={{fontWeight: 'bold'}}> Predefined Templated - Click to copy to clipboard </label>\r\n                    <label> NEED TO ADD TEMPLATES HERE </label>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n\r\n          <table id=\"failing_test__table\">\r\n            <tbody>\r\n              <tr className=\"space_under sub_header_row border_bottom\">\r\n                  <th colspan=\"2\"> Failing the test </th>\r\n                </tr>\r\n              <tr>\r\n                <td> <label> Message subject:                                                                                                                                            </label> </td>\r\n                <td> <input id=\"message_subject__input\" type=\"text\" value={failingMessageSubject} onChange={(e) => setFailingMessageSubject(e.target.value)}  disabled={from ? false : true}   /> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td> <label> Message body:                                                                                                                                               </label> </td>\r\n                <td> <input id=\"message_body__input\"    type=\"text\" value={failingMessageBody}    onChange={(e) => setFailingMessageBody(e.target.value)} disabled={from ? false : true}       /> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  <label style={{fontWeight: 'bold'}}> Predefined Templated - Click to copy to clipboard </label>\r\n                  <label> NEED TO ADD TEMPLATES HERE </label>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div id=\"bottom_content__container\">\r\n          <div id=\"questions__container\">\r\n            <h2 className=\"section__headers\"> Questions </h2>\r\n            <div id=\"explanation\">\r\n              <label style={{fontWeight: 'bold'}}> Note: This test is set to be a {`'${testType}'`} test, which means:</label>\r\n              \r\n              {/* INSTEAD OF THIS: */}\r\n              <label className=\"sub__label\"> All the questions that you select here will be included in the test. </label>\r\n              <label className=\"sub__label\"> All respondents will receive the SAME set of questions presented in a different order. </label>\r\n\r\n              {/* NEED TO CHANGE THE 'LINK' TO SOMETHING ELSE - SOMETHING THAT WILL REFER THE USER BACK TO THE TEST DETAILS  */}\r\n              <label className=\"sub__label\"> *TIP: if you want each respondent to receive a different set of questions, change the test type to 'Random' in the <Link to={`/admin/${location.state === null ? \"create\" : \"edit\"}-test#test_type__select`} >Test Details</Link> section.* </label>\r\n\r\n              {/* FOR EVERY LABEL OR SOMETHING FROM THE DB THAT CONTAINS THE TEST TYPES, I WILL NEED TO DO THIS */}\r\n              {/* <label className=\"sub__label\"> {TestType.child.text} </label> */}\r\n            </div>\r\n\r\n            <div id=\"question_table__container\">\r\n              <label style={{fontWeight: 'bold', color: 'orange'}}> Select the questions that you want to include in the test </label>\r\n              <label> You can use the tag filter to narrow down the list to a specific subject - Don't worry, filtering won't affect your previous selections. </label>\r\n\r\n              <div id=\"filter__container\">\r\n                <label style={{fontWeight: 'bold'}}> Filter by tags or content </label>\r\n                <input id=\"tag_content__input\" type=\"text\"\r\n                            onChange={(e) => { setFilterContent(e.target.value); filterContent === \"\" ? setFilter(false) : setFilter(true)} }\r\n                            placeholder='Enter a list of keywords separated by commas'/>\r\n                    <label id=\"filter_state\"> Filter is {filter === false ? \"OFF\" : \"ON\"}  </label>\r\n              </div>\r\n\r\n              <table id=\"questions__table\">\r\n                <tbody>\r\n                  <tr>\r\n                    <th> Currently showing {questionsAmount} questions ({questionsAmount} selected) </th>\r\n                  </tr>\r\n                  <tr>\r\n                    {/* CHANGE THIS SO EVERY QUESTION THAT MATCHES THE FILTER WILL BE PLACED IN A NEW TABLE ROW, AND THAT THE SHOW BUTTON CAN SHOW THE QUESTIONS CONTENT\r\n                    PLS PAY ATTENTION THAT THIS KIND OF OPEN MENU CAN BE CREATED AND RE-USED FOR THE 'TEST REPORT' PAGE AS WELL */}\r\n\r\n                    <td>\r\n                      <label> What is the DOM? </label>\r\n                      <label> *IN SMALL TEXT* Javascript | Advanced</label>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n              <div id=\"table_buttons__container\">\r\n                <label> Showing 1-{`AMOUNT OF QUESTIONS`} of {`AMOUNT OF QUESTIONS`} filtered questions</label>\r\n                <button> Next 2 {`>>`} </button>\r\n                <button> Show only Selected </button>\r\n                <button> Show All {`AMOUNT OF QUESTIONS`} questions </button>\r\n              </div>\r\n            </div>\r\n\r\n            <label> The test will include {`AMOUNT OF QUESTIONS`} in total </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"buttons__container\">\r\n            <button className=\"regular__button\" onClick={() => handleBack() }> {`<<` } Back  </button>\r\n            <button className=\"regular__button\" onClick={() => handleShow() }>  Show         </button>\r\n            <button className=\"regular__button\" type=\"submit\"          >  Save {`>>` } </button>\r\n          </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};"]},"metadata":{},"sourceType":"module"}