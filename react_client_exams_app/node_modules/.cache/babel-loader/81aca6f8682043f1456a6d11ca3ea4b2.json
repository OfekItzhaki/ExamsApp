{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\pages\\\\Admin\\\\MainPage\\\\ManageQuestions\\\\CreateEditQuestion\\\\CreateEditQuestion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { TagsInput } from '../../../../../Admin/TagsInput/TagsInput';\nimport styles from './CreateEditQuestion.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateEditQuestion() {\n  _s();\n\n  // ------------------------ Fetch Info Hooks -----------------------\n  const [questionTypes, setQuestionTypes] = useState(null);\n  const [questions, setQuestions] = useState(null);\n  const [question, setQuestion] = useState(null);\n  const [field, setField] = useState(null); // ------------------------- Content Hooks -------------------------\n  // *Question Table*\n\n  const [questionType, setQuestionType] = useState(\"\");\n  const [questionHeader, setQuestionHeader] = useState(\"\");\n  const [questionText, setQuestionText] = useState(\"\");\n  const [questionID, setQuestionID] = useState(0);\n  const [difficulty, setDifficulty] = useState(\"low\"); // *Answers Table*\n\n  const [answers, setAnswers] = useState(question ? question.answers : [{\n    \"answerID\": 0,\n    \"answerTitle\": \"\",\n    \"correct\": false\n  }, {\n    \"answerID\": 1,\n    \"answerTitle\": \"\",\n    \"correct\": false\n  }, {\n    \"answerID\": 2,\n    \"answerTitle\": \"\",\n    \"correct\": false\n  }]);\n  const [answerID, setAnswerID] = useState(answers ? answers[answers.length - 1].id + 1 : 0);\n  const [answersLayout, setAnswersLayout] = useState(\"vertical\"); // *Tags Table* \n\n  const [tags, setTags] = useState(question ? question.tags : \"\"); // -----------------------------------------------------------------\n\n  const initialState = () => {\n    console.log(\"returning to initial state\");\n    setQuestionType(questionTypes ? questionTypes[0] : \"\");\n    setQuestionHeader(\"\");\n    setQuestionText(\"\");\n    setQuestionID(questionID + 1);\n    setAnswers([{\n      \"answerID\": 0,\n      \"answerTitle\": \"\",\n      \"correct\": true\n    }, {\n      \"answerID\": 1,\n      \"answerTitle\": \"\",\n      \"correct\": false\n    }, {\n      \"answerID\": 2,\n      \"answerTitle\": \"\",\n      \"correct\": false\n    }]);\n    setAnswerID(answers ? answers[answers.length - 1].id + 1 : 0);\n    setTags(\"\");\n    setAnswersLayout(\"vertical\");\n  };\n\n  const addAnswer = event => {\n    event.preventDefault();\n    let newPossibleAnswers = answers;\n    newPossibleAnswers.push({\n      \"id\": answerID,\n      \"answer\": \"\",\n      correct: false\n    });\n    setAnswers(newPossibleAnswers);\n    setAnswerID(answerID + 1);\n  };\n\n  const removeAnswer = (event, id) => {\n    event.preventDefault();\n    console.log(\"remove answer id \" + id);\n    setAnswers(answers.filter(answer => answer.answerID !== id));\n  };\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const back = () => {\n    history.goBack();\n  };\n\n  const show = () => {};\n\n  const handleTagsChange = newTags => {\n    console.log(newTags);\n    setTags(newTags);\n  };\n\n  const handlePossibleAnswersChange = () => {\n    // console.log(\"possible answers changed\")\n    let correctAnswer_Counter = 0;\n    answers && answers.map(answer => {\n      let radio = document.getElementById(`radio_${answer.answerID}`);\n      radio.checked = answer.correct;\n\n      if (answer.correct === true) {\n        correctAnswer_Counter++;\n      }\n    });\n\n    if (correctAnswer_Counter === 0) {\n      setQuestionType(\"\"); // console.log(\"0 correct answers\")\n    } else if (correctAnswer_Counter === 1) {\n      setQuestionType(questionTypes[0].type); // console.log(\"1 correct answers\")\n    } else {\n      setQuestionType(questionTypes[1].type); // console.log(\"2+ correct answers\")\n    }\n  };\n\n  const handleAnswerClick = id => {\n    console.log(\"handle answer click\");\n    let newPossibleAnswers = answers;\n    newPossibleAnswers.filter(answer => answer.answerID === id).map(answer => {\n      answer.correct = !answer.correct; // console.log(`answer_${id} state - ${answer.correct}`);\n\n      document.getElementById(`label_${id}`).text = answer.answer === \"Correct\" ? \"Incorrect\" : \"Correct\";\n      return answer;\n    });\n    setAnswers(newPossibleAnswers);\n    handlePossibleAnswersChange();\n  };\n\n  const handleLayoutChange = e => {\n    if (e.target.checked === true) {\n      setAnswersLayout(e.target.id);\n    }\n  };\n\n  const handleAnswerChanged = (id, a) => {\n    console.log(\"handle answer changed\");\n    let newPossibleAnswers = answers;\n    newPossibleAnswers.filter(answer => answer.answerID === id).map(answer => {\n      answer.answer = a;\n      return answer;\n    });\n    setAnswers(newPossibleAnswers);\n  };\n\n  const handleSubmit = event => {\n    console.log(\"handle submit\");\n    event.preventDefault();\n    saveQuestion();\n  };\n\n  const saveQuestion = () => {\n    console.log(questionID);\n    fetch('http://localhost:8000/questions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: questionID,\n        tags: tags,\n        last_update: Date.now,\n        type: questionType,\n        title: questionHeader,\n        text: questionText,\n        difficulty: difficulty,\n        answers: answers,\n        answersLayout: answersLayout\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      initialState();\n    }).catch(err => console.log(`error ${err}`));\n  };\n\n  const caseEditQuestion = () => {\n    if (location.state && location.state.question) {\n      let editQuestion = location.state.question;\n      setQuestionID(editQuestion.questionID);\n      setQuestionType(editQuestion.questionType);\n      setQuestionHeader(editQuestion.questionHeader);\n      setQuestionText(editQuestion.questionText);\n      setAnswers(editQuestion.answers);\n      setAnswerID(editQuestion.answers[editQuestion.answers.length - 1].id + 1);\n      setAnswersLayout(editQuestion.answersLayout);\n      setTags(editQuestion.tags);\n    }\n  };\n\n  const fetchQuestions = () => {\n    fetch(\"http://localhost:8000/questions\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setQuestions(data);\n      setQuestionID(questionID ? questionID : data[data.length - 1].questionID + 1);\n      console.log(`Current questionID: ${data[data.length - 1].questionID + 1}`);\n    }).catch(err => console.log('error fetching questions:' + err));\n  };\n\n  const fetchQuestionTypes = () => {\n    fetch(\"http://localhost:8000/questionTypes\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setQuestionTypes(data);\n      setQuestionType(questionType ? questionType : data[0].type);\n    }).catch(err => console.log('error fetching question types:' + err));\n  }; // Meant to set the type according to the amount of the correct answers\n\n\n  useEffect(() => {\n    handlePossibleAnswersChange();\n  }, [answers]); // Meant for setting the title of the document on the first render\n\n  useEffect(() => {\n    if (location.state) setQuestion(location.state.question);\n    document.title = `${question === null ? \"Create\" : \"Edit\"} Question`;\n  }, [location]); // Meant for fetching the necessary information on first render\n\n  useEffect(() => {\n    let isMounted = true; // note mutable flag\n\n    if (isMounted) {\n      // add conditional check\n      fetchQuestions();\n      fetchQuestionTypes();\n    } // Edit question\n\n\n    caseEditQuestion(); // Event listener for enter key press inside form's inputs\n    // const listener = event => {\n    //   if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n    //     console.log(\"Enter key was pressed. Run your function.\");\n    //     handleSubmit(event);\n    //   }\n    // };\n    // document.addEventListener(\"keydown\", listener);\n    // Prevent form submission on enter key press inside inputs\n\n    const listener = e => {\n      if (e.keyIdentifier === 'U+000A' || e.keyIdentifier === 'Enter' || e.keyCode === 13) {\n        if (e.target.nodeName === 'INPUT' && e.target.type !== 'textarea') {\n          e.preventDefault();\n          return false;\n        }\n      }\n    };\n\n    document.addEventListener('keydown', listener, true);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create_edit_question noselect\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page__header\",\n      children: [\" \", question === null ? \"Create\" : \"Edit\", \" Question \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"new_question__form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content__section\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"question__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Field: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  id: \"field__label\",\n                  children: [\" \", field === null ? \"undefined\" : field, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Question type: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 24\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"question_type__select\",\n                  value: questionType,\n                  disabled: true,\n                  children: questionTypes && questionTypes.map(questionType => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: questionType.typeName,\n                    children: [\" \", questionType.typeName, \" \"]\n                  }, questionType.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 24\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Question header: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"asterisk_input\",\n                  value: questionHeader,\n                  type: \"text\",\n                  placeholder: \"Enter your question here\",\n                  onChange: e => setQuestionHeader(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Question additional information: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"asterisk_input\",\n                  value: questionText,\n                  type: \"text\",\n                  placeholder: \"Type something\",\n                  onChange: e => setQuestionText(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"answers__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: answers && answers.map(answer => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", answer.answerID === 0 && /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Possible answers: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 49\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"answer__td\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"\",\n                  onClick: e => removeAnswer(e, answer.answerID),\n                  children: \" X \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: `answer_${answer.answerID}`,\n                  className: \"asterisk_input\",\n                  name: \"answer\",\n                  type: \"text\",\n                  onChange: e => handleAnswerChanged(answer.answerID, e.target.value),\n                  placeholder: `Answer #${answer.answerID}`,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: `radio_${answer.answerID}`,\n                  name: questionTypes ? questionType === questionTypes[0] ? questionType : \"\" : \"default\",\n                  type: \"radio\",\n                  onClick: e => handleAnswerClick(answer.answerID)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  id: `label_${answer.answerID}`,\n                  htmlFor: `answer_${answer.answerID}`,\n                  children: [\"  \", answer.correct === true ? \"Correct\" : \"Incorrect\", \"  \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this)]\n            }, answer.answerID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer_layout__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            name: \"layout__label\",\n            children: \" Answers layout: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"vertical\",\n            type: \"radio\",\n            name: \"answer_layout\",\n            defaultChecked: true,\n            onChange: e => handleLayoutChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), \"    \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"vertical\",\n            children: \"  Vertical   \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 134\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"horizontal\",\n            type: \"radio\",\n            name: \"answer_layout\",\n            onChange: e => handleLayoutChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), \"    \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"horizontal\",\n            children: \"  Horizontal \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 134\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => addAnswer(e),\n            children: \" Add an Answer \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"tags__container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"tags__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Tags: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(TagsInput, {\n                  tags: handleTagsChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"buttons__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"regular__button\",\n          onClick: () => back(),\n          children: [\" \", `<<`, \" Back  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"regular__button\",\n          onClick: () => show(),\n          children: \"  Show         \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"regular__button\",\n          type: \"submit\",\n          children: [\"  Save \", `>>`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateEditQuestion, \"DU2PaLsGdxLRe/GGoJHmAorxN+8=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = CreateEditQuestion;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateEditQuestion\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Admin/MainPage/ManageQuestions/CreateEditQuestion/CreateEditQuestion.js"],"names":["React","useState","useEffect","useHistory","useLocation","TagsInput","styles","CreateEditQuestion","questionTypes","setQuestionTypes","questions","setQuestions","question","setQuestion","field","setField","questionType","setQuestionType","questionHeader","setQuestionHeader","questionText","setQuestionText","questionID","setQuestionID","difficulty","setDifficulty","answers","setAnswers","answerID","setAnswerID","length","id","answersLayout","setAnswersLayout","tags","setTags","initialState","console","log","addAnswer","event","preventDefault","newPossibleAnswers","push","correct","removeAnswer","filter","answer","location","history","back","goBack","show","handleTagsChange","newTags","handlePossibleAnswersChange","correctAnswer_Counter","map","radio","document","getElementById","checked","type","handleAnswerClick","text","handleLayoutChange","e","target","handleAnswerChanged","a","handleSubmit","saveQuestion","fetch","method","headers","body","JSON","stringify","last_update","Date","now","title","then","res","json","data","catch","err","caseEditQuestion","state","editQuestion","fetchQuestions","fetchQuestionTypes","isMounted","listener","keyIdentifier","keyCode","nodeName","addEventListener","removeEventListener","typeName","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect       }  from 'react';\r\nimport        { useHistory, useLocation   }  from 'react-router-dom';\r\nimport        { TagsInput                 }  from '../../../../../Admin/TagsInput/TagsInput';\r\nimport styles                                from './CreateEditQuestion.css';\r\n\r\n  export default function CreateEditQuestion() {\r\n\r\n  // ------------------------ Fetch Info Hooks -----------------------\r\n\r\n  const [ questionTypes,        setQuestionTypes    ]  = useState(null);\r\n  const [ questions,            setQuestions        ]  = useState(null);\r\n\r\n  const [ question,             setQuestion         ]  = useState(null);\r\n  const [ field,                setField            ]  = useState(null);\r\n\r\n  // ------------------------- Content Hooks -------------------------\r\n\r\n  // *Question Table*\r\n  const [ questionType,         setQuestionType     ]  = useState(\"\");\r\n  const [ questionHeader,       setQuestionHeader   ]  = useState(\"\");\r\n  const [ questionText,         setQuestionText     ]  = useState(\"\");\r\n  const [ questionID,           setQuestionID       ]  = useState(0);\r\n  const [ difficulty,           setDifficulty       ]  = useState(\"low\");\r\n\r\n  // *Answers Table*\r\n  const [ answers,              setAnswers          ]  = useState(\r\n    question ? question.answers : [\r\n      { \"answerID\": 0, \"answerTitle\": \"\", \"correct\": false},\r\n      { \"answerID\": 1, \"answerTitle\": \"\", \"correct\": false},\r\n      { \"answerID\": 2, \"answerTitle\": \"\", \"correct\": false}\r\n    ]\r\n  );\r\n  const [ answerID,             setAnswerID         ]  = useState(answers ? answers[answers.length - 1].id + 1 : 0);\r\n  const [ answersLayout,        setAnswersLayout    ]  = useState(\"vertical\");\r\n\r\n  // *Tags Table* \r\n  const [ tags,                 setTags             ]  = useState(question ? question.tags : \"\");\r\n\r\n  // -----------------------------------------------------------------\r\n\r\n  const initialState = () => {\r\n    console.log(\"returning to initial state\");\r\n    setQuestionType(questionTypes ? questionTypes[0] : \"\");\r\n    setQuestionHeader(\"\");\r\n    setQuestionText(\"\");\r\n    setQuestionID(questionID + 1);\r\n\r\n    setAnswers([\r\n      { \"answerID\": 0, \"answerTitle\": \"\", \"correct\": true},\r\n      { \"answerID\": 1, \"answerTitle\": \"\", \"correct\": false},\r\n      { \"answerID\": 2, \"answerTitle\": \"\", \"correct\": false}\r\n    ]);\r\n\r\n    setAnswerID(answers ? answers[answers.length - 1].id + 1: 0);\r\n    setTags(\"\");\r\n    setAnswersLayout(\"vertical\");\r\n  }\r\n  \r\n  const addAnswer = (event) => {  \r\n    event.preventDefault();\r\n    let newPossibleAnswers = answers;\r\n    newPossibleAnswers.push({ \"id\": answerID, \"answer\": \"\", correct: false });\r\n    setAnswers(newPossibleAnswers);\r\n    setAnswerID(answerID + 1);\r\n  }\r\n\r\n  const removeAnswer = (event, id) => { \r\n    event.preventDefault(); \r\n    console.log(\"remove answer id \" + id)\r\n    setAnswers(answers.filter((answer) => answer.answerID !== id));\r\n  }\r\n  \r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const back = () => {\r\n      history.goBack();\r\n  }\r\n\r\n  const show = () => {\r\n    \r\n  }\r\n\r\n  const handleTagsChange = newTags => {\r\n    console.log(newTags);\r\n    setTags(newTags);\r\n  }\r\n\r\n  const handlePossibleAnswersChange = () => {\r\n    // console.log(\"possible answers changed\")\r\n    let correctAnswer_Counter = 0;\r\n    (answers && answers.map((answer) => {\r\n      let radio = document.getElementById(`radio_${answer.answerID}`);\r\n      radio.checked = answer.correct;\r\n      if (answer.correct === true) {\r\n        correctAnswer_Counter++;\r\n      }\r\n    }));\r\n\r\n    if (correctAnswer_Counter === 0) {\r\n      setQuestionType(\"\");\r\n      // console.log(\"0 correct answers\")\r\n    } else if (correctAnswer_Counter === 1) {\r\n      setQuestionType(questionTypes[0].type);\r\n      // console.log(\"1 correct answers\")\r\n    } else {\r\n      setQuestionType(questionTypes[1].type)\r\n      // console.log(\"2+ correct answers\")\r\n    }\r\n  }\r\n\r\n  const handleAnswerClick = (id) => {\r\n    console.log(\"handle answer click\");\r\n    let newPossibleAnswers = answers;\r\n    newPossibleAnswers.filter((answer) => answer.answerID === id).map((answer) => {\r\n      answer.correct = !answer.correct;\r\n      // console.log(`answer_${id} state - ${answer.correct}`);\r\n      document.getElementById(`label_${id}`).text = answer.answer === \"Correct\" ? \"Incorrect\" : \"Correct\";\r\n      return answer;\r\n    });\r\n    setAnswers(newPossibleAnswers);\r\n    handlePossibleAnswersChange();\r\n  }\r\n\r\n  const handleLayoutChange = (e) => {\r\n    if (e.target.checked === true) {\r\n      setAnswersLayout(e.target.id);\r\n    }\r\n  }\r\n\r\n  const handleAnswerChanged = (id, a) => {\r\n    console.log(\"handle answer changed\");\r\n    let newPossibleAnswers = answers;\r\n    newPossibleAnswers.filter((answer) => answer.answerID === id).map((answer) => {\r\n      answer.answer = a;\r\n      return answer;\r\n    });\r\n    setAnswers(newPossibleAnswers);\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    console.log(\"handle submit\");\r\n    event.preventDefault();\r\n    saveQuestion();\r\n  }\r\n\r\n  const saveQuestion = () => {\r\n    console.log(questionID);\r\n\r\n    fetch('http://localhost:8000/questions', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n        id: questionID,\r\n        tags: tags,\r\n        last_update: Date.now,\r\n        type: questionType,\r\n        title: questionHeader,\r\n        text: questionText,\r\n        difficulty: difficulty,\r\n        answers: answers,\r\n        answersLayout: answersLayout\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => { \r\n        console.log(data); \r\n        initialState(); \r\n      })\r\n      .catch((err) => console.log(`error ${err}`))\r\n  }\r\n\r\n  const caseEditQuestion = () => {\r\n    if (location.state && location.state.question) {\r\n      let editQuestion = location.state.question;\r\n\r\n      setQuestionID(editQuestion.questionID);\r\n      setQuestionType(editQuestion.questionType);\r\n      setQuestionHeader(editQuestion.questionHeader);\r\n      setQuestionText(editQuestion.questionText);\r\n      setAnswers(editQuestion.answers);\r\n      setAnswerID(editQuestion.answers[editQuestion.answers.length - 1].id + 1);\r\n      setAnswersLayout(editQuestion.answersLayout);\r\n      setTags(editQuestion.tags);\r\n    }\r\n  }\r\n\r\n  const fetchQuestions = () => {\r\n    fetch(\"http://localhost:8000/questions\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setQuestions(data); \r\n      setQuestionID(questionID ? questionID : data[data.length - 1].questionID + 1); \r\n      console.log(`Current questionID: ${data[data.length - 1].questionID + 1}`); \r\n    })\r\n    .catch((err) => console.log('error fetching questions:' + err))\r\n  }\r\n\r\n  const fetchQuestionTypes = () => {\r\n    fetch(\"http://localhost:8000/questionTypes\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setQuestionTypes(data); \r\n      setQuestionType(questionType ? questionType : data[0].type); \r\n    })\r\n    .catch((err) => console.log('error fetching question types:' + err))\r\n  }\r\n\r\n  // Meant to set the type according to the amount of the correct answers\r\n  useEffect(() => {\r\n    handlePossibleAnswersChange();\r\n  }, [answers])\r\n\r\n  // Meant for setting the title of the document on the first render\r\n  useEffect(() => {\r\n    if (location.state) setQuestion(location.state.question);\r\n    document.title = `${question === null ? \"Create\" : \"Edit\"} Question`;\r\n\r\n  }, [location])\r\n\r\n    // Meant for fetching the necessary information on first render\r\n  useEffect(() => {\r\n    let isMounted = true;           // note mutable flag\r\n\r\n    if (isMounted) {                // add conditional check\r\n      fetchQuestions();\r\n      fetchQuestionTypes();\r\n    }\r\n\r\n    // Edit question\r\n    caseEditQuestion();\r\n\r\n    // Event listener for enter key press inside form's inputs\r\n    // const listener = event => {\r\n    //   if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n    //     console.log(\"Enter key was pressed. Run your function.\");\r\n    //     handleSubmit(event);\r\n    //   }\r\n    // };\r\n    // document.addEventListener(\"keydown\", listener);\r\n\r\n    // Prevent form submission on enter key press inside inputs\r\n    const listener = e => {if(e.keyIdentifier==='U+000A'||e.keyIdentifier==='Enter'||e.keyCode===13){if(e.target.nodeName === 'INPUT' && e.target.type !== 'textarea'){e.preventDefault();return false;}}};\r\n    document.addEventListener('keydown', listener, true);\r\n\r\n    return () => { \r\n      document.removeEventListener(\"keydown\", listener);\r\n      isMounted = false\r\n    }; // cleanup toggles value, if unmounted\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"create_edit_question noselect\">\r\n      <h1 className=\"page__header\"> { question === null ? \"Create\" : \"Edit\" } Question </h1>\r\n      <form className=\"new_question__form\" onSubmit={handleSubmit}>\r\n\r\n        <div className=\"content__section\">\r\n          <table id=\"question__table\">\r\n            <tbody>\r\n              <tr>\r\n                <td> <label> Field: </label> </td>\r\n                <td> <label id=\"field__label\"> { field === null ? \"undefined\" : field } </label> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                  <td> <label> Question type: </label> </td>\r\n                  <td> <select id=\"question_type__select\" value={questionType} disabled>\r\n                          {questionTypes && questionTypes.map((questionType) => (\r\n                            <option key={questionType.id} value={questionType.typeName}> {questionType.typeName} </option>\r\n                          ))}\r\n                        </select> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td> <label> Question header: </label> </td>\r\n                <td> <input className=\"asterisk_input\" value={questionHeader} type=\"text\" placeholder=\"Enter your question here\"  onChange={(e) => setQuestionHeader(e.target.value)} required/> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td> <label> Question additional information: </label> </td>\r\n                <td> <input className=\"asterisk_input\" value={questionText}   type=\"text\" placeholder=\"Type something\"            onChange={(e) => setQuestionText(e.target.value)}    required/> </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div className=\"content__section\">\r\n          <table id=\"answers__table\">\r\n            <tbody>\r\n\r\n              {answers && answers.map((answer) => (\r\n              <tr key={answer.answerID}>\r\n                <td> { answer.answerID === 0 && <label> Possible answers: </label> } </td>\r\n                <td className=\"answer__td\"> \r\n                  <button type=\"\" onClick={ (e) => removeAnswer(e, answer.answerID) }> X </button>\r\n                  <input id={`answer_${answer.answerID}` } className=\"asterisk_input\" name=\"answer\" type=\"text\" onChange={(e) => handleAnswerChanged(answer.answerID, e.target.value)} placeholder={`Answer #${answer.answerID}`} required/> \r\n                  <input id={`radio_${answer.answerID}`  } name={questionTypes ? (questionType === questionTypes[0] ? questionType : \"\") : \"default\"} type=\"radio\" onClick={(e) => handleAnswerClick(answer.answerID)} /> \r\n                  <label id={`label_${answer.answerID}`  } htmlFor={`answer_${answer.answerID}`}   >  {answer.correct === true ? \"Correct\" : \"Incorrect\"}  </label>\r\n                </td>\r\n              </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <div className=\"answer_layout__container\">\r\n            <label name=\"layout__label\"> Answers layout: </label>\r\n            <input id=\"vertical\"    type=\"radio\"  name=\"answer_layout\"  defaultChecked onChange={(e) => handleLayoutChange(e)} />    <label htmlFor=\"vertical\"   >  Vertical   </label>\r\n            <input id=\"horizontal\"  type=\"radio\"  name=\"answer_layout\"                 onChange={(e) => handleLayoutChange(e)} />    <label htmlFor=\"horizontal\" >  Horizontal </label>\r\n            <button onClick={(e) => addAnswer(e)}> Add an Answer </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"tags__container\">\r\n          <table id=\"tags__table\">\r\n            <tbody>\r\n              <tr>\r\n                <td> <label> Tags: </label> </td>\r\n                <td> <TagsInput tags={handleTagsChange}/> </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div id=\"buttons__container\">\r\n          <button className=\"regular__button\" onClick={() => back() }> {`<<` } Back  </button>\r\n          <button className=\"regular__button\" onClick={() => show() }>  Show         </button>\r\n          <button className=\"regular__button\" type=\"submit\"          >  Save {`>>` } </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};"]},"metadata":{},"sourceType":"module"}