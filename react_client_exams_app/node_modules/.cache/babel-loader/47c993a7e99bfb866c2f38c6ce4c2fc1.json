{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\pages\\\\Admin\\\\ManageQuestions\\\\ManageQuestions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from './ManageQuestions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ManageQuestions = ({\n  questions,\n  type\n}) => {\n  _s();\n\n  const [filter, setFilter] = useState(false);\n  const [filterContent, setFilterContent] = useState(\"\");\n  useEffect(() => {\n    document.title = \"Manage Questions\";\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage_questions noselect\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"headers__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Available Questions for \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"type\",\n        children: [\" \", type, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"filter__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"filter_tags__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Filter by tags or content: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"filter__input\",\n          type: \"text\",\n          value: filterContent,\n          onChange: e => {\n            setFilterContent(e.target.value);\n            filterContent === \"\" ? setFilter(false) : setFilter(true);\n          },\n          placeholder: \"Enter a list of keywords separated by commas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"filter__state\",\n          children: [\" Filter is \", filter === false ? \"OFF\" : \"ON\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"amount__filtered\",\n        children: [\" Filtered \", `AMOUNT`, \" of total \", `AMOUNT`, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"table__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"questions__table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" ID \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Question Text and Tags \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Last Update \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Question Type \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" # of Tests \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        type: \"text\",\n        id: \"showing_questions\",\n        children: [\" showing 1-\", `AMOUNT`, \" of filtered Questions \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttons__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Back(),\n        children: [\"  \", `<<`, \" Back         \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: New_Question(),\n        children: [\"  New Question \", `>>`, \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}; // NEED TO CHECK WHY THESE GUYS AUTOMATICALLY START\n\n_s(ManageQuestions, \"AnIijOv0fn4EvGthiT5NajCGK8M=\");\n\n_c = ManageQuestions;\n\nfunction Back() {// window.location.href = history.back;\n}\n\n_c2 = Back;\n\nfunction New_Question() {// window.location.href = \"/new-question\";\n}\n\n_c3 = New_Question;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ManageQuestions\");\n$RefreshReg$(_c2, \"Back\");\n$RefreshReg$(_c3, \"New_Question\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Admin/ManageQuestions/ManageQuestions.js"],"names":["React","useEffect","useState","styles","ManageQuestions","questions","type","filter","setFilter","filterContent","setFilterContent","document","title","e","target","value","Back","New_Question"],"mappings":"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","sourcesContent":["import React, { useEffect, useState }   from 'react';\r\nimport styles                           from './ManageQuestions.css';\r\n\r\nexport const ManageQuestions = ({\r\n    questions, \r\n    type, \r\n}) => {\r\n\r\n    const [filter, setFilter] = useState(false);\r\n    const [filterContent, setFilterContent] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        document.title = \"Manage Questions\";\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"manage_questions noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1> Available Questions for </h1>\r\n                <h1 id=\"type\"> {type} </h1>\r\n            </div>\r\n            <div id=\"filter__container\">\r\n                <div id=\"filter_tags__container\">    \r\n                    <label> Filter by tags or content: </label>\r\n                    <input id=\"filter__input\" type=\"text\"\r\n                        value={filterContent}\r\n                        onChange={(e) => { setFilterContent(e.target.value); filterContent === \"\" ? setFilter(false) : setFilter(true)} }\r\n                        placeholder=\"Enter a list of keywords separated by commas\"/>\r\n                    <label id=\"filter__state\"> Filter is {filter === false ? \"OFF\" : \"ON\"} </label>\r\n                </div>\r\n                <label id=\"amount__filtered\"> Filtered {`AMOUNT`} of total {`AMOUNT`} </label>\r\n            </div>\r\n            <div id=\"table__container\">\r\n                <table id=\"questions__table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th> ID </th>\r\n                            <th> Question Text and Tags </th>\r\n                            <th> Last Update </th>\r\n                            <th> Question Type </th>\r\n                            <th> # of Tests </th>\r\n                            <th>  </th>\r\n                        </tr>\r\n\r\n                        {/* {questions.map((question) => (\r\n                        <tr key=\"\">\r\n                            <td> {ID} </td>\r\n                            <td> {TnT} </td>\r\n                            <td> {update} </td>\r\n                            <td> {type} </td>\r\n                            <td> {amount} </td>\r\n                            <td>\r\n                                <button></button>\r\n                            </td>\r\n                        </tr>\r\n                        ))} */}\r\n                    </tbody>\r\n                </table>\r\n                \r\n                <label type=\"text\" id=\"showing_questions\"> showing 1-{`AMOUNT`} of filtered Questions </label>\r\n            </div>\r\n\r\n            <div id=\"buttons__container\">\r\n                <button onClick={       Back()      }>  {`<<` } Back         </button>\r\n                <button onClick={   New_Question()  }>  New Question {`>>`}  </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\n// NEED TO CHECK WHY THESE GUYS AUTOMATICALLY START\r\n\r\nfunction Back() {\r\n    // window.location.href = history.back;\r\n}\r\n\r\nfunction New_Question() {\r\n    // window.location.href = \"/new-question\";\r\n}"]},"metadata":{},"sourceType":"module"}