{"ast":null,"code":"import _slicedToArray from\"C:/Users/ofeki/OneDrive/\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4/ExamApp design ver/ExamsApp/react_client_exams_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useHistory,useLocation}from'';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Test(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),studentTests=_useState2[0],setStudentTests=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),questions=_useState4[0],setQuestions=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),test=_useState6[0],setTest=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),studentID=_useState8[0],setStudentID=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),fullName=_useState10[0],setFullName=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),grade=_useState12[0],setGrade=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),status=_useState14[0],setStatus=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),summary=_useState16[0],setSummary=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),lastPage=_useState18[0],setLastPage=_useState18[1];var _useState19=useState(0),_useState20=_slicedToArray(_useState19,2),questionID=_useState20[0],setQuestionID=_useState20[1];var _useState21=useState([]),_useState22=_slicedToArray(_useState21,2),studentQuestions=_useState22[0],setStudentQuestions=_useState22[1];var location=useLocation();var history=useHistory();var calcGrade=function calcGrade(){var grade=0;var numCorrectly=0;questions.map(function(question){studentQuestions.map(function(studentQuestion){if(question.questionID===studentQuestion.questionID){question.answers.map(function(answer){studentQuestion.answers.map(function(studentAnswer){if(answer.answerID===studentAnswer.answerID&&answer.answerTitle===studentAnswer.answerTitle){console.log(\"answer is correct\");numCorrectly++;}});});}});});grade=Math.round(questions.length/numCorrectly*100);setGrade(grade);if(grade>=test.passingGrade)setStatus(\"Passed\");else setStatus(\"Failed\");if(numCorrectly>0)setSummary(\"You answered \".concat(numCorrectly,\" questions correctly, out of \").concat(questions.length,\" questions in total.\"));else setSummary(\"Out of \".concat(questions.length,\" questions, You answered \").concat(numCorrectly,\" correctly..\"));};var handleQuestions=function handleQuestions(){};var handleSubmit=function handleSubmit(event){console.log(\"handle submit\");event.preventDefault();if(submitTest()){history.push({pathname:\"/student/review-test\",// search: '?update=true',  // query string\nstate:{// location state\n// update: true, \nstudent:{studentID:studentID,fullName:fullName},grade:grade,status:status,summary:summary,passingGrade:test.passingGrade,questions:studentQuestions}});}};var submitTest=function submitTest(){console.log(test.testID);calcGrade();fetch('http://localhost:8000/studentTests',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({id:studentTests[studentTests.length-1].stID+1,testID:test.testID,studentID:studentID,studentName:fullName,grade:grade,questions:studentQuestions,submitted:Date.now()})}).then(function(res){return res.json();}).then(function(data){console.log(data);return true;}).catch(function(err){console.log(\"error \".concat(err));return false;});};var fetchQuestions=function fetchQuestions(){fetch(\"http://localhost:8000/questions\",{method:'GET'}).then(function(res){return res.json();}).then(function(data){studentTests.map(function(studentTest,i){// if (studentTest.questions[i].questionID === data[i].questionID) {\n//     if ()\n// } \n});}).catch(function(err){return console.log('error fetching questions:'+err);});};var fetchStudentTests=function fetchStudentTests(){fetch(\"http://localhost:8000/studentTests\",{method:'GET'}).then(function(res){return res.json();}).then(function(data){return setStudentTests(data);}).catch(function(err){return console.log('error fetching student tests:'+err);});};// Meant for fetching the necessary information on first render\nuseEffect(function(){document.title=\"State Test\";if(location.state){if(location.state.test){setTest(location.state.test);if(location.state.test.questions){setStudentQuestions(location.state.test.questions);}}if(location.state.student){setStudentID(location.state.studentID);setFullName(location.state.fullName);}}},[]);useEffect(function(){var isMounted=true;// note mutable flag\nif(isMounted){// add conditional check \nfetchStudentTests();fetchQuestions();}return function(){isMounted=false;};// cleanup toggles value, if unmounted\n},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"start_page noselect\",children:[/*#__PURE__*/_jsx(\"label\",{children:\" Please complete the following form to begin: \"}),/*#__PURE__*/_jsx(\"form\",{id:\"test__form\",onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(\"div\",{id:\"test__container\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"test_questions__container\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"test_buttons__container\",children:[/*#__PURE__*/_jsxs(\"button\",{id:\"previous_question\",type:\"button\",onClick:handleQuestions,children:[\" \",\"<<\",\" Previous Question \"]}),/*#__PURE__*/_jsxs(\"button\",{id:\"next_question\",type:\"button\",onClick:handleQuestions,visibility:lastPage?\"hidden\":\"visible\",children:[\" Next Question \",\">>\"]}),/*#__PURE__*/_jsx(\"button\",{id:\"submit__button\",type:\"submit\",visibility:lastPage?\"visible\":\"hidden\",children:\" Submit \"})]})]})})]});};","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Student/Test/Test.js"],"names":["React","useEffect","useState","useHistory","useLocation","Test","studentTests","setStudentTests","questions","setQuestions","test","setTest","studentID","setStudentID","fullName","setFullName","grade","setGrade","status","setStatus","summary","setSummary","lastPage","setLastPage","questionID","setQuestionID","studentQuestions","setStudentQuestions","location","history","calcGrade","numCorrectly","map","question","studentQuestion","answers","answer","studentAnswer","answerID","answerTitle","console","log","Math","round","length","passingGrade","handleQuestions","handleSubmit","event","preventDefault","submitTest","push","pathname","state","student","testID","fetch","method","headers","body","JSON","stringify","id","stID","studentName","submitted","Date","now","then","res","json","data","catch","err","fetchQuestions","studentTest","i","fetchStudentTests","document","title","isMounted"],"mappings":"qQAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,UAAT,CAAqBC,WAArB,KAAwC,EAAxC,C,wFAEA,cAAe,SAASC,CAAAA,IAAT,EAAgB,CAE3B,cAAoDH,QAAQ,CAAC,IAAD,CAA5D,wCAAQI,YAAR,eAA4BC,eAA5B,eACA,eAAoDL,QAAQ,CAAC,IAAD,CAA5D,yCAAQM,SAAR,eAA4BC,YAA5B,eAEA,eAAoDP,QAAQ,CAAC,EAAD,CAA5D,yCAAQQ,IAAR,eAA4BC,OAA5B,eACA,eAAoDT,QAAQ,CAAC,EAAD,CAA5D,yCAAQU,SAAR,eAA4BC,YAA5B,eACA,eAAoDX,QAAQ,CAAC,EAAD,CAA5D,0CAAQY,QAAR,gBAA4BC,WAA5B,gBAEA,gBAAoDb,QAAQ,CAAC,EAAD,CAA5D,2CAAQc,KAAR,gBAA4BC,QAA5B,gBACA,gBAAoDf,QAAQ,CAAC,EAAD,CAA5D,2CAAQgB,MAAR,gBAA4BC,SAA5B,gBACA,gBAAoDjB,QAAQ,CAAC,EAAD,CAA5D,2CAAQkB,OAAR,gBAA4BC,UAA5B,gBAEA,gBAAoDnB,QAAQ,CAAC,KAAD,CAA5D,2CAAQoB,QAAR,gBAA4BC,WAA5B,gBACA,gBAAoDrB,QAAQ,CAAC,CAAD,CAA5D,2CAAQsB,UAAR,gBAA4BC,aAA5B,gBACA,gBAAoDvB,QAAQ,CAAC,EAAD,CAA5D,2CAAQwB,gBAAR,gBAA4BC,mBAA5B,gBAEA,GAAMC,CAAAA,QAAQ,CAAGxB,WAAW,EAA5B,CACA,GAAMyB,CAAAA,OAAO,CAAG1B,UAAU,EAA1B,CAEA,GAAM2B,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpB,GAAId,CAAAA,KAAK,CAAG,CAAZ,CACA,GAAIe,CAAAA,YAAY,CAAG,CAAnB,CAEAvB,SAAS,CAACwB,GAAV,CAAc,SAACC,QAAD,CAAc,CACxBP,gBAAgB,CAACM,GAAjB,CAAqB,SAACE,eAAD,CAAqB,CACtC,GAAID,QAAQ,CAACT,UAAT,GAAwBU,eAAe,CAACV,UAA5C,CAAwD,CAEpDS,QAAQ,CAACE,OAAT,CAAiBH,GAAjB,CAAqB,SAACI,MAAD,CAAY,CAC7BF,eAAe,CAACC,OAAhB,CAAwBH,GAAxB,CAA4B,SAACK,aAAD,CAAmB,CAC3C,GAAID,MAAM,CAACE,QAAP,GAAoBD,aAAa,CAACC,QAAlC,EAA8CF,MAAM,CAACG,WAAP,GAAuBF,aAAa,CAACE,WAAvF,CAAoG,CAEhGC,OAAO,CAACC,GAAR,CAAY,mBAAZ,EACAV,YAAY,GACf,CACJ,CAND,EAOH,CARD,EASH,CACJ,CAbD,EAcH,CAfD,EAiBAf,KAAK,CAAG0B,IAAI,CAACC,KAAL,CAAYnC,SAAS,CAACoC,MAAV,CAAmBb,YAApB,CAAoC,GAA/C,CAAR,CACAd,QAAQ,CAACD,KAAD,CAAR,CAEA,GAAIA,KAAK,EAAIN,IAAI,CAACmC,YAAlB,CAAgC1B,SAAS,CAAC,QAAD,CAAT,CAAhC,IACKA,CAAAA,SAAS,CAAC,QAAD,CAAT,CAEL,GAAIY,YAAY,CAAG,CAAnB,CAAsBV,UAAU,wBAAiBU,YAAjB,yCAA6DvB,SAAS,CAACoC,MAAvE,yBAAV,CAAtB,IACKvB,CAAAA,UAAU,kBAAWb,SAAS,CAACoC,MAArB,qCAAuDb,YAAvD,iBAAV,CACR,CA7BD,CA+BA,GAAMe,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAE7B,CAFD,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC5BR,OAAO,CAACC,GAAR,CAAY,eAAZ,EACAO,KAAK,CAACC,cAAN,GAEA,GAAIC,UAAU,EAAd,CAAkB,CAEdrB,OAAO,CAACsB,IAAR,CAAa,CACTC,QAAQ,uBADC,CAET;AACAC,KAAK,CAAE,CAAG;AACN;AACAC,OAAO,CAAE,CACL1C,SAAS,CAAEA,SADN,CAELE,QAAQ,CAAEA,QAFL,CAFN,CAMHE,KAAK,CAAEA,KANJ,CAOHE,MAAM,CAAEA,MAPL,CAQHE,OAAO,CAAEA,OARN,CASHyB,YAAY,CAAEnC,IAAI,CAACmC,YAThB,CAUHrC,SAAS,CAAEkB,gBAVR,CAHE,CAAb,EAgBH,CAEJ,CAxBD,CA0BA,GAAMwB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrBV,OAAO,CAACC,GAAR,CAAY/B,IAAI,CAAC6C,MAAjB,EAEAzB,SAAS,GAET0B,KAAK,CAAC,oCAAD,CAAuC,CACxCC,MAAM,CAAE,MADgC,CAExCC,OAAO,CAAE,CACL,eAAgB,kBADX,CAF+B,CAKxCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBC,EAAE,CAAExD,YAAY,CAACA,YAAY,CAACsC,MAAb,CAAsB,CAAvB,CAAZ,CAAsCmB,IAAtC,CAA6C,CADhC,CAEjBR,MAAM,CAAE7C,IAAI,CAAC6C,MAFI,CAGjB3C,SAAS,CAAEA,SAHM,CAIjBoD,WAAW,CAAElD,QAJI,CAKjBE,KAAK,CAAEA,KALU,CAMjBR,SAAS,CAAEkB,gBANM,CAOjBuC,SAAS,CAAEC,IAAI,CAACC,GAAL,EAPM,CAAf,CALkC,CAAvC,CAAL,CAeKC,IAfL,CAeU,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAfV,EAgBKF,IAhBL,CAgBU,SAACG,IAAD,CAAU,CACZ/B,OAAO,CAACC,GAAR,CAAY8B,IAAZ,EACA,MAAO,KAAP,CACH,CAnBL,EAoBKC,KApBL,CAoBW,SAACC,GAAD,CAAS,CACZjC,OAAO,CAACC,GAAR,iBAAqBgC,GAArB,GACA,MAAO,MAAP,CACH,CAvBL,EAwBH,CA7BD,CA+BA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzBlB,KAAK,CAAC,iCAAD,CAAoC,CACrCC,MAAM,CAAE,KAD6B,CAApC,CAAL,CAGKW,IAHL,CAGU,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAHV,EAIKF,IAJL,CAIU,SAACG,IAAD,CAAU,CACZjE,YAAY,CAAC0B,GAAb,CAAiB,SAAC2C,WAAD,CAAcC,CAAd,CAAoB,CACjC;AACA;AACA;AACH,CAJD,EAKH,CAVL,EAWKJ,KAXL,CAWW,SAACC,GAAD,QAASjC,CAAAA,OAAO,CAACC,GAAR,CAAY,4BAA8BgC,GAA1C,CAAT,EAXX,EAYH,CAbD,CAeA,GAAMI,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC5BrB,KAAK,CAAC,oCAAD,CAAuC,CACxCC,MAAM,CAAE,KADgC,CAAvC,CAAL,CAGKW,IAHL,CAGU,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAHV,EAIKF,IAJL,CAIU,SAACG,IAAD,QAAUhE,CAAAA,eAAe,CAACgE,IAAD,CAAzB,EAJV,EAKKC,KALL,CAKW,SAACC,GAAD,QAASjC,CAAAA,OAAO,CAACC,GAAR,CAAY,gCAAkCgC,GAA9C,CAAT,EALX,EAMH,CAPD,CASA;AACAxE,SAAS,CAAC,UAAM,CACZ6E,QAAQ,CAACC,KAAT,CAAiB,YAAjB,CAEA,GAAInD,QAAQ,CAACyB,KAAb,CAAoB,CAChB,GAAIzB,QAAQ,CAACyB,KAAT,CAAe3C,IAAnB,CAAyB,CACrBC,OAAO,CAACiB,QAAQ,CAACyB,KAAT,CAAe3C,IAAhB,CAAP,CAEA,GAAIkB,QAAQ,CAACyB,KAAT,CAAe3C,IAAf,CAAoBF,SAAxB,CAAmC,CAC/BmB,mBAAmB,CAACC,QAAQ,CAACyB,KAAT,CAAe3C,IAAf,CAAoBF,SAArB,CAAnB,CACH,CACJ,CACD,GAAIoB,QAAQ,CAACyB,KAAT,CAAeC,OAAnB,CAA4B,CACxBzC,YAAY,CAACe,QAAQ,CAACyB,KAAT,CAAezC,SAAhB,CAAZ,CACAG,WAAW,CAACa,QAAQ,CAACyB,KAAT,CAAevC,QAAhB,CAAX,CACH,CACJ,CACJ,CAhBQ,CAgBN,EAhBM,CAAT,CAmBAb,SAAS,CAAC,UAAM,CACZ,GAAI+E,CAAAA,SAAS,CAAG,IAAhB,CAAgC;AAEhC,GAAIA,SAAJ,CAAe,CAAiB;AAC5BH,iBAAiB,GACjBH,cAAc,GACjB,CAED,MAAO,WAAM,CAAEM,SAAS,CAAG,KAAZ,CAAmB,CAAlC,CAAoC;AACvC,CATQ,CASN,EATM,CAAT,CAWA,mBACI,aAAK,SAAS,CAAC,qBAAf,wBACI,yEADJ,cAEI,aAAM,EAAE,CAAC,YAAT,CAAsB,QAAQ,CAAEjC,YAAhC,uBACI,aAAK,EAAE,CAAC,iBAAR,wBACI,YAAK,EAAE,CAAC,2BAAR,EADJ,cAKI,aAAK,EAAE,CAAC,yBAAR,wBACI,gBAAQ,EAAE,CAAC,mBAAX,CAA+B,IAAI,CAAC,QAApC,CAA6C,OAAO,CAAED,eAAtD,4CADJ,cAEI,gBAAQ,EAAE,CAAC,eAAX,CAA2B,IAAI,CAAC,QAAhC,CAAyC,OAAO,CAAEA,eAAlD,CAAmE,UAAU,CAAExB,QAAQ,CAAG,QAAH,CAAc,SAArG,oCAFJ,cAGI,eAAQ,EAAE,CAAC,gBAAX,CAA4B,IAAI,CAAC,QAAjC,CAA0C,UAAU,CAAEA,QAAQ,CAAG,SAAH,CAAe,QAA7E,sBAHJ,GALJ,GADJ,EAFJ,GADJ,CAkBH","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from ''\r\n\r\nexport default function Test() {\r\n\r\n    const [ studentTests,       setStudentTests     ] = useState(null);\r\n    const [ questions,          setQuestions        ] = useState(null);\r\n    \r\n    const [ test,               setTest             ] = useState(\"\");\r\n    const [ studentID,          setStudentID        ] = useState(\"\");\r\n    const [ fullName,           setFullName         ] = useState(\"\");\r\n    \r\n    const [ grade,              setGrade            ] = useState(\"\");\r\n    const [ status,             setStatus           ] = useState(\"\");\r\n    const [ summary,            setSummary          ] = useState(\"\");\r\n    \r\n    const [ lastPage,           setLastPage         ] = useState(false);\r\n    const [ questionID,         setQuestionID       ] = useState(0);\r\n    const [ studentQuestions,   setStudentQuestions ] = useState([]);\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const calcGrade = () => {\r\n        let grade = 0;\r\n        let numCorrectly = 0;\r\n\r\n        questions.map((question) => {\r\n            studentQuestions.map((studentQuestion) => {\r\n                if (question.questionID === studentQuestion.questionID) {\r\n\r\n                    question.answers.map((answer) => {\r\n                        studentQuestion.answers.map((studentAnswer) => {\r\n                            if (answer.answerID === studentAnswer.answerID && answer.answerTitle === studentAnswer.answerTitle) {\r\n\r\n                                console.log(\"answer is correct\");\r\n                                numCorrectly++;\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        })\r\n\r\n        grade = Math.round((questions.length / numCorrectly) * 100);\r\n        setGrade(grade);\r\n\r\n        if (grade >= test.passingGrade) setStatus(\"Passed\");\r\n        else setStatus(\"Failed\");\r\n\r\n        if (numCorrectly > 0) setSummary(`You answered ${numCorrectly} questions correctly, out of ${questions.length} questions in total.`);\r\n        else setSummary(`Out of ${questions.length} questions, You answered ${numCorrectly} correctly..`);\r\n    }\r\n\r\n    const handleQuestions = () => {\r\n\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        console.log(\"handle submit\");\r\n        event.preventDefault();\r\n\r\n        if (submitTest()) {\r\n\r\n            history.push({\r\n                pathname: `/student/review-test`,\r\n                // search: '?update=true',  // query string\r\n                state: {  // location state\r\n                    // update: true, \r\n                    student: {\r\n                        studentID: studentID,\r\n                        fullName: fullName\r\n                    },\r\n                    grade: grade,\r\n                    status: status,\r\n                    summary: summary,\r\n                    passingGrade: test.passingGrade,\r\n                    questions: studentQuestions\r\n                },\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    const submitTest = () => {\r\n        console.log(test.testID);\r\n\r\n        calcGrade();\r\n\r\n        fetch('http://localhost:8000/studentTests', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                id: studentTests[studentTests.length - 1].stID + 1,\r\n                testID: test.testID,\r\n                studentID: studentID,\r\n                studentName: fullName,\r\n                grade: grade,\r\n                questions: studentQuestions,\r\n                submitted: Date.now()\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n                return true;\r\n            })\r\n            .catch((err) => {\r\n                console.log(`error ${err}`)\r\n                return false;\r\n            });\r\n    }\r\n\r\n    const fetchQuestions = () => {\r\n        fetch(\"http://localhost:8000/questions\", {\r\n            method: 'GET',\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                studentTests.map((studentTest, i) => {\r\n                    // if (studentTest.questions[i].questionID === data[i].questionID) {\r\n                    //     if ()\r\n                    // } \r\n                })\r\n            })\r\n            .catch((err) => console.log('error fetching questions:' + err))\r\n    }\r\n\r\n    const fetchStudentTests = () => {\r\n        fetch(\"http://localhost:8000/studentTests\", {\r\n            method: 'GET',\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => setStudentTests(data))\r\n            .catch((err) => console.log('error fetching student tests:' + err))\r\n    }\r\n\r\n    // Meant for fetching the necessary information on first render\r\n    useEffect(() => {\r\n        document.title = \"State Test\";\r\n\r\n        if (location.state) {\r\n            if (location.state.test) {\r\n                setTest(location.state.test);\r\n\r\n                if (location.state.test.questions) {\r\n                    setStudentQuestions(location.state.test.questions);\r\n                }\r\n            }\r\n            if (location.state.student) {\r\n                setStudentID(location.state.studentID);\r\n                setFullName(location.state.fullName);\r\n            }\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n\r\n        if (isMounted) {                // add conditional check \r\n            fetchStudentTests();\r\n            fetchQuestions();\r\n        }\r\n\r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"start_page noselect\">\r\n            <label> Please complete the following form to begin: </label>\r\n            <form id=\"test__form\" onSubmit={handleSubmit}>\r\n                <div id=\"test__container\">\r\n                    <div id=\"test_questions__container\">\r\n\r\n                    </div>\r\n\r\n                    <div id=\"test_buttons__container\">\r\n                        <button id=\"previous_question\" type=\"button\" onClick={handleQuestions}> {`<<`} Previous Question </button>\r\n                        <button id=\"next_question\" type=\"button\" onClick={handleQuestions} visibility={lastPage ? \"hidden\" : \"visible\"}> Next Question {`>>`}</button>\r\n                        <button id=\"submit__button\" type=\"submit\" visibility={lastPage ? \"visible\" : \"hidden\"}> Submit </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}