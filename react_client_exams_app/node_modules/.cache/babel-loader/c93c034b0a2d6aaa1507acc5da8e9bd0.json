{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\pages\\\\Admin\\\\MainPage\\\\ReportByRespondentName\\\\ReportByRespondentName.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { filter } from 'minimatch';\nimport { useHistory } from 'react-router-dom';\nimport styles from './ReportByRespondentName.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReportByRespondentName() {\n  _s();\n\n  // ------------------------ Fetch Info Hooks -----------------------\n  const [students, setStudents] = useState(null);\n  const [studentTests, setStudentTests] = useState(null);\n  const [tests, setTests] = useState(null); // ------------------------- Content Hooks -------------------------\n\n  const [filterContent, setFilterContent] = useState(\"\");\n  const [respondentName, setRespondentName] = useState(\"\");\n  const [respondentID, setRespondentID] = useState(null);\n\n  const handleRespondentClick = (name, id) => {\n    console.log(\"handle respondent click\");\n    setRespondentName(name);\n    setRespondentID(id);\n  }; // ?????????????????????????????\n\n\n  const calcAverageGrade = () => {\n    const tests = [];\n\n    if (studentTests !== null && respondentID !== 0) {\n      studentTests.filter(studentTest => studentTest.studentID === respondentID).map(studentTest => tests.push(studentTest));\n      console.log(tests);\n    }\n  };\n\n  const history = useHistory();\n\n  const Back = () => {\n    history.goBack();\n  };\n\n  const fetchStudents = () => {\n    fetch(\"http://localhost:8000/students\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => setStudents(data)).catch(err => console.log('error fetching students:' + err));\n  };\n\n  const fetchStudentTests = () => {\n    fetch(\"http://localhost:8000/studentTests\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => setStudentTests(data)).catch(err => console.log('error fetching student tests:' + err));\n  };\n\n  const fetchTests = () => {\n    fetch(\"http://localhost:8000/tests\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => setTests(data)).catch(err => console.log('error tests:' + err));\n  };\n\n  useEffect(() => {\n    document.title = \"Report by Name\";\n  }, []);\n  useEffect(() => {\n    let isMounted = true; // note mutable flag\n\n    if (isMounted) {\n      // add conditional check \n      fetchStudents();\n      fetchStudentTests();\n    }\n\n    calcAverageGrade();\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"report_by_name noselect\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"headers__container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Report by Respondent Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"content__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"respondent__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Find a respondent \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" To find a respondent, start typing a name below, \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" then select a respondent from the list that will appear. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"filter_name__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Respondent's name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"filter__input\",\n            type: \"text\",\n            value: filterContent,\n            placeholder: \"Enter a name\",\n            onChange: e => setFilterContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"respondents__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"header_row border_bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" ID             \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Respondent     \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Email          \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Last Activity  \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), students && students.filter(student => student.fullName.includes(filterContent)).map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n              onClick: () => handleRespondentClick(student.fullName, student.studentID),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", student.studentID, \"        \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", student.fullName, \"         \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", student.email, \"            \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", student.lastActivity, \"     \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this)]\n            }, student.studentID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"activity_report__container\",\n        className: respondentID === null ? \"hidden\" : \"visible\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\" Activity Report for: \", respondentName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"above_activity__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            type: \"text\",\n            id: \"explanation\",\n            children: \"    Click a test to show its results           \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            type: \"text\",\n            id: \"average_grade\",\n            children: [\"  Average grade for a test: \", \"               \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"activity_report__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"header_row border_bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Instance       \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Test ID        \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Test Name      \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Grade          \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Time Submitted \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), studentTests && studentTests.filter(studentTest => studentTest.studentID === respondentID).map(studentTest => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", studentTest.stID, \"                 \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", studentTest.testID, \"               \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this), tests && tests.filter(test => test.testID === studentTest.testID).map(test => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", console.log(test.testName), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 117\n              }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", studentTest.testName, \"             \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", studentTest.grade, \"                \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", studentTest.submitted, \"            \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this)]\n            }, studentTest.studentID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"buttons__container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"regular__button\",\n          onClick: () => Back(),\n          children: [\" \", `<<`, \" Back \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReportByRespondentName, \"w/rsqsvwQ7mBGduRtx/ZsKwSWyU=\", false, function () {\n  return [useHistory];\n});\n\n_c = ReportByRespondentName;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportByRespondentName\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Admin/MainPage/ReportByRespondentName/ReportByRespondentName.js"],"names":["React","useEffect","useState","filter","useHistory","styles","ReportByRespondentName","students","setStudents","studentTests","setStudentTests","tests","setTests","filterContent","setFilterContent","respondentName","setRespondentName","respondentID","setRespondentID","handleRespondentClick","name","id","console","log","calcAverageGrade","studentTest","studentID","map","push","history","Back","goBack","fetchStudents","fetch","method","then","res","json","data","catch","err","fetchStudentTests","fetchTests","document","title","isMounted","e","target","value","student","fullName","includes","email","lastActivity","stID","testID","test","testName","grade","submitted"],"mappings":"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","sourcesContent":["import React, { useEffect, useState }   from 'react';\r\nimport        { filter }                from 'minimatch';\r\nimport        { useHistory }            from 'react-router-dom';\r\nimport styles                           from './ReportByRespondentName.css';\r\n\r\nexport default function ReportByRespondentName() {\r\n    \r\n    // ------------------------ Fetch Info Hooks -----------------------\r\n    \r\n    const [ students,            setStudents         ]       = useState(null); \r\n    const [ studentTests,        setStudentTests     ]       = useState(null); \r\n    const [ tests,               setTests            ]       = useState(null); \r\n\r\n    // ------------------------- Content Hooks -------------------------\r\n\r\n    const [ filterContent,       setFilterContent    ]       = useState(\"\");\r\n    const [ respondentName,      setRespondentName   ]       = useState(\"\");\r\n    const [ respondentID,        setRespondentID     ]       = useState(null);\r\n\r\n    const handleRespondentClick = (name, id) => {\r\n        console.log(\"handle respondent click\")\r\n        setRespondentName(name);\r\n        setRespondentID(id);\r\n    }\r\n\r\n\r\n    // ?????????????????????????????\r\n    const calcAverageGrade = () => {\r\n        const tests = [];\r\n        if (studentTests !== null && respondentID !== 0) {\r\n            studentTests.filter((studentTest) => studentTest.studentID === respondentID).map((studentTest) =>\r\n                tests.push(studentTest)\r\n            );\r\n            console.log(tests);\r\n        }\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const Back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const fetchStudents = () => {\r\n        fetch(\"http://localhost:8000/students\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => setStudents(data))\r\n        .catch((err) => console.log('error fetching students:' + err))\r\n    }\r\n\r\n      const fetchStudentTests = () => {\r\n        fetch(\"http://localhost:8000/studentTests\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => setStudentTests(data))\r\n        .catch((err) => console.log('error fetching student tests:' + err))\r\n    }\r\n    \r\n    const fetchTests = () => {\r\n        fetch(\"http://localhost:8000/tests\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => setTests(data))\r\n        .catch((err) => console.log('error tests:' + err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = \"Report by Name\";\r\n    }, [])\r\n    \r\n\r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n\r\n        if (isMounted) {                // add conditional check \r\n            fetchStudents();\r\n            fetchStudentTests();\r\n        }\r\n\r\n        calcAverageGrade();\r\n\r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"report_by_name noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1> Report by Respondent Name </h1>\r\n            </div>\r\n\r\n            <div id=\"content__container\">\r\n                <div id=\"respondent__container\">\r\n                    <h2> Find a respondent </h2>\r\n                    <p> To find a respondent, start typing a name below, </p>\r\n                    <p> then select a respondent from the list that will appear. </p>\r\n                    <div id=\"filter_name__container\">    \r\n                        <label> Respondent's name: </label>\r\n                        <input id=\"filter__input\" type='text' value={filterContent} placeholder=\"Enter a name\" onChange={(e) => setFilterContent(e.target.value) } />\r\n                    </div>\r\n\r\n                    <table id=\"respondents__table\">\r\n                        <tbody>\r\n                            <tr className=\"header_row border_bottom\">\r\n                                <th> ID             </th>\r\n                                <th> Respondent     </th>\r\n                                <th> Email          </th>\r\n                                <th> Last Activity  </th>\r\n                            </tr>\r\n\r\n                            {students && students.filter((student) => student.fullName.includes(filterContent)).map((student) => (\r\n                            <tr key={student.studentID} onClick={() => handleRespondentClick(student.fullName, student.studentID)}>\r\n                                <td> {student.studentID}        </td>\r\n                                <td> {student.fullName}         </td>\r\n                                <td> {student.email}            </td>\r\n                                <td> {student.lastActivity}     </td>\r\n                            </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div id=\"activity_report__container\" className={respondentID === null ? \"hidden\" : \"visible\"}>\r\n                    <h2> Activity Report for: {respondentName} </h2>\r\n                    <div id=\"above_activity__container\">\r\n                        <label type=\"text\" id=\"explanation\">    Click a test to show its results           </label>\r\n                        <label type=\"text\" id=\"average_grade\">  Average grade for a test: {}               </label>\r\n                    </div>\r\n\r\n                    <table id=\"activity_report__table\">\r\n                        <tbody>\r\n                            <tr className=\"header_row border_bottom\">\r\n                                <th> Instance       </th>\r\n                                <th> Test ID        </th>\r\n                                <th> Test Name      </th>\r\n                                <th> Grade          </th>\r\n                                <th> Time Submitted </th>\r\n                            </tr>\r\n\r\n                            {studentTests && studentTests.filter((studentTest) => studentTest.studentID === respondentID).map((studentTest) => (\r\n                            <tr key={studentTest.studentID}>\r\n                                <td> {studentTest.stID}                 </td>\r\n                                <td> {studentTest.testID}               </td>\r\n\r\n                                { tests && tests.filter((test) => test.testID === studentTest.testID).map((test) => <td> {console.log(test.testName)} </td>) }\r\n                                <td> {studentTest.testName}             </td>\r\n                                <td> {studentTest.grade}                </td>\r\n                                <td> {studentTest.submitted}            </td>\r\n                            </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div id=\"buttons__container\">\r\n                        <button className=\"regular__button\" onClick={() => Back() }> {`<<` } Back </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}