{"ast":null,"code":"import _slicedToArray from\"C:/Users/ofeki/OneDrive/\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4/ExamApp design ver/ExamsApp/react_client_exams_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Button}from'../../../../../shared/Button/Button';import{HashLink as Link}from'react-router-hash-link';import{useHistory}from'react-router-dom';import styles from'./CreateEditTest.css';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export var CreateEditTest=function CreateEditTest(_ref){var field=_ref.field,test=_ref.test;// ----------------------------- Fetch Info Hooks -----------------------------\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),testTypes=_useState2[0],setTestTypes=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),certificateTemplates=_useState4[0],setCertificateTemplates=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),languages=_useState6[0],setLanguages=_useState6[1];// ----------------------------- Top Content Hooks -----------------------------\n// *General Details Table*\nvar _useState7=useState(test?test.language:\"\"),_useState8=_slicedToArray(_useState7,2),language=_useState8[0],setLanguage=_useState8[1];var _useState9=useState(test?test.testType:\"\"),_useState10=_slicedToArray(_useState9,2),testType=_useState10[0],setTestType=_useState10[1];var _useState11=useState(test?test.testName:\"\"),_useState12=_slicedToArray(_useState11,2),testName=_useState12[0],setTestName=_useState12[1];var _useState13=useState(test?test.passingGrade:\"\"),_useState14=_slicedToArray(_useState13,2),passingGrade=_useState14[0],setPassingGrade=_useState14[1];var _useState15=useState(test?test.header:\"\"),_useState16=_slicedToArray(_useState15,2),header=_useState16[0],setHeader=_useState16[1];var _useState17=useState(test?test.messageSuccess:\"\"),_useState18=_slicedToArray(_useState17,2),messageSuccess=_useState18[0],setMessageSuccess=_useState18[1];var _useState19=useState(test?test.messageFailure:\"\"),_useState20=_slicedToArray(_useState19,2),messageFailure=_useState20[0],setMessageFailure=_useState20[1];var _useState21=useState(test?test.certificateTemplate:\"\"),_useState22=_slicedToArray(_useState21,2),certificateTemplate=_useState22[0],setCertificateTemplate=_useState22[1];// *Email Delivery Table*         \n// Status Container          \nvar _useState23=useState(\"OFF\"),_useState24=_slicedToArray(_useState23,2),status=_useState24[0],setStatus=_useState24[1];var _useState25=useState(test?test.from:\"\"),_useState26=_slicedToArray(_useState25,2),from=_useState26[0],setFrom=_useState26[1];var _useState27=useState(test?test.cc:\"\"),_useState28=_slicedToArray(_useState27,2),cc=_useState28[0],setCC=_useState28[1];var _useState29=useState(test?test.bcc:\"\"),_useState30=_slicedToArray(_useState29,2),bcc=_useState30[0],setBCC=_useState30[1];// Passing the Test Container\nvar _useState31=useState(test?test.passingSubject:\"\"),_useState32=_slicedToArray(_useState31,2),passingMessageSubject=_useState32[0],setPassingMessageSubject=_useState32[1];var _useState33=useState(test?test.passingBody:\"\"),_useState34=_slicedToArray(_useState33,2),passingMessageBody=_useState34[0],setPassingMessageBody=_useState34[1];// Failing the Test Container\nvar _useState35=useState(test?test.failingSubject:\"\"),_useState36=_slicedToArray(_useState35,2),failingMessageSubject=_useState36[0],setFailingMessageSubject=_useState36[1];var _useState37=useState(test?test.failingBody:\"\"),_useState38=_slicedToArray(_useState37,2),failingMessageBody=_useState38[0],setFailingMessageBody=_useState38[1];// --------------------------- Bottom Content Hooks ---------------------------\n// *Filter Container*\nvar _useState39=useState(false),_useState40=_slicedToArray(_useState39,2),filter=_useState40[0],setFilter=_useState40[1];var _useState41=useState(\"\"),_useState42=_slicedToArray(_useState41,2),filterContent=_useState42[0],setFilterContent=_useState42[1];// *Questions Table\nvar _useState43=useState(test?test.questionAmount:0),_useState44=_slicedToArray(_useState43,2),questionsAmount=_useState44[0],setQuestionsAmount=_useState44[1];// ----------------------------------------------------------------------------\nvar handleStatus=function handleStatus(value){setFrom(value);};var history=useHistory();var back=function back(){history.goBack();};var show=function show(){};var handleSubmit=function handleSubmit(event){event.preventDefault();};var saveTest=function saveTest(){fetch('http://localhost:8000/tests',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({// id: questionID,\n// tags: tags,\n// last_update: Date.now,\n// type: type,\n// title: questionHeader,\n// text: questionText,\n// difficulty: (question && question.difficulty ? question.difficulty : \"low\"),\n// answers: possibleAnswers,\n// num_of_tests: (question && question.num_of_tests ? question.num_of_tests : 0),\n// answersLayout: answersLayout\n})}).then(function(res){return res.json();}).then(function(data){console.log(data);// initialState(); \n}).catch(function(err){return console.log(\"error \".concat(err));});};var fetchLanguages=function fetchLanguages(){fetch(\"http://localhost:8000/languages\",{method:'GET'}).then(function(res){return res.json();}).then(function(data){setLanguages(data);setLanguage(language?language:data[0].type);}).catch(function(err){return console.log('error fetching languages:'+err);});};var fetchTestTypes=function fetchTestTypes(){fetch(\"http://localhost:8000/testTypes\",{method:'GET'}).then(function(res){return res.json();}).then(function(data){setTestTypes(data);setTestType(testType?testType:data[0].type);}).catch(function(err){return console.log('error fetching test types:'+err);});};var fetchCertificateTemplates=function fetchCertificateTemplates(){fetch(\"http://localhost:8000/certificateTemplates\",{method:'GET'}).then(function(res){return res.json();}).then(function(data){setCertificateTemplates(data);setCertificateTemplate(certificateTemplate?certificateTemplate:data[0].template);}).catch(function(err){return console.log('error fetching certificate templates:'+err);});};useEffect(function(){document.title=\"\".concat(test===undefined?\"Create\":\"Edit\",\" Test\");},[test]);// Meant for fetching the necessary information on first render\nuseEffect(function(){var isMounted=true;// note mutable flag\nif(isMounted){// add conditional check\nfetchLanguages();fetchTestTypes();fetchCertificateTemplates();}return function(){isMounted=false;};// cleanup toggles value, if unmounted\n},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"create_edit_test noselect\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\" \",test===undefined?\"Create\":\"Edit\",\" Test \"]}),\" \",/*#__PURE__*/_jsxs(\"form\",{className:\"new_test__form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{id:\"top_content__container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"content__section\",children:/*#__PURE__*/_jsx(\"table\",{id:\"general_details__table\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{className:\"space_under header_row border_bottom\",children:/*#__PURE__*/_jsx(\"th\",{colspan:\"2\",children:\" General Test Details \"})}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Field of Study: \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsxs(\"label\",{id:\"field__label\",children:[\" \",field?field:\"undefined\",\" \"]}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Language: \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\"  \",/*#__PURE__*/_jsx(\"select\",{id:\"language__select\",onChange:function onChange(e){return setLanguage(e.target.value);},children:languages&&languages.map(function(language){return/*#__PURE__*/_jsxs(\"option\",{value:language.name,children:[\" \",language.name,\" \"]},language.id);})}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Test Type: \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"select\",{id:\"test_type__select\",onChange:function onChange(e){return setTestType(e.target.value);},children:testTypes&&testTypes.map(function(testType){return/*#__PURE__*/_jsxs(\"option\",{value:testType.type,children:[\" \",testType.type,\" \"]},testType.id);})}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Test Name:                                                                                                                                                  \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"test_name__input\",type:\"text\",placeholder:\"Type test name\",value:testName,onChange:function onChange(e){return setTestName(e.target.value);},required:true}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Passing Grade:                                                                                                                                              \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"passing_grade__input\",type:\"text\",placeholder:\"Grade\",value:passingGrade,onChange:function onChange(e){return setPassingGrade(e.target.value);},required:true}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Show correct answers after submission:                                                                                                                      \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"show_answers__checkbox\",type:\"checkbox\",defaultChecked:true,required:true}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Message header:                                                                                                                                             \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"message_header__input\",type:\"text\",placeholder:\"Type something\",value:header,onChange:function onChange(e){return setHeader(e.target.value);},required:true}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Message to show on success:                                                                                                                                 \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"message_success__input\",type:\"text\",placeholder:\"Type something\",value:messageSuccess,onChange:function onChange(e){return setMessageSuccess(e.target.value);},required:true}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Message to show on failure:                                                                                                                                 \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"message_failure__input\",type:\"text\",placeholder:\"Type something\",value:messageFailure,onChange:function onChange(e){return setMessageFailure(e.target.value);},required:true}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Certificate Templates: \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"select\",{id:\"certificate__select\",onChange:function onChange(e){return setCertificateTemplate(e.target.value);},children:certificateTemplates&&certificateTemplates.map(function(certificate){return/*#__PURE__*/_jsxs(\"option\",{value:certificate.template,children:[\" \",certificate.template,\" \"]},certificate.id);})}),\" \"]})]})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"content__section\",children:[/*#__PURE__*/_jsx(\"table\",{id:\"email_delivery__table\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{className:\"space_under header_row border_bottom\",children:/*#__PURE__*/_jsx(\"th\",{colspan:\"2\",children:\" Email Delivery Upon Test Completion \"})}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Current Status:                                                                                                                                             \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsxs(\"div\",{id:\"sending_emails__container\",children:[/*#__PURE__*/_jsxs(\"label\",{id:\"sending_emails__label\",children:[\" Emails \",status===\"OFF\"?\"won't\":\"will\",\" be sent upon test completion.                                                   \"]}),/*#__PURE__*/_jsxs(\"label\",{children:[\" to turn \",status===\"OFF\"?\"ON\":\"OFF\",\" email delivery, \",status===\"OFF\"?\"fill out\":\"reset\",\" the mandatory                    \"]}),/*#__PURE__*/_jsx(\"label\",{children:\" fields in this section:                                                                                                              \"})]}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" From: \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"from__input\",type:\"text\",value:from,onChange:function onChange(e){return handleStatus(e.target.value);}}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" CC: \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"cc__input\",type:\"text\",value:cc,onChange:function onChange(e){return setCC(e.target.value);},disabled:from?false:true}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" BCC: \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"bcc__input\",type:\"text\",value:bcc,onChange:function onChange(e){return setBCC(e.target.value);},disabled:from?false:true}),\" \"]})]})]})}),/*#__PURE__*/_jsx(\"table\",{id:\"passing_test__table\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{className:\"space_under sub_header_row border_bottom\",children:/*#__PURE__*/_jsx(\"th\",{colspan:\"2\",children:\" Passing the test \"})}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Message subject:                                                                                                                                            \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"message_subject__input\",type:\"text\",value:passingMessageSubject,onChange:function onChange(e){return setPassingMessageSubject(e.target.value);},disabled:from?false:true}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Message body:                                                                                                                                               \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"message_body__input\",type:\"text\",value:passingMessageBody,onChange:function onChange(e){return setPassingMessageBody(e.target.value);},disabled:from?false:true}),\" \"]})]}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"label\",{style:{fontWeight:'bold'},children:\" Predefined Templated - Click to copy to clipboard \"}),/*#__PURE__*/_jsx(\"label\",{children:\" NEED TO ADD TEMPLATES HERE \"})]})})]})})]}),/*#__PURE__*/_jsx(\"table\",{id:\"failing_test__table\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{className:\"space_under sub_header_row border_bottom\",children:/*#__PURE__*/_jsx(\"th\",{colspan:\"2\",children:\" Failing the test \"})}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Message subject:                                                                                                                                            \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"message_subject__input\",type:\"text\",value:failingMessageSubject,onChange:function onChange(e){return setFailingMessageSubject(e.target.value);},disabled:from?false:true}),\" \"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"label\",{children:\" Message body:                                                                                                                                               \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{id:\"message_body__input\",type:\"text\",value:failingMessageBody,onChange:function onChange(e){return setFailingMessageBody(e.target.value);},disabled:from?false:true}),\" \"]})]}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"label\",{style:{fontWeight:'bold'},children:\" Predefined Templated - Click to copy to clipboard \"}),/*#__PURE__*/_jsx(\"label\",{children:\" NEED TO ADD TEMPLATES HERE \"})]})})]})})]}),/*#__PURE__*/_jsx(\"div\",{id:\"bottom_content__container\",children:/*#__PURE__*/_jsxs(\"div\",{id:\"questions__container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section__headers\",children:\" Questions \"}),/*#__PURE__*/_jsxs(\"div\",{id:\"explanation\",children:[/*#__PURE__*/_jsxs(\"label\",{style:{fontWeight:'bold'},children:[\" Note: This test is set to be a \",\"'\".concat(testType,\"'\"),\" test, which means:\"]}),/*#__PURE__*/_jsx(\"label\",{className:\"sub__label\",children:\" All the questions that you select here will be included in the test. \"}),/*#__PURE__*/_jsx(\"label\",{className:\"sub__label\",children:\" All respondents will receive the SAME set of questions presented in a different order. \"}),/*#__PURE__*/_jsxs(\"label\",{className:\"sub__label\",children:[\" *TIP: if you want each respondent to receive a different set of questions, change the test type to 'Random' in the \",/*#__PURE__*/_jsx(Link,{to:\"/admin/\"+test===undefined?\"create\":\"edit\"+\"-test#test_type__select\",children:\"Test Details\"}),\" section.* \"]})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"question_table__container\",children:[/*#__PURE__*/_jsx(\"label\",{style:{fontWeight:'bold',color:'orange'},children:\" Select the questions that you want to include in the test \"}),/*#__PURE__*/_jsx(\"label\",{children:\" You can use the tag filter to narrow down the list to a specific subject - Don't worry, filtering won't affect your previous selections. \"}),/*#__PURE__*/_jsxs(\"div\",{id:\"filter__container\",children:[/*#__PURE__*/_jsx(\"label\",{style:{fontWeight:'bold'},children:\" Filter by tags or content \"}),/*#__PURE__*/_jsx(\"input\",{id:\"tag_content__input\",type:\"text\",onChange:function onChange(e){setFilterContent(e.target.value);filterContent===\"\"?setFilter(false):setFilter(true);},placeholder:\"Enter a list of keywords separated by commas\"}),/*#__PURE__*/_jsxs(\"label\",{id:\"filter_state\",children:[\" Filter is \",filter===false?\"OFF\":\"ON\",\"  \"]})]}),/*#__PURE__*/_jsx(\"table\",{id:\"questions__table\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsxs(\"th\",{children:[\" Currently showing \",questionsAmount,\" questions (\",questionsAmount,\" selected) \"]})}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\" What is the DOM? \"}),/*#__PURE__*/_jsx(\"label\",{children:\" *IN SMALL TEXT* Javascript | Advanced\"})]})})]})}),/*#__PURE__*/_jsxs(\"div\",{id:\"table_buttons__container\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\" Showing 1-\",\"AMOUNT OF QUESTIONS\",\" of \",\"AMOUNT OF QUESTIONS\",\" filtered questions\"]}),/*#__PURE__*/_jsxs(\"button\",{children:[\" Next 2 \",\">>\",\" \"]}),/*#__PURE__*/_jsx(\"button\",{children:\" Show only Selected \"}),/*#__PURE__*/_jsxs(\"button\",{children:[\" Show All \",\"AMOUNT OF QUESTIONS\",\" questions \"]})]})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\" The test will include \",\"AMOUNT OF QUESTIONS\",\" in total \"]})]})}),/*#__PURE__*/_jsxs(\"div\",{id:\"buttons__container\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"regular__button\",onClick:function onClick(){return back();},children:[\" \",\"<<\",\" Back  \"]}),/*#__PURE__*/_jsx(\"button\",{className:\"regular__button\",onClick:function onClick(){return show();},children:\"  Show         \"}),/*#__PURE__*/_jsxs(\"button\",{className:\"regular__button\",type:\"submit\",children:[\"  Save \",\">>\",\" \"]})]})]})]});};","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Admin/MainPage/ManageTests/CreateEditTest/CreateEditTest.js"],"names":["React","useState","useEffect","Button","HashLink","Link","useHistory","styles","CreateEditTest","field","test","testTypes","setTestTypes","certificateTemplates","setCertificateTemplates","languages","setLanguages","language","setLanguage","testType","setTestType","testName","setTestName","passingGrade","setPassingGrade","header","setHeader","messageSuccess","setMessageSuccess","messageFailure","setMessageFailure","certificateTemplate","setCertificateTemplate","status","setStatus","from","setFrom","cc","setCC","bcc","setBCC","passingSubject","passingMessageSubject","setPassingMessageSubject","passingBody","passingMessageBody","setPassingMessageBody","failingSubject","failingMessageSubject","setFailingMessageSubject","failingBody","failingMessageBody","setFailingMessageBody","filter","setFilter","filterContent","setFilterContent","questionAmount","questionsAmount","setQuestionsAmount","handleStatus","value","history","back","goBack","show","handleSubmit","event","preventDefault","saveTest","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","catch","err","fetchLanguages","type","fetchTestTypes","fetchCertificateTemplates","template","document","title","undefined","isMounted","e","target","map","name","id","certificate","fontWeight","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport        { Button }              from '../../../../../shared/Button/Button';\r\nimport        { HashLink as Link }    from 'react-router-hash-link';\r\nimport        { useHistory }          from 'react-router-dom';\r\nimport styles                         from './CreateEditTest.css';\r\n\r\nexport const CreateEditTest = ({ field, test }) => {\r\n\r\n  // ----------------------------- Fetch Info Hooks -----------------------------\r\n\r\n  const [ testTypes,                  setTestTypes              ] = useState(null);\r\n  const [ certificateTemplates,       setCertificateTemplates   ] = useState(null);\r\n  const [ languages,                  setLanguages              ] = useState(null);\r\n\r\n  // ----------------------------- Top Content Hooks -----------------------------\r\n\r\n  // *General Details Table*\r\n  const [ language,                   setLanguage               ] = useState(test ? test.language : \"\");\r\n  const [ testType,                   setTestType               ] = useState(test ? test.testType : \"\");\r\n  const [ testName,                   setTestName               ] = useState(test ? test.testName : \"\");\r\n  const [ passingGrade,               setPassingGrade           ] = useState(test ? test.passingGrade : \"\");\r\n  const [ header,                     setHeader                 ] = useState(test ? test.header : \"\");\r\n  const [ messageSuccess,             setMessageSuccess         ] = useState(test ? test.messageSuccess : \"\");\r\n  const [ messageFailure,             setMessageFailure         ] = useState(test ? test.messageFailure : \"\");\r\n  const [ certificateTemplate,        setCertificateTemplate    ] = useState(test ? test.certificateTemplate : \"\");\r\n\r\n  // *Email Delivery Table*         \r\n  // Status Container          \r\n  const [ status,                     setStatus                 ] = useState(\"OFF\");\r\n  const [ from,                       setFrom                   ] = useState(test ? test.from : \"\");\r\n  const [ cc,                         setCC                     ] = useState(test ? test.cc : \"\");\r\n  const [ bcc,                        setBCC                    ] = useState(test ? test.bcc : \"\");    \r\n\r\n  // Passing the Test Container\r\n  const [ passingMessageSubject,      setPassingMessageSubject  ] = useState(test ? test.passingSubject : \"\");\r\n  const [ passingMessageBody,         setPassingMessageBody     ] = useState(test ? test.passingBody : \"\");    \r\n\r\n  // Failing the Test Container\r\n  const [ failingMessageSubject,      setFailingMessageSubject  ] = useState(test ? test.failingSubject : \"\");   \r\n  const [ failingMessageBody,         setFailingMessageBody     ] = useState(test ? test.failingBody : \"\");    \r\n\r\n  // --------------------------- Bottom Content Hooks ---------------------------\r\n\r\n  // *Filter Container*\r\n  const [ filter,                     setFilter                 ] = useState(false);\r\n  const [ filterContent,              setFilterContent          ] = useState(\"\");\r\n\r\n  // *Questions Table\r\n  const [ questionsAmount,            setQuestionsAmount        ] = useState(test ? test.questionAmount : 0);    \r\n\r\n  // ----------------------------------------------------------------------------\r\n\r\n  const handleStatus = (value) => {\r\n    setFrom(value);\r\n  }\r\n\r\n  const history = useHistory();\r\n\r\n  const back = () => {\r\n      history.goBack();\r\n  }\r\n\r\n  const show = () => {\r\n    \r\n  }\r\n\r\n  const handleSubmit = (event) => {  \r\n    event.preventDefault();\r\n  }\r\n\r\n  const saveTest = () => {\r\n    fetch('http://localhost:8000/tests', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n        // id: questionID,\r\n        // tags: tags,\r\n        // last_update: Date.now,\r\n        // type: type,\r\n        // title: questionHeader,\r\n        // text: questionText,\r\n        // difficulty: (question && question.difficulty ? question.difficulty : \"low\"),\r\n        // answers: possibleAnswers,\r\n        // num_of_tests: (question && question.num_of_tests ? question.num_of_tests : 0),\r\n        // answersLayout: answersLayout\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => { \r\n        console.log(data); \r\n        // initialState(); \r\n      })\r\n      .catch((err) => console.log(`error ${err}`))\r\n  }\r\n\r\n  const fetchLanguages = () => {\r\n    fetch(\"http://localhost:8000/languages\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setLanguages(data); \r\n      setLanguage(language ? language : data[0].type); \r\n    })\r\n    .catch((err) => console.log('error fetching languages:' + err))\r\n  }\r\n\r\n  const fetchTestTypes = () => {\r\n    fetch(\"http://localhost:8000/testTypes\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setTestTypes(data); \r\n      setTestType(testType ? testType : data[0].type); \r\n    })\r\n    .catch((err) => console.log('error fetching test types:' + err))\r\n  }\r\n\r\n  const fetchCertificateTemplates = () => {\r\n    fetch(\"http://localhost:8000/certificateTemplates\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setCertificateTemplates(data); \r\n      setCertificateTemplate(certificateTemplate ? certificateTemplate : data[0].template); \r\n    })\r\n    .catch((err) => console.log('error fetching certificate templates:' + err))\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = `${test === undefined ? \"Create\" : \"Edit\"} Test`;\r\n  }, [test])\r\n\r\n    // Meant for fetching the necessary information on first render\r\n  useEffect(() => {\r\n    let isMounted = true;           // note mutable flag\r\n\r\n    if (isMounted) {                // add conditional check\r\n      fetchLanguages();\r\n      fetchTestTypes();\r\n      fetchCertificateTemplates();\r\n    }\r\n\r\n    return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"create_edit_test noselect\">\r\n      <h1> {test === undefined ? \"Create\" : \"Edit\"} Test </h1> {/* className=\"page__header\" */}\r\n      <form className=\"new_test__form\" onSubmit={handleSubmit}>\r\n        <div id=\"top_content__container\">\r\n          \r\n          {/* <h2 className=\"section__headers\"> General Test Details </h2> */}\r\n          <div className=\"content__section\">\r\n            <table id=\"general_details__table\">\r\n              <tbody>\r\n                <tr className=\"space_under header_row border_bottom\">\r\n                  <th colspan=\"2\"> General Test Details </th>\r\n                </tr>\r\n                <tr>\r\n                  <td> <label> Field of Study: </label> </td>\r\n                  <td> <label id=\"field__label\"> {field ? field : \"undefined\"} </label> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Language: </label> </td>\r\n                  <td>  <select id=\"language__select\" onChange={(e) => setLanguage (e.target.value)}>\r\n                          {languages && languages.map((language) => (\r\n                            <option key={language.id} value={language.name}> {language.name} </option>\r\n                          ))} \r\n                        </select> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Test Type: </label> </td>\r\n                  <td> <select id=\"test_type__select\" onChange={(e) => setTestType (e.target.value)}>\r\n                          {testTypes && testTypes.map((testType) => (\r\n                            <option key={testType.id} value={testType.type}> {testType.type} </option>\r\n                          ))}\r\n                        </select> </td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td> <label> Test Name:                                                                                                                                                  </label> </td>\r\n                  <td> <input id=\"test_name__input\"       type=\"text\"     placeholder=\"Type test name\"      value={testName}        onChange={(e) => setTestName     (e.target.value)}   required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Passing Grade:                                                                                                                                              </label> </td>\r\n                  <td> <input id=\"passing_grade__input\"   type=\"text\"     placeholder=\"Grade\"               value={passingGrade}    onChange={(e) => setPassingGrade (e.target.value)}   required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Show correct answers after submission:                                                                                                                      </label> </td>\r\n                  <td> <input id=\"show_answers__checkbox\" type=\"checkbox\" defaultChecked                                                                                                 required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Message header:                                                                                                                                             </label> </td>\r\n                  <td> <input id=\"message_header__input\"  type=\"text\"     placeholder=\"Type something\"      value={header}   onChange={(e) => setHeader  (e.target.value)} required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Message to show on success:                                                                                                                                 </label> </td>\r\n                  <td> <input id=\"message_success__input\" type=\"text\"     placeholder=\"Type something\"      value={messageSuccess}  onChange={(e) => setMessageSuccess (e.target.value)} required/> </td>\r\n                </tr>   \r\n\r\n                <tr>    \r\n                  <td> <label> Message to show on failure:                                                                                                                                 </label> </td>\r\n                  <td> <input id=\"message_failure__input\" type=\"text\"     placeholder=\"Type something\"      value={messageFailure}  onChange={(e) => setMessageFailure (e.target.value)} required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Certificate Templates: </label> </td>\r\n                  <td> <select id=\"certificate__select\" onChange={(e) => setCertificateTemplate (e.target.value)}>\r\n                          {certificateTemplates && certificateTemplates.map((certificate) => (\r\n                            <option key={certificate.id} value={certificate.template}> {certificate.template} </option>\r\n                          ))}\r\n                        </select> </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div className=\"content__section\">\r\n            {/* <h2 className=\"section__headers\"> Email Delivery Upon Test Completion </h2> */}\r\n            <table id=\"email_delivery__table\">\r\n              <tbody>\r\n                <tr className=\"space_under header_row border_bottom\">\r\n                  <th colspan=\"2\"> Email Delivery Upon Test Completion </th>\r\n                </tr>\r\n                <tr>\r\n                  <td> <label> Current Status:                                                                                                                                             </label> </td>\r\n                  <td> <div id=\"sending_emails__container\">      \r\n                          <label id=\"sending_emails__label\" > Emails {status === \"OFF\" ? `won't` : \"will\"} be sent upon test completion.                                                   </label>\r\n                          <label                    > to turn {status === \"OFF\" ? \"ON\" : \"OFF\"} email delivery, {status === \"OFF\" ? \"fill out\" : \"reset\"} the mandatory                    </label>\r\n                          <label                    > fields in this section:                                                                                                              </label>\r\n                        </div> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> From: </label> </td>\r\n                  <td> <input id=\"from__input\"  type=\"text\" value={from}  onChange={(e) => handleStatus(e.target.value)}                                                                         /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> CC: </label> </td>      \r\n                  <td> <input id=\"cc__input\"    type=\"text\" value={cc}    onChange={(e) => setCC(e.target.value)}   disabled={from ? false : true}                                               /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> BCC: </label> </td>       \r\n                  <td> <input id=\"bcc__input\"   type=\"text\" value={bcc}   onChange={(e) => setBCC(e.target.value)}  disabled={from ? false : true}                                               /> </td>\r\n                </tr>      \r\n              </tbody>\r\n            </table>       \r\n         \r\n         \r\n            <table id=\"passing_test__table\">   \r\n              <tbody>\r\n                <tr className=\"space_under sub_header_row border_bottom\">\r\n                  <th colspan=\"2\"> Passing the test </th>\r\n                </tr>\r\n                <tr>       \r\n                  <td> <label> Message subject:                                                                                                                                            </label> </td>\r\n                  <td> <input id=\"message_subject__input\" type=\"text\" value={passingMessageSubject} onChange={(e) => setPassingMessageSubject(e.target.value)}  disabled={from ? false : true}   /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> Message body:                                                                                                                                               </label> </td>\r\n                  <td> <input id=\"message_body__input\"    type=\"text\" value={passingMessageBody}    onChange={(e) => setPassingMessageBody(e.target.value)} disabled={from ? false : true}       /> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td>\r\n                    <label style={{fontWeight: 'bold'}}> Predefined Templated - Click to copy to clipboard </label>\r\n                    <label> NEED TO ADD TEMPLATES HERE </label>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n\r\n          <table id=\"failing_test__table\">\r\n            <tbody>\r\n              <tr className=\"space_under sub_header_row border_bottom\">\r\n                  <th colspan=\"2\"> Failing the test </th>\r\n                </tr>\r\n              <tr>\r\n                <td> <label> Message subject:                                                                                                                                            </label> </td>\r\n                <td> <input id=\"message_subject__input\" type=\"text\" value={failingMessageSubject} onChange={(e) => setFailingMessageSubject(e.target.value)}  disabled={from ? false : true}   /> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td> <label> Message body:                                                                                                                                               </label> </td>\r\n                <td> <input id=\"message_body__input\"    type=\"text\" value={failingMessageBody}    onChange={(e) => setFailingMessageBody(e.target.value)} disabled={from ? false : true}       /> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  <label style={{fontWeight: 'bold'}}> Predefined Templated - Click to copy to clipboard </label>\r\n                  <label> NEED TO ADD TEMPLATES HERE </label>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div id=\"bottom_content__container\">\r\n          <div id=\"questions__container\">\r\n            <h2 className=\"section__headers\"> Questions </h2>\r\n            <div id=\"explanation\">\r\n              <label style={{fontWeight: 'bold'}}> Note: This test is set to be a {`'${testType}'`} test, which means:</label>\r\n              \r\n              {/* INSTEAD OF THIS: */}\r\n              <label className=\"sub__label\"> All the questions that you select here will be included in the test. </label>\r\n              <label className=\"sub__label\"> All respondents will receive the SAME set of questions presented in a different order. </label>\r\n\r\n              {/* NEED TO CHANGE THE 'LINK' TO SOMETHING ELSE - SOMETHING THAT WILL REFER THE USER BACK TO THE TEST DETAILS  */}\r\n              <label className=\"sub__label\"> *TIP: if you want each respondent to receive a different set of questions, change the test type to 'Random' in the <Link to={\"/admin/\" + test === undefined ? \"create\" : \"edit\" + \"-test#test_type__select\"} >Test Details</Link> section.* </label>\r\n\r\n              {/* FOR EVERY LABEL OR SOMETHING FROM THE DB THAT CONTAINS THE TEST TYPES, I WILL NEED TO DO THIS */}\r\n              {/* <label className=\"sub__label\"> {TestType.child.text} </label> */}\r\n            </div>\r\n\r\n            <div id=\"question_table__container\">\r\n              <label style={{fontWeight: 'bold', color: 'orange'}}> Select the questions that you want to include in the test </label>\r\n              <label> You can use the tag filter to narrow down the list to a specific subject - Don't worry, filtering won't affect your previous selections. </label>\r\n\r\n              <div id=\"filter__container\">\r\n                <label style={{fontWeight: 'bold'}}> Filter by tags or content </label>\r\n                <input id=\"tag_content__input\" type=\"text\"\r\n                            onChange={(e) => { setFilterContent(e.target.value); filterContent === \"\" ? setFilter(false) : setFilter(true)} }\r\n                            placeholder='Enter a list of keywords separated by commas'/>\r\n                    <label id=\"filter_state\"> Filter is {filter === false ? \"OFF\" : \"ON\"}  </label>\r\n              </div>\r\n\r\n              <table id=\"questions__table\">\r\n                <tbody>\r\n                  <tr>\r\n                    <th> Currently showing {questionsAmount} questions ({questionsAmount} selected) </th>\r\n                  </tr>\r\n                  <tr>\r\n                    {/* CHANGE THIS SO EVERY QUESTION THAT MATCHES THE FILTER WILL BE PLACED IN A NEW TABLE ROW, AND THAT THE SHOW BUTTON CAN SHOW THE QUESTIONS CONTENT\r\n                    PLS PAY ATTENTION THAT THIS KIND OF OPEN MENU CAN BE CREATED AND RE-USED FOR THE 'TEST REPORT' PAGE AS WELL */}\r\n\r\n                    <td>\r\n                      <label> What is the DOM? </label>\r\n                      <label> *IN SMALL TEXT* Javascript | Advanced</label>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n              <div id=\"table_buttons__container\">\r\n                <label> Showing 1-{`AMOUNT OF QUESTIONS`} of {`AMOUNT OF QUESTIONS`} filtered questions</label>\r\n                <button> Next 2 {`>>`} </button>\r\n                <button> Show only Selected </button>\r\n                <button> Show All {`AMOUNT OF QUESTIONS`} questions </button>\r\n              </div>\r\n            </div>\r\n\r\n            <label> The test will include {`AMOUNT OF QUESTIONS`} in total </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"buttons__container\">\r\n            <button className=\"regular__button\" onClick={() => back() }> {`<<` } Back  </button>\r\n            <button className=\"regular__button\" onClick={() => show() }>  Show         </button>\r\n            <button className=\"regular__button\" type=\"submit\"          >  Save {`>>` } </button>\r\n          </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};"]},"metadata":{},"sourceType":"module"}