{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\pages\\\\Admin\\\\MainPage\\\\ManageTests\\\\ManageTests.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { TestTable } from '../../../../Admin/TestTable/TestTable';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport styles from './ManageTests.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ManageTests() {\n  _s();\n\n  // ---------------------------- Fetch Info Hooks ---------------------------\n  const [tests, setTests] = useState(null);\n  const [field, setField] = useState(null); // ----------------------------- Content Hooks -----------------------------\n\n  const [filter, setFilter] = useState(false);\n  const [filterContent, setFilterContent] = useState(\"\");\n  const [filterStatus, setFilterStatus] = useState(false);\n  const [filterByTags, setFilterByTags] = useState(true);\n  const [filteredTests, setFilteredTests] = useState([]);\n  const [filterBy, setFilterby] = useState([{\n    name: \"tags\"\n  }, {\n    name: \"content\"\n  }]); // ----------------------------------------------------------------------------\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const back = () => {\n    history.goBack();\n  };\n\n  const createTest = () => {\n    history.push({\n      pathname: '/admin/create-test',\n      // search: '?update=true',  // query string\n      state: {\n        // location state\n        // update: true,\n        field: field,\n        test: null\n      }\n    });\n  };\n\n  const handleFilterContentChange = value => {\n    if (value === \"\") setFilterStatus(false);else setFilterStatus(true);\n    let newTests = tests;\n    setFilteredTests(newTests.filter(test => {\n      if (test.testName.toLowerCase().includes(value)) return test;else return null;\n    }));\n  };\n\n  const handleFilterByChange = value => {\n    if (value === \"tags\") setFilterByTags(true);else setFilterByTags(false);\n  };\n\n  const fetchTests = () => {\n    fetch(\"http://localhost:8000/tests\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setTests(data);\n    }).catch(err => console.log('error fetching tests:' + err));\n  };\n\n  const handleFilterChange = value => {\n    setFilterContent(value);\n    value === \"\" ? setFilter(false) : setFilter(true);\n  };\n\n  useEffect(() => {\n    document.title = \"Manage Tests\";\n  }, []); // Meant for fetching the necessary information on first render\n\n  useEffect(() => {\n    let isMounted = true; // note mutable flag\n\n    if (isMounted) {\n      // add conditional check\n      fetchTests();\n    }\n\n    if (location.state) {\n      if (location.state.field) setField(location.state.field);\n    }\n\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage_tests noselect\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"headers__container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page__header\",\n        children: [\" Available Tests for \", field ? field : \"\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), tests && filteredTests && /*#__PURE__*/_jsxDEV(Filter, {\n      filterStatus: filterStatus,\n      totalAmount: questions.length,\n      filteredAmount: filteredQuestions.length,\n      handleFilterByChange: handleFilterByChange,\n      handleFilterContentChange: handleFilterContentChange,\n      filterBy: filterBy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 41\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"table__container\",\n      children: [tests && /*#__PURE__*/_jsxDEV(TestTable, {\n        tests: tests\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        type: \"text\",\n        id: \"showing_tests\",\n        children: [\" showing 1-\", `AMOUNT`, \" of available Tests \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttons__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"regular__button\",\n        onClick: () => back(),\n        children: [\"      \", `<<`, \" Back            \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"regular__button\",\n        onClick: () => createTest(),\n        children: [\"      Create a Test \", `>>`, \"    \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ManageTests, \"FEds1UXCQLKq5VgrP/3e2uPzDaM=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = ManageTests;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageTests\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Admin/MainPage/ManageTests/ManageTests.js"],"names":["React","useEffect","useState","TestTable","useHistory","useLocation","styles","ManageTests","tests","setTests","field","setField","filter","setFilter","filterContent","setFilterContent","filterStatus","setFilterStatus","filterByTags","setFilterByTags","filteredTests","setFilteredTests","filterBy","setFilterby","name","location","history","back","goBack","createTest","push","pathname","state","test","handleFilterContentChange","value","newTests","testName","toLowerCase","includes","handleFilterByChange","fetchTests","fetch","method","then","res","json","data","catch","err","console","log","handleFilterChange","document","title","isMounted","questions","length","filteredQuestions"],"mappings":"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","sourcesContent":["import React, { useEffect, useState     }   from 'react';\r\nimport        { TestTable               }   from '../../../../Admin/TestTable/TestTable';\r\nimport        { useHistory, useLocation }   from 'react-router-dom';\r\nimport styles                               from './ManageTests.css'\r\n\r\nexport default function ManageTests() {\r\n\r\n    // ---------------------------- Fetch Info Hooks ---------------------------\r\n\r\n    const [ tests,              setTests           ] = useState(null);\r\n\r\n    const [ field,              setField           ] = useState(null);\r\n\r\n    // ----------------------------- Content Hooks -----------------------------\r\n\r\n    const [ filter,             setFilter          ] = useState(false);\r\n    const [ filterContent,      setFilterContent   ] = useState(\"\");\r\n\r\n    const [ filterStatus,       setFilterStatus    ]  = useState(false);\r\n    const [ filterByTags,       setFilterByTags    ]  = useState(true);\r\n    const [ filteredTests,      setFilteredTests   ]  = useState([]);\r\n    const [ filterBy,           setFilterby             ]  = useState([{ name: \"tags\" }, { name: \"content\" }]);\r\n\r\n    // ----------------------------------------------------------------------------\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const createTest = () => {\r\n        history.push({\r\n            pathname: '/admin/create-test',\r\n            // search: '?update=true',  // query string\r\n            state: {  // location state\r\n                // update: true,\r\n              field: field,\r\n              test: null\r\n            },\r\n        }); \r\n    }\r\n\r\n    const handleFilterContentChange = (value) => {\r\n        \r\n        if (value === \"\") setFilterStatus(false);\r\n        else setFilterStatus(true);\r\n\r\n        let newTests = tests;\r\n        setFilteredTests(newTests.filter((test) => { \r\n\r\n            if (test.testName.toLowerCase().includes(value)) return test;\r\n            else return null;\r\n\r\n        }));\r\n    }\r\n\r\n    const handleFilterByChange = (value) => {\r\n        if (value === \"tags\") setFilterByTags(true);\r\n        else setFilterByTags(false);\r\n    }\r\n\r\n    const fetchTests = () => {\r\n        fetch(\"http://localhost:8000/tests\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n          setTests(data); \r\n        })\r\n        .catch((err) => console.log('error fetching tests:' + err))\r\n    }\r\n\r\n    const handleFilterChange = (value) => {\r\n        setFilterContent(value);\r\n        value === \"\" ? setFilter(false) : setFilter(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = \"Manage Tests\";\r\n    }, [])\r\n\r\n    // Meant for fetching the necessary information on first render\r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n\r\n        if (isMounted) {                // add conditional check\r\n            fetchTests();\r\n        }\r\n\r\n        if (location.state) {\r\n            if (location.state.field) setField(location.state.field);\r\n        }\r\n\r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"manage_tests noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1 className=\"page__header\"> Available Tests for {field ? field : \"\"} </h1>\r\n            </div>\r\n\r\n            { tests && filteredTests && <Filter filterStatus={filterStatus} totalAmount={questions.length} filteredAmount={filteredQuestions.length} \r\n                handleFilterByChange={handleFilterByChange} handleFilterContentChange={handleFilterContentChange} filterBy={filterBy}/> }\r\n\r\n            <div id=\"table__container\">\r\n                { tests && <TestTable tests={tests} /> }\r\n                <label type=\"text\" id=\"showing_tests\"> showing 1-{`AMOUNT`} of available Tests </label>\r\n            </div>\r\n\r\n            <div id=\"buttons__container\">\r\n                <button className=\"regular__button\" onClick={() =>  back()         }>      {`<<` } Back            </button>\r\n                <button className=\"regular__button\" onClick={() =>  createTest()  }>      Create a Test {`>>`}    </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}