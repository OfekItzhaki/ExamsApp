{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\pages\\\\Admin\\\\MainPage\\\\ManageQuestions\\\\CreateEditQuestion\\\\CreateEditQuestion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { TagsInput } from '../../../../../Admin/TagsInput/TagsInput';\nimport styles from './CreateEditQuestion.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateEditQuestion = ({\n  field,\n  question\n}) => {\n  _s();\n\n  // ------------------------ Fetch Info Hooks -----------------------\n  const [questionTypes, setQuestionTypes] = useState(null);\n  const [questions, setQuestions] = useState(null); // ------------------------- Content Hooks -------------------------\n  // *Question Table*\n\n  const [type, setType] = useState(question ? question.type : \"\");\n  const [questionHeader, setQuestionHeader] = useState(question ? question.title : \"\");\n  const [questionText, setQuestionText] = useState(question ? question.text : \"\");\n  const [questionID, setQuestionID] = useState(question ? question.id + 1 : 0); // *Answers Table*\n\n  const [possibleAnswers, setPossibleAnswers] = useState(question ? question.answers : [{\n    \"id\": 0,\n    \"answer\": \"\",\n    \"correct\": false\n  }, {\n    \"id\": 1,\n    \"answer\": \"\",\n    \"correct\": false\n  }, {\n    \"id\": 2,\n    \"answer\": \"\",\n    \"correct\": false\n  }]);\n  const [answerID, setAnswerID] = useState(possibleAnswers ? possibleAnswers[possibleAnswers.length - 1].id + 1 : 0);\n  const [answersLayout, setAnswersLayout] = useState(\"vertical\"); // *Tags Table*\n\n  const [tags, setTags] = useState(question ? question.tags : \"\"); // -----------------------------------------------------------------\n\n  const selectedTags = tags => console.log(tags);\n\n  const initialState = () => {\n    console.log(\"returning to initial state\");\n    setType(questionTypes ? questionTypes[0] : \"\");\n    setQuestionHeader(\"\");\n    setQuestionText(\"\");\n    setQuestionID(questionID + 1);\n    setPossibleAnswers([{\n      \"id\": 0,\n      \"answer\": \"\",\n      \"correct\": false\n    }, {\n      \"id\": 1,\n      \"answer\": \"\",\n      \"correct\": false\n    }, {\n      \"id\": 2,\n      \"answer\": \"\",\n      \"correct\": false\n    }]);\n    setAnswerID(possibleAnswers ? possibleAnswers[possibleAnswers.length - 1].id + 1 : 0);\n    setTags(\"\");\n    setAnswersLayout(\"horizontal\");\n  };\n\n  const addAnswer = event => {\n    event.preventDefault();\n    let newPossibleAnswers = possibleAnswers;\n    newPossibleAnswers.push({\n      \"id\": answerID,\n      \"answer\": \"\",\n      correct: false\n    });\n    setPossibleAnswers(newPossibleAnswers);\n    setAnswerID(answerID + 1);\n  };\n\n  const removeAnswer = (event, id) => {\n    event.preventDefault();\n    console.log(\"remove answer id \" + id);\n    setPossibleAnswers(possibleAnswers.filter(answer => answer.id !== id));\n  };\n\n  const history = useHistory();\n\n  const back = () => {\n    history.goBack();\n  };\n\n  const show = () => {};\n\n  const handlePossibleAnswersChange = () => {\n    // console.log(\"possible answers changed\")\n    let correctAnswer_Counter = 0;\n    possibleAnswers && possibleAnswers.map(answer => {\n      let radio = document.getElementById(`radio_${answer.id}`);\n      radio.checked = answer.correct;\n\n      if (answer.correct === true) {\n        correctAnswer_Counter++;\n      }\n    });\n\n    if (correctAnswer_Counter === 0) {\n      setType(\"\"); // console.log(\"0 correct answers\")\n    } else if (correctAnswer_Counter === 1) {\n      setType(questionTypes[0].type); // console.log(\"1 correct answers\")\n    } else {\n      setType(questionTypes[1].type); // console.log(\"2+ correct answers\")\n    }\n  };\n\n  const handleTagsChange = () => {};\n\n  const handleAnswerClick = id => {\n    console.log(\"handle answer click\");\n    let newPossibleAnswers = possibleAnswers;\n    newPossibleAnswers.filter(answer => answer.id === id).map(answer => {\n      answer.correct = !answer.correct;\n      console.log(`answer_${id} state - ${answer.correct}`); // document.getElementById(`label_${id}`).text = {answer.correct === \"\"}\n\n      return answer;\n    });\n    setPossibleAnswers(newPossibleAnswers);\n    handlePossibleAnswersChange();\n  };\n\n  const handleLayoutChange = e => {\n    if (e.target.checked === true) {\n      setAnswersLayout(e.target.id);\n    }\n  };\n\n  const handleAnswerChanged = (id, a) => {\n    console.log(\"handle answer changed\");\n    let newPossibleAnswers = possibleAnswers;\n    newPossibleAnswers.filter(answer => answer.id === id).map(answer => {\n      answer.answer = a;\n      return answer;\n    });\n    setPossibleAnswers(newPossibleAnswers);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    saveQuestion();\n  };\n\n  const saveQuestion = () => {\n    fetch('http://localhost:8000/questions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: questionID,\n        tags: tags,\n        last_update: Date.now,\n        type: type,\n        title: questionHeader,\n        text: questionText,\n        difficulty: question && question.difficulty ? question.difficulty : \"low\",\n        answers: possibleAnswers,\n        num_of_tests: question && question.num_of_tests ? question.num_of_tests : 0,\n        answersLayout: answersLayout\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      initialState();\n    }).catch(err => console.log(`error ${err}`));\n  };\n\n  const fetchQuestions = () => {\n    fetch(\"http://localhost:8000/questions\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setQuestions(data);\n      setQuestionID(questionID ? questionID : data[data.length - 1].id + 1);\n      console.log(`Current questionID: ${data[data.length - 1].id + 1}`);\n    }).catch(err => console.log('error fetching questions:' + err));\n  };\n\n  const fetchQuestionTypes = () => {\n    fetch(\"http://localhost:8000/questionTypes\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setQuestionTypes(data);\n      setType(type ? type : data[0].type);\n    }).catch(err => console.log('error fetching question types:' + err));\n  }; // Meant to set the type according to the amount of the correct answers\n\n\n  useEffect(() => {\n    handlePossibleAnswersChange();\n  }, [possibleAnswers]); // Meant for setting the title of the document on the first render\n\n  useEffect(() => {\n    document.title = `${question === undefined ? \"Create\" : \"Edit\"} Question`;\n  }, [question]); // Meant for fetching the necessary information on first render\n\n  useEffect(() => {\n    let isMounted = true; // note mutable flag\n\n    if (isMounted) {\n      // add conditional check\n      fetchQuestions();\n      fetchQuestionTypes();\n    }\n\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create_edit_question noselect\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page__header\",\n      children: [\" \", question === undefined ? \"Create\" : \"Edit\", \" Question \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"new_question__form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content__section\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"question__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Field: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  id: \"field__label\",\n                  children: [\" \", field === undefined ? \"undefined\" : field, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Question type: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 24\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"question_type__select\",\n                  value: type,\n                  disabled: true,\n                  children: questionTypes && questionTypes.map(questionType => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: questionType.type,\n                    children: [\" \", questionType.type, \" \"]\n                  }, questionType.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 24\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Question header: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"required\",\n                  value: questionHeader,\n                  type: \"text\",\n                  placeholder: \"Enter your question here\",\n                  onChange: e => setQuestionHeader(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Question additional information: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"required\",\n                  value: questionText,\n                  type: \"text\",\n                  placeholder: \"Type something\",\n                  onChange: e => setQuestionText(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"answers__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: possibleAnswers && possibleAnswers.map(answer => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", answer.id === 0 && /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Possible answers: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 43\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"answer__td\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"\",\n                  onClick: e => removeAnswer(e, answer.id),\n                  children: \" X \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: `answer_${answer.id}`,\n                  name: \"answer\",\n                  type: \"text\",\n                  onChange: e => handleAnswerChanged(answer.id, e.target.value),\n                  placeholder: `Answer #${answer.id}`,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: `radio_${answer.id}`,\n                  name: questionTypes ? type === questionTypes[0] ? type : \"\" : \"default\",\n                  type: \"radio\",\n                  onClick: e => handleAnswerClick(answer.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  id: `label_${answer.id}`,\n                  htmlFor: `answer_${answer.id}`,\n                  children: [\"  \", answer.correct === true ? \"Correct\" : \"Incorrect\", \"  \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 193\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)]\n            }, answer.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer_layout__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            name: \"layout__label\",\n            children: \" Answers layout: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"vertical\",\n            type: \"radio\",\n            name: \"answer_layout\",\n            defaultChecked: true,\n            onChange: e => handleLayoutChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), \"    \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"vertical\",\n            children: \"  Vertical   \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 134\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"horizontal\",\n            type: \"radio\",\n            name: \"answer_layout\",\n            onChange: e => handleLayoutChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), \"    \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"horizontal\",\n            children: \"  Horizontal \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 134\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => addAnswer(e),\n            children: \" Add an Answer \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"tags__container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"tags__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Tags: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(TagsInput, {\n                  selectedTags: tags,\n                  handleTagsChange: handleTagsChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"buttons__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"regular__button\",\n          onClick: () => back(),\n          children: [\" \", `<<`, \" Back  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"regular__button\",\n          onClick: () => show(),\n          children: \"  Show         \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"regular__button\",\n          type: \"submit\",\n          children: [\"  Save \", `>>`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateEditQuestion, \"mejQJ9EtTLt7CWvioHOeaw7uFj8=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateEditQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateEditQuestion\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Admin/MainPage/ManageQuestions/CreateEditQuestion/CreateEditQuestion.js"],"names":["React","useState","useEffect","useHistory","TagsInput","styles","CreateEditQuestion","field","question","questionTypes","setQuestionTypes","questions","setQuestions","type","setType","questionHeader","setQuestionHeader","title","questionText","setQuestionText","text","questionID","setQuestionID","id","possibleAnswers","setPossibleAnswers","answers","answerID","setAnswerID","length","answersLayout","setAnswersLayout","tags","setTags","selectedTags","console","log","initialState","addAnswer","event","preventDefault","newPossibleAnswers","push","correct","removeAnswer","filter","answer","history","back","goBack","show","handlePossibleAnswersChange","correctAnswer_Counter","map","radio","document","getElementById","checked","handleTagsChange","handleAnswerClick","handleLayoutChange","e","target","handleAnswerChanged","a","handleSubmit","saveQuestion","fetch","method","headers","body","JSON","stringify","last_update","Date","now","difficulty","num_of_tests","then","res","json","data","catch","err","fetchQuestions","fetchQuestionTypes","undefined","isMounted","questionType","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport        { useHistory }          from 'react-router-dom';\r\nimport        { TagsInput }           from '../../../../../Admin/TagsInput/TagsInput';\r\nimport styles                         from './CreateEditQuestion.css';\r\n\r\n  export const CreateEditQuestion = ({ field, question }) => {\r\n\r\n  // ------------------------ Fetch Info Hooks -----------------------\r\n\r\n  const [questionTypes,       setQuestionTypes    ]  = useState(null);\r\n  const [questions,           setQuestions        ]  = useState(null);\r\n\r\n  // ------------------------- Content Hooks -------------------------\r\n\r\n  // *Question Table*\r\n  const [ type,               setType             ]  = useState(question ? question.type : \"\");\r\n  const [ questionHeader,     setQuestionHeader   ]  = useState(question ? question.title : \"\");\r\n  const [ questionText,       setQuestionText     ]  = useState(question ? question.text : \"\");\r\n  const [ questionID,         setQuestionID       ]  = useState(question ? question.id + 1 : 0);\r\n\r\n  // *Answers Table*\r\n  const [ possibleAnswers,    setPossibleAnswers  ]  = useState(\r\n    question ? question.answers : [\r\n      { \"id\": 0, \"answer\": \"\", \"correct\": false},\r\n      { \"id\": 1, \"answer\": \"\", \"correct\": false},\r\n      { \"id\": 2, \"answer\": \"\", \"correct\": false}\r\n    ]\r\n  );\r\n  const [ answerID,           setAnswerID         ]  = useState(possibleAnswers ? possibleAnswers[possibleAnswers.length - 1].id + 1: 0);\r\n  const [ answersLayout,      setAnswersLayout    ]  = useState(\"vertical\");\r\n\r\n  // *Tags Table*\r\n  const [ tags,               setTags             ]  = useState(question ? question.tags : \"\");\r\n\r\n  // -----------------------------------------------------------------\r\n\r\n  const selectedTags = tags => console.log(tags);\r\n\r\n  const initialState = () => {\r\n    console.log(\"returning to initial state\");\r\n    setType(questionTypes ? questionTypes[0] : \"\");\r\n    setQuestionHeader(\"\");\r\n    setQuestionText(\"\");\r\n    setQuestionID(questionID + 1);\r\n\r\n    setPossibleAnswers([\r\n      { \"id\": 0, \"answer\": \"\", \"correct\": false},\r\n      { \"id\": 1, \"answer\": \"\", \"correct\": false},\r\n      { \"id\": 2, \"answer\": \"\", \"correct\": false}\r\n    ]);\r\n\r\n    setAnswerID(possibleAnswers ? possibleAnswers[possibleAnswers.length - 1].id + 1: 0);\r\n    setTags(\"\");\r\n    setAnswersLayout(\"horizontal\");\r\n  }\r\n  \r\n  const addAnswer = (event) => {  \r\n    event.preventDefault();\r\n    let newPossibleAnswers = possibleAnswers;\r\n    newPossibleAnswers.push({ \"id\": answerID, \"answer\": \"\", correct: false });\r\n    setPossibleAnswers(newPossibleAnswers);\r\n    setAnswerID(answerID + 1);\r\n  }\r\n\r\n  const removeAnswer = (event, id) => { \r\n    event.preventDefault(); \r\n    console.log(\"remove answer id \" + id)\r\n    setPossibleAnswers(possibleAnswers.filter((answer) => answer.id !== id));\r\n  }\r\n  \r\n  const history = useHistory();\r\n  const back = () => {\r\n      history.goBack();\r\n  }\r\n\r\n  const show = () => {\r\n    \r\n  }\r\n\r\n  const handlePossibleAnswersChange = () => {\r\n    // console.log(\"possible answers changed\")\r\n    let correctAnswer_Counter = 0;\r\n    (possibleAnswers && possibleAnswers.map((answer) => {\r\n      let radio = document.getElementById(`radio_${answer.id}`);\r\n      radio.checked = answer.correct;\r\n      if (answer.correct === true) {\r\n        correctAnswer_Counter++;\r\n      }\r\n    }));\r\n\r\n    if (correctAnswer_Counter === 0) {\r\n      setType(\"\");\r\n      // console.log(\"0 correct answers\")\r\n    } else if (correctAnswer_Counter === 1) {\r\n      setType(questionTypes[0].type);\r\n      // console.log(\"1 correct answers\")\r\n    } else {\r\n      setType(questionTypes[1].type)\r\n      // console.log(\"2+ correct answers\")\r\n    }\r\n  }\r\n\r\n  const handleTagsChange = () => {\r\n    \r\n  }\r\n\r\n  const handleAnswerClick = (id) => {\r\n    console.log(\"handle answer click\");\r\n    let newPossibleAnswers = possibleAnswers;\r\n    newPossibleAnswers.filter((answer) => answer.id === id).map((answer) => {\r\n      answer.correct = !answer.correct;\r\n      console.log(`answer_${id} state - ${answer.correct}`);\r\n      // document.getElementById(`label_${id}`).text = {answer.correct === \"\"}\r\n      return answer;\r\n    });\r\n    setPossibleAnswers(newPossibleAnswers);\r\n    handlePossibleAnswersChange();\r\n  }\r\n\r\n  const handleLayoutChange = (e) => {\r\n    if (e.target.checked === true) {\r\n      setAnswersLayout(e.target.id);\r\n    }\r\n  }\r\n\r\n  const handleAnswerChanged = (id, a) => {\r\n    console.log(\"handle answer changed\");\r\n    let newPossibleAnswers = possibleAnswers;\r\n    newPossibleAnswers.filter((answer) => answer.id === id).map((answer) => {\r\n      answer.answer = a;\r\n      return answer;\r\n    });\r\n    setPossibleAnswers(newPossibleAnswers);\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    saveQuestion();\r\n  }\r\n\r\n  const saveQuestion = () => {\r\n    fetch('http://localhost:8000/questions', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n        id: questionID,\r\n        tags: tags,\r\n        last_update: Date.now,\r\n        type: type,\r\n        title: questionHeader,\r\n        text: questionText,\r\n        difficulty: (question && question.difficulty ? question.difficulty : \"low\"),\r\n        answers: possibleAnswers,\r\n        num_of_tests: (question && question.num_of_tests ? question.num_of_tests : 0),\r\n        answersLayout: answersLayout\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => { \r\n        console.log(data); \r\n        initialState(); \r\n      })\r\n      .catch((err) => console.log(`error ${err}`))\r\n  }\r\n\r\n  const fetchQuestions = () => {\r\n    fetch(\"http://localhost:8000/questions\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setQuestions(data); \r\n      setQuestionID(questionID ? questionID : data[data.length - 1].id + 1); \r\n      console.log(`Current questionID: ${data[data.length - 1].id + 1}`); \r\n    })\r\n    .catch((err) => console.log('error fetching questions:' + err))\r\n  }\r\n\r\n  const fetchQuestionTypes = () => {\r\n    fetch(\"http://localhost:8000/questionTypes\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setQuestionTypes(data); \r\n      setType(type ? type : data[0].type); \r\n    })\r\n    .catch((err) => console.log('error fetching question types:' + err))\r\n  }\r\n\r\n  // Meant to set the type according to the amount of the correct answers\r\n  useEffect(() => {\r\n    handlePossibleAnswersChange();\r\n  }, [possibleAnswers])\r\n\r\n  // Meant for setting the title of the document on the first render\r\n  useEffect(() => {\r\n    document.title = `${question === undefined ? \"Create\" : \"Edit\"} Question`;\r\n  }, [question])\r\n\r\n    // Meant for fetching the necessary information on first render\r\n  useEffect(() => {\r\n    let isMounted = true;           // note mutable flag\r\n\r\n    if (isMounted) {                // add conditional check\r\n      fetchQuestions();\r\n      fetchQuestionTypes();\r\n    }\r\n\r\n    return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"create_edit_question noselect\">\r\n      <h1 className=\"page__header\"> { question === undefined ? \"Create\" : \"Edit\" } Question </h1>\r\n      <form className=\"new_question__form\" onSubmit={handleSubmit}>\r\n\r\n        <div className=\"content__section\">\r\n          <table id=\"question__table\">\r\n            <tbody>\r\n              <tr>\r\n                <td> <label> Field: </label> </td>\r\n                <td> <label id=\"field__label\"> { field === undefined ? \"undefined\" : field } </label> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                  <td> <label> Question type: </label> </td>\r\n                  <td> <select id=\"question_type__select\" value={type} disabled>\r\n                          {questionTypes && questionTypes.map((questionType) => (\r\n                            <option key={questionType.id} value={questionType.type}> {questionType.type} </option>\r\n                          ))}\r\n                        </select> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td> <label> Question header: </label> </td>\r\n                <td> <input      className=\"required\" value={questionHeader} type=\"text\" placeholder=\"Enter your question here\"  onChange={(e) => setQuestionHeader(e.target.value)} required/> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td> <label> Question additional information: </label> </td>\r\n                <td> <input className=\"required\" value={questionText}   type=\"text\" placeholder=\"Type something\"            onChange={(e) => setQuestionText(e.target.value)}    required/> </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div className=\"content__section\">\r\n          <table id=\"answers__table\">\r\n            <tbody>\r\n\r\n              {possibleAnswers && possibleAnswers.map((answer) => (\r\n              <tr key={answer.id}>\r\n                <td> { answer.id === 0 && <label> Possible answers: </label> } </td>\r\n                <td className=\"answer__td\"> \r\n                  <button type=\"\" onClick={(e) => removeAnswer(e, answer.id)} > X </button>\r\n                  <input   id={`answer_${answer.id}` } name=\"answer\" type=\"text\" onChange={(e) => handleAnswerChanged(answer.id, e.target.value)} placeholder={`Answer #${answer.id}`} required/> \r\n                  <input   id={`radio_${answer.id}`  } name={questionTypes ? (type === questionTypes[0] ? type : \"\") : \"default\"} type=\"radio\" onClick={(e) => handleAnswerClick(answer.id)} /> <label id={`label_${answer.id}`} htmlFor={`answer_${answer.id}`}   >  {answer.correct === true ? \"Correct\" : \"Incorrect\"}  </label>\r\n                </td>\r\n              </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <div className=\"answer_layout__container\">\r\n            <label name=\"layout__label\"> Answers layout: </label>\r\n            <input id=\"vertical\"    type=\"radio\"  name=\"answer_layout\"  defaultChecked onChange={(e) => handleLayoutChange(e)} />    <label htmlFor=\"vertical\"   >  Vertical   </label>\r\n            <input id=\"horizontal\"  type=\"radio\"  name=\"answer_layout\"                 onChange={(e) => handleLayoutChange(e)} />    <label htmlFor=\"horizontal\" >  Horizontal </label>\r\n            <button onClick={(e) => addAnswer(e)}> Add an Answer </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"tags__container\">\r\n          <table id=\"tags__table\">\r\n            <tbody>\r\n              <tr>\r\n                <td> <label> Tags: </label> </td>\r\n                <td> <TagsInput selectedTags={tags} handleTagsChange={handleTagsChange}/> </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div id=\"buttons__container\">\r\n          <button className=\"regular__button\" onClick={() => back() }> {`<<` } Back  </button>\r\n          <button className=\"regular__button\" onClick={() => show() }>  Show         </button>\r\n          <button className=\"regular__button\" type=\"submit\"          >  Save {`>>` } </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};"]},"metadata":{},"sourceType":"module"}