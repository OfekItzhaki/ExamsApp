{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.completionZshTemplate = exports.completionShTemplate = void 0;\nexports.completionShTemplate = `###-begin-{{app_name}}-completions-###\n#\n# yargs command completion script\n#\n# Installation: {{app_path}} {{completion_command}} >> ~/.bashrc\n#    or {{app_path}} {{completion_command}} >> ~/.bash_profile on OSX.\n#\n_yargs_completions()\n{\n    local cur_word args type_list\n\n    cur_word=\"\\${COMP_WORDS[COMP_CWORD]}\"\n    args=(\"\\${COMP_WORDS[@]}\")\n\n    # ask yargs to generate completions.\n    type_list=$({{app_path}} --get-yargs-completions \"\\${args[@]}\")\n\n    COMPREPLY=( $(compgen -W \"\\${type_list}\" -- \\${cur_word}) )\n\n    # if no match was found, fall back to filename completion\n    if [ \\${#COMPREPLY[@]} -eq 0 ]; then\n      COMPREPLY=()\n    fi\n\n    return 0\n}\ncomplete -o default -F _yargs_completions {{app_name}}\n###-end-{{app_name}}-completions-###\n`;\nexports.completionZshTemplate = `###-begin-{{app_name}}-completions-###\n#\n# yargs command completion script\n#\n# Installation: {{app_path}} {{completion_command}} >> ~/.zshrc\n#    or {{app_path}} {{completion_command}} >> ~/.zsh_profile on OSX.\n#\n_{{app_name}}_yargs_completions()\n{\n  local reply\n  local si=$IFS\n  IFS=$'\\n' reply=($(COMP_CWORD=\"$((CURRENT-1))\" COMP_LINE=\"$BUFFER\" COMP_POINT=\"$CURSOR\" {{app_path}} --get-yargs-completions \"\\${words[@]}\"))\n  IFS=$si\n  _describe 'values' reply\n}\ncompdef _{{app_name}}_yargs_completions {{app_name}}\n###-end-{{app_name}}-completions-###\n`;","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/node_modules/yargs/build/lib/completion-templates.js"],"names":["Object","defineProperty","exports","value","completionZshTemplate","completionShTemplate"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,qBAAR,GAAgCF,OAAO,CAACG,oBAAR,GAA+B,KAAK,CAApE;AACAH,OAAO,CAACG,oBAAR,GAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5BA;AA6BAH,OAAO,CAACE,qBAAR,GAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.completionZshTemplate = exports.completionShTemplate = void 0;\r\nexports.completionShTemplate = `###-begin-{{app_name}}-completions-###\r\n#\r\n# yargs command completion script\r\n#\r\n# Installation: {{app_path}} {{completion_command}} >> ~/.bashrc\r\n#    or {{app_path}} {{completion_command}} >> ~/.bash_profile on OSX.\r\n#\r\n_yargs_completions()\r\n{\r\n    local cur_word args type_list\r\n\r\n    cur_word=\"\\${COMP_WORDS[COMP_CWORD]}\"\r\n    args=(\"\\${COMP_WORDS[@]}\")\r\n\r\n    # ask yargs to generate completions.\r\n    type_list=$({{app_path}} --get-yargs-completions \"\\${args[@]}\")\r\n\r\n    COMPREPLY=( $(compgen -W \"\\${type_list}\" -- \\${cur_word}) )\r\n\r\n    # if no match was found, fall back to filename completion\r\n    if [ \\${#COMPREPLY[@]} -eq 0 ]; then\r\n      COMPREPLY=()\r\n    fi\r\n\r\n    return 0\r\n}\r\ncomplete -o default -F _yargs_completions {{app_name}}\r\n###-end-{{app_name}}-completions-###\r\n`;\r\nexports.completionZshTemplate = `###-begin-{{app_name}}-completions-###\r\n#\r\n# yargs command completion script\r\n#\r\n# Installation: {{app_path}} {{completion_command}} >> ~/.zshrc\r\n#    or {{app_path}} {{completion_command}} >> ~/.zsh_profile on OSX.\r\n#\r\n_{{app_name}}_yargs_completions()\r\n{\r\n  local reply\r\n  local si=$IFS\r\n  IFS=$'\\n' reply=($(COMP_CWORD=\"$((CURRENT-1))\" COMP_LINE=\"$BUFFER\" COMP_POINT=\"$CURSOR\" {{app_path}} --get-yargs-completions \"\\${words[@]}\"))\r\n  IFS=$si\r\n  _describe 'values' reply\r\n}\r\ncompdef _{{app_name}}_yargs_completions {{app_name}}\r\n###-end-{{app_name}}-completions-###\r\n`;\r\n"]},"metadata":{},"sourceType":"script"}