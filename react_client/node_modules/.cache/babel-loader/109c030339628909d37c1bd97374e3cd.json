{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\pages\\\\Admin\\\\ManageTests\\\\ManageTests.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styles from './ManageTests.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ManageTests = props => {\n  _s();\n\n  const [filter, setFilter] = useState(false);\n  const [filterContent, setFilterContent] = useState(\"\");\n  const history = useHistory();\n\n  const Back = () => {\n    history.goBack();\n  };\n\n  const Create_Test = () => {\n    // Open in the same window\n    window.location.href = \"/admin/create-test\";\n  };\n\n  useEffect(() => {\n    document.title = \"Manage Tests\";\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage_tests noselect\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"headers__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" Available Tests for \", props.field ? props.field.title : \"\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"field\",\n        children: [\" \", props.field, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"filter__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"filter_keywords__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Filter name by keywords: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"filter__input\",\n          type: \"text\",\n          value: filterContent,\n          onChange: e => {\n            setFilterContent(e.target.value);\n            filterContent === \"\" ? setFilter(false) : setFilter(true);\n          },\n          placeholder: \"Enter a list of keywords separated by commas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"filter_state\",\n          children: [\" Filter is \", filter === false ? \"OFF\" : \"ON\", \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"amount_filtered\",\n        children: [\" Showing \", `AMOUNT`, \" of total \", `AMOUNT`, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"table__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"tests__table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"header_row\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" ID \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Question Text and Tags \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Last Update \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Question Type \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" # of Tests \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        type: \"text\",\n        id: \"showing_tests\",\n        children: [\" showing 1-\", `AMOUNT`, \" of available Tests \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttons__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => Back(),\n        children: [\"      \", `<<`, \" Back            \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => Create_Test(),\n        children: [\"      Create a Test \", `>>`, \"    \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ManageTests, \"yutHw+G1rpz559a0R2wGSQ2HiWE=\", false, function () {\n  return [useHistory];\n});\n\n_c = ManageTests;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageTests\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Admin/ManageTests/ManageTests.js"],"names":["React","useEffect","useState","useHistory","styles","ManageTests","props","filter","setFilter","filterContent","setFilterContent","history","Back","goBack","Create_Test","window","location","href","document","title","field","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA6C,OAA7C;AACA,SAAgBC,UAAhB,QAA6C,kBAA7C;AACA,OAAOC,MAAP,MAA6C,mBAA7C;;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAElC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAMS,OAAO,GAAGR,UAAU,EAA1B;;AAEA,QAAMS,IAAI,GAAG,MAAM;AACfD,IAAAA,OAAO,CAACE,MAAR;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtB;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,oBAAvB;AACH,GAHD;;AAKAhB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,QAAQ,CAACC,KAAT,GAAiB,cAAjB;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,4BACI;AAAK,MAAA,EAAE,EAAC,oBAAR;AAAA,8BACI;AAAA,4CAA0Bb,KAAK,CAACc,KAAN,GAAcd,KAAK,CAACc,KAAN,CAAYD,KAA1B,GAAkC,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,EAAE,EAAC,OAAP;AAAA,wBAAiBb,KAAK,CAACc,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,EAAE,EAAC,mBAAR;AAAA,8BACI;AAAK,QAAA,EAAE,EAAC,4BAAR;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,EAAE,EAAC,eAAV;AAA0B,UAAA,IAAI,EAAC,MAA/B;AAAsC,UAAA,KAAK,EAAEX,aAA7C;AACQ,UAAA,QAAQ,EAAGY,CAAD,IAAO;AAAEX,YAAAA,gBAAgB,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AAAkCd,YAAAA,aAAa,KAAK,EAAlB,GAAuBD,SAAS,CAAC,KAAD,CAAhC,GAA0CA,SAAS,CAAC,IAAD,CAAnD;AAA0D,WADvH;AAEQ,UAAA,WAAW,EAAC;AAFpB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAO,UAAA,EAAE,EAAC,cAAV;AAAA,oCAAqCD,MAAM,KAAK,KAAX,GAAmB,KAAnB,GAA2B,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAO,QAAA,EAAE,EAAC,iBAAV;AAAA,gCAAuC,QAAvC,gBAA2D,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAeI;AAAK,MAAA,EAAE,EAAC,kBAAR;AAAA,8BACI;AAAO,QAAA,EAAE,EAAC,cAAV;AAAA,+BACI;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAyBI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,eAAtB;AAAA,kCAAmD,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ,eA2CI;AAAK,MAAA,EAAE,EAAC,oBAAR;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,MAAOK,IAAI,EAA5B;AAAA,6BAAiD,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAOE,WAAW,EAAnC;AAAA,2CAA+D,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA3CJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmDH,CAvEM;;GAAMT,W;UAKOF,U;;;KALPE,W","sourcesContent":["import React, { useEffect, useState }   from 'react';\r\nimport        { useHistory }            from 'react-router-dom';\r\nimport styles                           from './ManageTests.css'\r\n\r\nexport const ManageTests = (props) => {\r\n\r\n    const [filter, setFilter] = useState(false);\r\n    const [filterContent, setFilterContent] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const Back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const Create_Test = () => {\r\n        // Open in the same window\r\n        window.location.href = \"/admin/create-test\";\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = \"Manage Tests\";\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"manage_tests noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1> Available Tests for {props.field ? props.field.title : \"\"} </h1>\r\n                <h1 id=\"field\"> {props.field} </h1>\r\n            </div>\r\n            <div id=\"filter__container\">\r\n                <div id=\"filter_keywords__container\">    \r\n                    <label> Filter name by keywords: </label>\r\n                    <input id=\"filter__input\" type=\"text\" value={filterContent}\r\n                            onChange={(e) => { setFilterContent(e.target.value); filterContent === \"\" ? setFilter(false) : setFilter(true)} }\r\n                            placeholder=\"Enter a list of keywords separated by commas\"/>\r\n                    <label id=\"filter_state\"> Filter is {filter === false ? \"OFF\" : \"ON\"}  </label>\r\n                </div>\r\n                <label id=\"amount_filtered\"> Showing {`AMOUNT`} of total {`AMOUNT`} </label>\r\n            </div>\r\n            <div id=\"table__container\">\r\n                <table id=\"tests__table\">\r\n                    <tbody>\r\n                        <tr className=\"header_row\">\r\n                            <th> ID </th>\r\n                            <th> Question Text and Tags </th>\r\n                            <th> Last Update </th>\r\n                            <th> Question Type </th>\r\n                            <th> # of Tests </th>\r\n                        </tr>\r\n                        <tr >\r\n                            {/* {children.map(({ ID, Link, name, update, type, version }) => (\r\n                                \r\n                            <td> {ID} </td>\r\n                            <td> {Link} </td>\r\n                            <td> {name} </td>\r\n                            <td> {update} </td>\r\n                            <td> {type} </td>\r\n                            <td> {version} </td>\r\n                            <td> </td>\r\n                            ))} */}\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                \r\n                <label type=\"text\" id=\"showing_tests\"> showing 1-{`AMOUNT`} of available Tests </label>\r\n            </div>\r\n\r\n            <div id=\"buttons__container\">\r\n                <button onClick={() =>  Back()         }>      {`<<` } Back            </button>\r\n                <button onClick={() =>  Create_Test()  }>      Create a Test {`>>`}    </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}