{"ast":null,"code":"import _slicedToArray from\"C:/Users/ofeki/OneDrive/\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4/ExamApp design ver/ExamsApp/react_client_exams_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{filter}from'minimatch';import{useHistory}from'react-router-dom';import styles from'./ReportByRespondentName.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ReportByRespondentName(){// ------------------------ Fetch Info Hooks -----------------------\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),students=_useState2[0],setStudents=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),studentTests=_useState4[0],setStudentTests=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),tests=_useState6[0],setTests=_useState6[1];// ------------------------- Content Hooks -------------------------\nvar _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),filterContent=_useState8[0],setFilterContent=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),respondentName=_useState10[0],setRespondentName=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),respondentID=_useState12[0],setRespondentID=_useState12[1];var handleRespondentClick=function handleRespondentClick(name,id){console.log(\"handle respondent click\");setRespondentName(name);setRespondentID(id);};// ?????????????????????????????\n// const calcAverageGrade = () => {\n//     const tests = [];\n//     // !== null && respondentID !== 0\n//     if (studentTests) {\n//         studentTests.filter((studentTest) => studentTest.studentID === respondentID).map((studentTest) =>\n//             tests.push(studentTest)\n//         );\n//         console.log(tests);\n//     }\n// }\nvar history=useHistory();var Back=function Back(){history.goBack();};var fetchStudents=function fetchStudents(){fetch(\"http://localhost:8000/students\",{method:'GET'}).then(function(res){return res.json();}).then(function(data){return setStudents(data);}).catch(function(err){return console.log('error fetching students:'+err);});};var fetchStudentTests=function fetchStudentTests(){fetch(\"http://localhost:8000/studentTests\",{method:'GET'}).then(function(res){return res.json();}).then(function(data){return setStudentTests(data);}).catch(function(err){return console.log('error fetching student tests:'+err);});};var fetchTests=function fetchTests(){fetch(\"http://localhost:8000/tests\",{method:'GET'}).then(function(res){return res.json();}).then(function(data){return setTests(data);}).catch(function(err){return console.log('error tests:'+err);});};useEffect(function(){document.title=\"Report by Name\";},[]);useEffect(function(){var isMounted=true;// note mutable flag\nif(isMounted){// add conditional check \nfetchStudents();fetchStudentTests();fetchTests();}return function(){isMounted=false;};// cleanup toggles value, if unmounted\n},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"report_by_name noselect\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"headers__container\",children:/*#__PURE__*/_jsx(\"h1\",{children:\" Report by Respondent Name \"})}),/*#__PURE__*/_jsxs(\"div\",{id:\"content__container\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"respondent__container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\" Find a respondent \"}),/*#__PURE__*/_jsx(\"p\",{children:\" To find a respondent, start typing a name below, \"}),/*#__PURE__*/_jsx(\"p\",{children:\" then select a respondent from the list that will appear. \"}),/*#__PURE__*/_jsxs(\"div\",{id:\"filter_name__container\",children:[/*#__PURE__*/_jsx(\"label\",{children:\" Respondent's name: \"}),/*#__PURE__*/_jsx(\"input\",{id:\"filter__input\",type:\"text\",value:filterContent,placeholder:\"Enter a name\",onChange:function onChange(e){return setFilterContent(e.target.value);}})]}),/*#__PURE__*/_jsx(\"table\",{id:\"respondents__table\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{className:\"header_row border_bottom\",children:[/*#__PURE__*/_jsx(\"th\",{children:\" ID             \"}),/*#__PURE__*/_jsx(\"th\",{children:\" Respondent     \"}),/*#__PURE__*/_jsx(\"th\",{children:\" Email          \"}),/*#__PURE__*/_jsx(\"th\",{children:\" Last Activity  \"})]}),students&&students.filter(function(student){return student.fullName.includes(filterContent);}).map(function(student){return/*#__PURE__*/_jsxs(\"tr\",{onClick:function onClick(){return handleRespondentClick(student.fullName,student.studentID);},children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",student.studentID,\"        \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",student.fullName,\"         \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",student.email,\"            \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",student.lastActivity,\"     \"]})]},student.studentID);})]})})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"activity_report__container\",className:respondentID===null?\"hidden\":\"visible\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\" Activity Report for: \",respondentName,\" \"]}),/*#__PURE__*/_jsxs(\"div\",{id:\"above_activity__container\",children:[/*#__PURE__*/_jsx(\"label\",{type:\"text\",id:\"explanation\",children:\"    Click a test to show its results           \"}),/*#__PURE__*/_jsxs(\"label\",{type:\"text\",id:\"average_grade\",children:[\"  Average grade for a test: \",\"               \"]})]}),/*#__PURE__*/_jsx(\"table\",{id:\"activity_report__table\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{className:\"header_row border_bottom\",children:[/*#__PURE__*/_jsx(\"th\",{children:\" Instance       \"}),/*#__PURE__*/_jsx(\"th\",{children:\" Test ID        \"}),/*#__PURE__*/_jsx(\"th\",{children:\" Test Name      \"}),/*#__PURE__*/_jsx(\"th\",{children:\" Grade          \"}),/*#__PURE__*/_jsx(\"th\",{children:\" Time Submitted \"})]}),studentTests&&studentTests.filter(function(studentTest){return studentTest.studentID===respondentID;}).map(function(studentTest){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",studentTest.stID,\"                 \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",studentTest.testID,\"               \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",studentTest.testName,\"             \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",studentTest.grade,\"                \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",studentTest.submitted,\"            \"]})]},studentTest.studentID);})]})})]}),/*#__PURE__*/_jsx(\"div\",{id:\"buttons__container\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"regular__button\",onClick:function onClick(){return Back();},children:[\" \",\"<<\",\" Back \"]})})]})]});};","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Admin/MainPage/ReportByRespondentName/ReportByRespondentName.js"],"names":["React","useEffect","useState","filter","useHistory","styles","ReportByRespondentName","students","setStudents","studentTests","setStudentTests","tests","setTests","filterContent","setFilterContent","respondentName","setRespondentName","respondentID","setRespondentID","handleRespondentClick","name","id","console","log","history","Back","goBack","fetchStudents","fetch","method","then","res","json","data","catch","err","fetchStudentTests","fetchTests","document","title","isMounted","e","target","value","student","fullName","includes","map","studentID","email","lastActivity","studentTest","stID","testID","testName","grade","submitted"],"mappings":"qQAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA6C,OAA7C,CACA,OAAgBC,MAAhB,KAA6C,WAA7C,CACA,OAAgBC,UAAhB,KAA6C,kBAA7C,CACA,MAAOC,CAAAA,MAAP,KAA6C,8BAA7C,C,wFAEA,cAAe,SAASC,CAAAA,sBAAT,EAAkC,CAE7C;AAEA,cAA2DJ,QAAQ,CAAC,IAAD,CAAnE,wCAAQK,QAAR,eAA6BC,WAA7B,eACA,eAA2DN,QAAQ,CAAC,IAAD,CAAnE,yCAAQO,YAAR,eAA6BC,eAA7B,eACA,eAA2DR,QAAQ,CAAC,IAAD,CAAnE,yCAAQS,KAAR,eAA6BC,QAA7B,eAEA;AAEA,eAA2DV,QAAQ,CAAC,EAAD,CAAnE,yCAAQW,aAAR,eAA6BC,gBAA7B,eACA,eAA2DZ,QAAQ,CAAC,EAAD,CAAnE,0CAAQa,cAAR,gBAA6BC,iBAA7B,gBACA,gBAA2Dd,QAAQ,CAAC,IAAD,CAAnE,2CAAQe,YAAR,gBAA6BC,eAA7B,gBAEA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,IAAD,CAAOC,EAAP,CAAc,CACxCC,OAAO,CAACC,GAAR,CAAY,yBAAZ,EACAP,iBAAiB,CAACI,IAAD,CAAjB,CACAF,eAAe,CAACG,EAAD,CAAf,CACH,CAJD,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMG,CAAAA,OAAO,CAAGpB,UAAU,EAA1B,CAEA,GAAMqB,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACfD,OAAO,CAACE,MAAR,GACH,CAFD,CAIA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxBC,KAAK,CAAC,gCAAD,CAAmC,CACtCC,MAAM,CAAE,KAD8B,CAAnC,CAAL,CAGCC,IAHD,CAGM,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAHN,EAICF,IAJD,CAIM,SAACG,IAAD,QAAUzB,CAAAA,WAAW,CAACyB,IAAD,CAArB,EAJN,EAKCC,KALD,CAKO,SAACC,GAAD,QAASb,CAAAA,OAAO,CAACC,GAAR,CAAY,2BAA6BY,GAAzC,CAAT,EALP,EAMH,CAPD,CASA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC5BR,KAAK,CAAC,oCAAD,CAAuC,CAC1CC,MAAM,CAAE,KADkC,CAAvC,CAAL,CAGCC,IAHD,CAGM,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAHN,EAICF,IAJD,CAIM,SAACG,IAAD,QAAUvB,CAAAA,eAAe,CAACuB,IAAD,CAAzB,EAJN,EAKCC,KALD,CAKO,SAACC,GAAD,QAASb,CAAAA,OAAO,CAACC,GAAR,CAAY,gCAAkCY,GAA9C,CAAT,EALP,EAMH,CAPD,CASA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrBT,KAAK,CAAC,6BAAD,CAAgC,CACnCC,MAAM,CAAE,KAD2B,CAAhC,CAAL,CAGCC,IAHD,CAGM,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAHN,EAICF,IAJD,CAIM,SAACG,IAAD,QAAUrB,CAAAA,QAAQ,CAACqB,IAAD,CAAlB,EAJN,EAKCC,KALD,CAKO,SAACC,GAAD,QAASb,CAAAA,OAAO,CAACC,GAAR,CAAY,eAAiBY,GAA7B,CAAT,EALP,EAMH,CAPD,CASAlC,SAAS,CAAC,UAAM,CACZqC,QAAQ,CAACC,KAAT,CAAiB,gBAAjB,CACH,CAFQ,CAEN,EAFM,CAAT,CAKAtC,SAAS,CAAC,UAAM,CACZ,GAAIuC,CAAAA,SAAS,CAAG,IAAhB,CAAgC;AAEhC,GAAIA,SAAJ,CAAe,CAAiB;AAC5Bb,aAAa,GACbS,iBAAiB,GACjBC,UAAU,GACb,CAED,MAAO,WAAM,CAAEG,SAAS,CAAG,KAAZ,CAAmB,CAAlC,CAAoC;AACvC,CAVQ,CAUN,EAVM,CAAT,CAYA,mBACI,aAAK,SAAS,CAAC,yBAAf,wBACI,YAAK,EAAE,CAAC,oBAAR,uBACI,mDADJ,EADJ,cAKI,aAAK,EAAE,CAAC,oBAAR,wBACI,aAAK,EAAE,CAAC,uBAAR,wBACI,2CADJ,cAEI,yEAFJ,cAGI,iFAHJ,cAII,aAAK,EAAE,CAAC,wBAAR,wBACI,+CADJ,cAEI,cAAO,EAAE,CAAC,eAAV,CAA0B,IAAI,CAAC,MAA/B,CAAsC,KAAK,CAAE3B,aAA7C,CAA4D,WAAW,CAAC,cAAxE,CAAuF,QAAQ,CAAE,kBAAC4B,CAAD,QAAO3B,CAAAA,gBAAgB,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvB,EAAjG,EAFJ,GAJJ,cASI,cAAO,EAAE,CAAC,oBAAV,uBACI,sCACI,YAAI,SAAS,CAAC,0BAAd,wBACI,wCADJ,cAEI,wCAFJ,cAGI,wCAHJ,cAII,wCAJJ,GADJ,CAQKpC,QAAQ,EAAIA,QAAQ,CAACJ,MAAT,CAAgB,SAACyC,OAAD,QAAaA,CAAAA,OAAO,CAACC,QAAR,CAAiBC,QAAjB,CAA0BjC,aAA1B,CAAb,EAAhB,EAAuEkC,GAAvE,CAA2E,SAACH,OAAD,qBACxF,YAA4B,OAAO,CAAE,yBAAMzB,CAAAA,qBAAqB,CAACyB,OAAO,CAACC,QAAT,CAAmBD,OAAO,CAACI,SAA3B,CAA3B,EAArC,wBACI,0BAAMJ,OAAO,CAACI,SAAd,cADJ,cAEI,0BAAMJ,OAAO,CAACC,QAAd,eAFJ,cAGI,0BAAMD,OAAO,CAACK,KAAd,kBAHJ,cAII,0BAAML,OAAO,CAACM,YAAd,WAJJ,GAASN,OAAO,CAACI,SAAjB,CADwF,EAA3E,CARjB,GADJ,EATJ,GADJ,cA+BI,aAAK,EAAE,CAAC,4BAAR,CAAqC,SAAS,CAAE/B,YAAY,GAAK,IAAjB,CAAwB,QAAxB,CAAmC,SAAnF,wBACI,+CAA2BF,cAA3B,OADJ,cAEI,aAAK,EAAE,CAAC,2BAAR,wBACI,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,aAAtB,6DADJ,cAEI,eAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,eAAtB,8DAFJ,GAFJ,cAOI,cAAO,EAAE,CAAC,wBAAV,uBACI,sCACI,YAAI,SAAS,CAAC,0BAAd,wBACI,wCADJ,cAEI,wCAFJ,cAGI,wCAHJ,cAII,wCAJJ,cAKI,wCALJ,GADJ,CAWKN,YAAY,EAAIA,YAAY,CAACN,MAAb,CAAoB,SAACgD,WAAD,QAAiBA,CAAAA,WAAW,CAACH,SAAZ,GAA0B/B,YAA3C,EAApB,EAA6E8B,GAA7E,CAAiF,SAACI,WAAD,qBAClG,mCACI,0BAAMA,WAAW,CAACC,IAAlB,uBADJ,cAEI,0BAAMD,WAAW,CAACE,MAAlB,qBAFJ,cAGI,0BAAMF,WAAW,CAACG,QAAlB,mBAHJ,cAII,0BAAMH,WAAW,CAACI,KAAlB,sBAJJ,cAKI,0BAAMJ,WAAW,CAACK,SAAlB,kBALJ,GAASL,WAAW,CAACH,SAArB,CADkG,EAAjF,CAXrB,GADJ,EAPJ,GA/BJ,cAuFI,YAAK,EAAE,CAAC,oBAAR,uBACQ,gBAAQ,SAAS,CAAC,iBAAlB,CAAoC,OAAO,CAAE,yBAAMvB,CAAAA,IAAI,EAAV,EAA7C,+BADR,EAvFJ,GALJ,GADJ,CAmGH","sourcesContent":["import React, { useEffect, useState }   from 'react';\r\nimport        { filter }                from 'minimatch';\r\nimport        { useHistory }            from 'react-router-dom';\r\nimport styles                           from './ReportByRespondentName.css';\r\n\r\nexport default function ReportByRespondentName() {\r\n    \r\n    // ------------------------ Fetch Info Hooks -----------------------\r\n    \r\n    const [ students,            setStudents         ]       = useState(null); \r\n    const [ studentTests,        setStudentTests     ]       = useState(null); \r\n    const [ tests,               setTests            ]       = useState(null); \r\n\r\n    // ------------------------- Content Hooks -------------------------\r\n\r\n    const [ filterContent,       setFilterContent    ]       = useState(\"\");\r\n    const [ respondentName,      setRespondentName   ]       = useState(\"\");\r\n    const [ respondentID,        setRespondentID     ]       = useState(null);\r\n\r\n    const handleRespondentClick = (name, id) => {\r\n        console.log(\"handle respondent click\")\r\n        setRespondentName(name);\r\n        setRespondentID(id);\r\n    }\r\n\r\n\r\n    // ?????????????????????????????\r\n    // const calcAverageGrade = () => {\r\n    //     const tests = [];\r\n    //     // !== null && respondentID !== 0\r\n    //     if (studentTests) {\r\n    //         studentTests.filter((studentTest) => studentTest.studentID === respondentID).map((studentTest) =>\r\n    //             tests.push(studentTest)\r\n    //         );\r\n    //         console.log(tests);\r\n    //     }\r\n    // }\r\n\r\n    const history = useHistory();\r\n\r\n    const Back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const fetchStudents = () => {\r\n        fetch(\"http://localhost:8000/students\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => setStudents(data))\r\n        .catch((err) => console.log('error fetching students:' + err))\r\n    }\r\n\r\n    const fetchStudentTests = () => {\r\n        fetch(\"http://localhost:8000/studentTests\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => setStudentTests(data))\r\n        .catch((err) => console.log('error fetching student tests:' + err))\r\n    }\r\n    \r\n    const fetchTests = () => {\r\n        fetch(\"http://localhost:8000/tests\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => setTests(data))\r\n        .catch((err) => console.log('error tests:' + err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = \"Report by Name\";\r\n    }, [])\r\n    \r\n\r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n\r\n        if (isMounted) {                // add conditional check \r\n            fetchStudents();\r\n            fetchStudentTests();\r\n            fetchTests();\r\n        }\r\n\r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"report_by_name noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1> Report by Respondent Name </h1>\r\n            </div>\r\n\r\n            <div id=\"content__container\">\r\n                <div id=\"respondent__container\">\r\n                    <h2> Find a respondent </h2>\r\n                    <p> To find a respondent, start typing a name below, </p>\r\n                    <p> then select a respondent from the list that will appear. </p>\r\n                    <div id=\"filter_name__container\">    \r\n                        <label> Respondent's name: </label>\r\n                        <input id=\"filter__input\" type='text' value={filterContent} placeholder=\"Enter a name\" onChange={(e) => setFilterContent(e.target.value) } />\r\n                    </div>\r\n\r\n                    <table id=\"respondents__table\">\r\n                        <tbody>\r\n                            <tr className=\"header_row border_bottom\">\r\n                                <th> ID             </th>\r\n                                <th> Respondent     </th>\r\n                                <th> Email          </th>\r\n                                <th> Last Activity  </th>\r\n                            </tr>\r\n\r\n                            {students && students.filter((student) => student.fullName.includes(filterContent)).map((student) => (\r\n                            <tr key={student.studentID} onClick={() => handleRespondentClick(student.fullName, student.studentID)}>\r\n                                <td> {student.studentID}        </td>\r\n                                <td> {student.fullName}         </td>\r\n                                <td> {student.email}            </td>\r\n                                <td> {student.lastActivity}     </td>\r\n                            </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div id=\"activity_report__container\" className={respondentID === null ? \"hidden\" : \"visible\"}>\r\n                    <h2> Activity Report for: {respondentName} </h2>\r\n                    <div id=\"above_activity__container\">\r\n                        <label type=\"text\" id=\"explanation\">    Click a test to show its results           </label>\r\n                        <label type=\"text\" id=\"average_grade\">  Average grade for a test: {}               </label>\r\n                    </div>\r\n\r\n                    <table id=\"activity_report__table\">\r\n                        <tbody>\r\n                            <tr className=\"header_row border_bottom\">\r\n                                <th> Instance       </th>\r\n                                <th> Test ID        </th>\r\n                                <th> Test Name      </th>\r\n                                <th> Grade          </th>\r\n                                <th> Time Submitted </th>\r\n                            </tr>\r\n\r\n                            {/* { tests && tests.filter((test) => test.testID === studentTest.testID).map((test) => <td> {console.log(test.testName)} </td>) } */}\r\n\r\n                            {studentTests && studentTests.filter((studentTest) => studentTest.studentID === respondentID).map((studentTest) => (\r\n                            <tr key={studentTest.studentID}>\r\n                                <td> {studentTest.stID}                 </td>\r\n                                <td> {studentTest.testID}               </td>\r\n                                <td> {studentTest.testName}             </td>\r\n                                <td> {studentTest.grade}                </td>\r\n                                <td> {studentTest.submitted}            </td>\r\n                            </tr>\r\n                            ))}\r\n\r\n\r\n                            {/* { tests && tests.map((test) => {\r\n                                return (\r\n                                <>\r\n                                    { studentTests && studentTests.filter((studentTest) => studentTest.studentID === respondentID).map((studentTest) => {\r\n                                        if (test.testID === studentTest.testID) \r\n                                        {\r\n                                            return (\r\n                                            <>\r\n                                                <tr key={studentTest.studentID}>\r\n                                                    <td> {studentTest.stID}                 </td>\r\n                                                    <td> {studentTest.testID}               </td>\r\n\r\n                                                    { studentTest.testID === test.testID && <td> {test.testName} </td> }\r\n                                                    <td> {studentTest.testName}             </td>\r\n                                                    <td> {studentTest.grade}                </td>\r\n                                                    <td> {studentTest.submitted}            </td>\r\n                                                </tr>                                    \r\n                                            </>)\r\n                                        }\r\n                                    })}\r\n                                </>)\r\n                            }) } */}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div id=\"buttons__container\">\r\n                        <button className=\"regular__button\" onClick={() => Back() }> {`<<` } Back </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}