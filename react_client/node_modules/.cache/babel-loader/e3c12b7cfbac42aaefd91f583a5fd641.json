{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\pages\\\\Admin\\\\CreateEditQuestion\\\\CreateEditQuestion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '../../../shared/Button/Button';\nimport { useHistory } from 'react-router-dom';\nimport { TagsInput } from '../../../Admin/TagsInput/TagsInput';\nimport styles from './CreateEditQuestion.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateEditQuestion = ({\n  action,\n  field,\n  question\n}) => {\n  _s();\n\n  // ------------------------- Content Hooks -------------------------\n  const [questionTypes, setQuestionTypes] = useState(null); // *Question Table*\n\n  const [type, setType] = useState(\"\");\n  const [questionHeader, setQuestionHeader] = useState(question && question ? question.title : \"\");\n  const [questionText, setQuestionText] = useState(question && question ? question.text : \"\"); // *Answers Table*\n\n  const [possibleAnswers, setPossibleAnswers] = useState([{\n    \"id\": 0,\n    \"answer\": \"\",\n    \"correct\": false\n  }, {\n    \"id\": 1,\n    \"answer\": \"\",\n    \"correct\": false\n  }, {\n    \"id\": 2,\n    \"answer\": \"\",\n    \"correct\": false\n  }]);\n  const [answerID, setAnswerID] = useState(0);\n  const [answersLayout, setAnswersLayout] = useState(\"\"); // *Tags Table*\n\n  const [tags, setTags] = useState(\"\"); // -----------------------------------------------------------------\n\n  const selectedTags = tags => console.log(tags); // const selectedTags = useMemo(() => {\n  //   console.log(tags)\n  //   return tags;\n  // });\n\n\n  const history = useHistory();\n\n  const removeAnswer = id => {\n    console.log(\"got to remove answer func\");\n    console.log(\"id\" + id);\n    let newPossibleAnswers = possibleAnswers;\n    newPossibleAnswers.filter(answer => answer.id !== id);\n    setPossibleAnswers(newPossibleAnswers);\n  };\n\n  const addAnswer = () => {\n    let id = answerID;\n    possibleAnswers.push({\n      \"id\": id + 1,\n      \"answer\": \"\",\n      correct: false\n    });\n  };\n\n  const back = () => {\n    history.goBack();\n  };\n\n  const show = () => {};\n\n  const handleAnswerClick = id => {\n    console.log(\"handle answer click\");\n    let newPossibleAnswers = possibleAnswers;\n    newPossibleAnswers.filter(answer => answer.id === id).map(answer => {\n      console.log(answer.correct);\n      answer.correct = !answer.correct;\n    });\n    setPossibleAnswers(newPossibleAnswers);\n  };\n\n  const handleLayoutChange = e => {\n    if (e.target.checked === true) {\n      setAnswersLayout(e.target.id);\n    }\n  };\n\n  const handleAnswerChanged = (id, a) => {\n    console.log(\"handle answer changed\");\n    let newPossibleAnswers = possibleAnswers;\n    newPossibleAnswers.filter(answer => answer.id === id).map(answer => {\n      answer.answer = a;\n      console.log(a);\n    });\n    setPossibleAnswers(newPossibleAnswers);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    saveQuestion();\n    let id = answerID;\n    console.log(id);\n    setAnswerID(id + 1);\n  };\n\n  const saveQuestion = () => {\n    fetch('http://localhost:8000/questions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: answerID + 1,\n        tags: tags,\n        last_update: Date.now,\n        type: type,\n        title: questionHeader,\n        text: questionText,\n        difficulty: question && question.difficulty ? question.difficulty : \"low\",\n        answers: possibleAnswers,\n        num_of_tests: question && question.num_of_tests ? question.num_of_tests : 0,\n        answersLayout: answersLayout\n      })\n    }).then(res => res.json()).then(data => console.log(data)) //setData(result.rows)\n    .catch(err => console.log('error'));\n  }; // const [verticalChecked, setVerticalChecked] = useState(true);\n  // const handleLayoutClick = () => setVerticalChecked(!verticalChecked);\n  //    In jsx:\n  //   onChange={handleLayoutClick} checked={verticalChecked}\n  //   onChange={handleLayoutClick} checked={!verticalChecked}\n\n\n  const fetchQuestionTypes = () => {\n    fetch(\"http://localhost:8000/questionTypes\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setQuestionTypes(data);\n      setType(data[1]);\n    }).catch(err => console.log('error fetching question types:' + err));\n  };\n\n  useEffect(() => {\n    document.title = `${action === undefined ? \"Create\" : \"Edit\"} Question`;\n  }, [action]);\n  useEffect(() => {\n    let isMounted = true; // note mutable flag\n\n    if (isMounted) {\n      // add conditional check\n      fetchQuestionTypes();\n    }\n\n    possibleAnswers.map(answer => document.getElementById(`radio_${answer.id}`).checked = answer.correct // ,console.log(document.getElementById(`radio_${answer.id}`).checked)\n    );\n    setAnswerID(possibleAnswers && possibleAnswers ? possibleAnswers[possibleAnswers.length - 1].id : 0);\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, [question, possibleAnswers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create_edit_question noselect\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page__header\",\n      children: [\" \", action === undefined ? \"Create\" : \"Edit\", \" Question \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"new_question__form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content__section\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"question__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Field: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  id: \"field__label\",\n                  children: [\" \", field === undefined ? \"undefined\" : field, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Question type: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 24\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"question_type__select\",\n                  defaultValue: type,\n                  children: questionTypes && questionTypes.map(questionType => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: questionType.type,\n                    onChange: e => setType(e.target.value),\n                    children: [\" \", questionType.type, \" \"]\n                  }, questionType.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 24\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Question header: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"question_header__input\",\n                  defaultValue: questionHeader,\n                  type: \"text\",\n                  placeholder: \"Enter your question here\",\n                  onChange: e => setQuestionHeader(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Question additional information: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"question_information__input\",\n                  defaultValue: questionText,\n                  type: \"text\",\n                  placeholder: \"Type something\",\n                  onChange: e => setQuestionText(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"answers__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: possibleAnswers && possibleAnswers.map(answer => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", answer.id === 0 && /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Possible answers: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 43\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => removeAnswer(answer.id),\n                  children: \" X \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: `answer_${answer.id}`,\n                  type: \"text\",\n                  defaultValue: answer.answer,\n                  onChange: e => handleAnswerChanged(e.target.id, e.target.answer),\n                  placeholder: `Answer #${answer.id}`,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: `radio_${answer.id}`,\n                  type: \"radio\",\n                  checked: answer.correct,\n                  onChange: e => handleAnswerClick(answer.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 22\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `answer_${answer.id}`,\n                  children: \"  Incorrect  \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 151\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)]\n            }, answer.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer_layout__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            name: \"layout__label\",\n            children: \" Answers layout: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"vertical\",\n            type: \"radio\",\n            name: \"answer_layout\",\n            defaultChecked: true,\n            onChange: e => handleLayoutChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), \"    \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"vertical\",\n            children: \"  Vertical   \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 134\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"horizontal\",\n            type: \"radio\",\n            name: \"answer_layout\",\n            onChange: e => handleLayoutChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), \"    \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"horizontal\",\n            children: \"  Horizontal \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 134\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addAnswer(),\n            children: \" Add an Answer \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"tags__container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"tags__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Tags: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(TagsInput, {\n                  selectedTags: selectedTags\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"buttons__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => back(),\n          children: [\" \", `<<`, \" Back  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => show(),\n          children: \"  Show         \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: [\"  Save \", `>>`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateEditQuestion, \"r0ssbB+LV/D26sCeP7aJt1XACac=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateEditQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateEditQuestion\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Admin/CreateEditQuestion/CreateEditQuestion.js"],"names":["React","useState","useEffect","Button","useHistory","TagsInput","styles","CreateEditQuestion","action","field","question","questionTypes","setQuestionTypes","type","setType","questionHeader","setQuestionHeader","title","questionText","setQuestionText","text","possibleAnswers","setPossibleAnswers","answerID","setAnswerID","answersLayout","setAnswersLayout","tags","setTags","selectedTags","console","log","history","removeAnswer","id","newPossibleAnswers","filter","answer","addAnswer","push","correct","back","goBack","show","handleAnswerClick","map","handleLayoutChange","e","target","checked","handleAnswerChanged","a","handleSubmit","event","preventDefault","saveQuestion","fetch","method","headers","body","JSON","stringify","last_update","Date","now","difficulty","answers","num_of_tests","then","res","json","data","catch","err","fetchQuestionTypes","document","undefined","isMounted","getElementById","length","questionType","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport        { Button }              from '../../../shared/Button/Button';\r\nimport        { useHistory }          from 'react-router-dom';\r\nimport        { TagsInput }           from '../../../Admin/TagsInput/TagsInput';\r\nimport styles                         from './CreateEditQuestion.css';\r\n\r\n\r\n  export const CreateEditQuestion = ({ action, field, question }) => {\r\n\r\n  // ------------------------- Content Hooks -------------------------\r\n\r\n  const [questionTypes,       setQuestionTypes    ]  = useState(null);\r\n\r\n  // *Question Table*\r\n  const [ type,               setType             ]  = useState(\"\");\r\n  const [ questionHeader,     setQuestionHeader   ]  = useState(question && question ? question.title : \"\");\r\n  const [ questionText,       setQuestionText     ]  = useState(question && question ? question.text : \"\");\r\n\r\n  // *Answers Table*\r\n  const [ possibleAnswers,    setPossibleAnswers  ]  = useState([\r\n    { \"id\": 0, \"answer\": \"\", \"correct\": false},\r\n    { \"id\": 1, \"answer\": \"\", \"correct\": false},\r\n    { \"id\": 2, \"answer\": \"\", \"correct\": false}\r\n  ]);\r\n  const [ answerID,           setAnswerID         ]  = useState(0);\r\n  const [ answersLayout,      setAnswersLayout    ]  = useState(\"\");\r\n\r\n  // *Tags Table*\r\n  const [ tags,               setTags             ]  = useState(\"\");\r\n\r\n  // -----------------------------------------------------------------\r\n  const selectedTags = tags => console.log(tags);\r\n  // const selectedTags = useMemo(() => {\r\n  //   console.log(tags)\r\n  //   return tags;\r\n  // });\r\n\r\n  const history = useHistory();\r\n  \r\n  const removeAnswer = (id) => {  \r\n    console.log(\"got to remove answer func\")\r\n    console.log(\"id\" + id)\r\n    let newPossibleAnswers = possibleAnswers;\r\n    newPossibleAnswers.filter((answer) => answer.id !== id);\r\n    setPossibleAnswers(newPossibleAnswers);\r\n  }\r\n\r\n  const addAnswer = () => {  \r\n    let id = answerID;\r\n    possibleAnswers.push({ \"id\": id + 1, \"answer\": \"\", correct: false });\r\n  }\r\n\r\n  const back = () => {\r\n      history.goBack();\r\n  }\r\n\r\n  const show = () => {\r\n    \r\n  }\r\n\r\n  const handleAnswerClick = (id) => {\r\n    console.log(\"handle answer click\");\r\n    let newPossibleAnswers = possibleAnswers;\r\n    newPossibleAnswers.filter((answer) => answer.id === id).map((answer) => {\r\n      console.log(answer.correct);\r\n      answer.correct = !answer.correct;\r\n    });\r\n    setPossibleAnswers(newPossibleAnswers);\r\n  }\r\n\r\n  const handleLayoutChange = (e) => {\r\n    if (e.target.checked === true) {\r\n      setAnswersLayout(e.target.id);\r\n    }\r\n  }\r\n\r\n  const handleAnswerChanged = (id, a) => {\r\n    console.log(\"handle answer changed\");\r\n    let newPossibleAnswers = possibleAnswers;\r\n    newPossibleAnswers.filter((answer) => answer.id === id).map((answer) => {\r\n      answer.answer = a;\r\n      console.log(a);\r\n    });\r\n    setPossibleAnswers(newPossibleAnswers);\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    saveQuestion();\r\n\r\n    let id = answerID;\r\n    console.log(id);\r\n    setAnswerID(id + 1);\r\n  }\r\n\r\n  const saveQuestion = () => {\r\n    fetch('http://localhost:8000/questions', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n\r\n        id: answerID + 1,\r\n        tags: tags,\r\n        last_update: Date.now,\r\n        type: type,\r\n        title: questionHeader,\r\n        text: questionText,\r\n        difficulty: (question && question.difficulty ? question.difficulty : \"low\"),\r\n        answers: possibleAnswers,\r\n        num_of_tests: (question && question.num_of_tests ? question.num_of_tests : 0),\r\n        answersLayout: answersLayout\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => console.log(data)) //setData(result.rows)\r\n      .catch((err) => console.log('error'))\r\n  }\r\n\r\n  // const [verticalChecked, setVerticalChecked] = useState(true);\r\n  // const handleLayoutClick = () => setVerticalChecked(!verticalChecked);\r\n\r\n  //    In jsx:\r\n  //   onChange={handleLayoutClick} checked={verticalChecked}\r\n  //   onChange={handleLayoutClick} checked={!verticalChecked}\r\n\r\n  const fetchQuestionTypes = () => {\r\n    fetch(\"http://localhost:8000/questionTypes\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { setQuestionTypes(data); setType(data[1]); })\r\n    .catch((err) => console.log('error fetching question types:' + err))\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = `${action === undefined ? \"Create\" : \"Edit\"} Question`;\r\n  }, [action])\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;           // note mutable flag\r\n\r\n    if (isMounted) {                // add conditional check\r\n      fetchQuestionTypes();\r\n    }\r\n\r\n    possibleAnswers.map((answer) => (\r\n      document.getElementById(`radio_${answer.id}`).checked = answer.correct\r\n      // ,console.log(document.getElementById(`radio_${answer.id}`).checked)\r\n    ))\r\n\r\n    setAnswerID(possibleAnswers && possibleAnswers ? possibleAnswers[possibleAnswers.length - 1].id : 0);\r\n\r\n    return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n  }, [question, possibleAnswers])\r\n\r\n  return (\r\n    <div className=\"create_edit_question noselect\">\r\n      <h1 className=\"page__header\"> { action === undefined ? \"Create\" : \"Edit\" } Question </h1>\r\n      <form className=\"new_question__form\" onSubmit={handleSubmit}>\r\n\r\n        <div className=\"content__section\">\r\n\r\n          {/* Might not work, JUST FOR NOW !!! */}\r\n          <table id=\"question__table\">\r\n            <tbody>\r\n              <tr>\r\n                <td> <label> Field: </label> </td>\r\n                <td> <label id=\"field__label\"> { field === undefined ? \"undefined\" : field } </label> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                  <td> <label> Question type: </label> </td>\r\n                  <td> <select id=\"question_type__select\" defaultValue={type}>\r\n                            {questionTypes && questionTypes.map((questionType) => (\r\n                              <option key={questionType.id} value={questionType.type} onChange={(e) => setType(e.target.value)} > {questionType.type} </option>\r\n                            ))}\r\n                        </select> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td> <label> Question header: </label> </td>\r\n                <td> <input id=\"question_header__input\"      defaultValue={questionHeader} type=\"text\" placeholder=\"Enter your question here\"  onChange={(e) => setQuestionHeader(e.target.value)} required/> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td> <label> Question additional information: </label> </td>\r\n                <td> <input id=\"question_information__input\" defaultValue={questionText}   type=\"text\" placeholder=\"Type something\"            onChange={(e) => setQuestionText(e.target.value)}    required/> </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div className=\"content__section\">\r\n          <table id=\"answers__table\">\r\n            <tbody>\r\n\r\n              {possibleAnswers && possibleAnswers.map((answer) => (\r\n              <tr key={answer.id}>\r\n                <td> { answer.id === 0 && <label> Possible answers: </label> } </td>\r\n                <td> <button  onClick={() => removeAnswer(answer.id)} > X </button> </td>\r\n                <td> <input   id={`answer_${answer.id}` } type='text'  defaultValue={answer.answer} onChange={(e) => handleAnswerChanged(e.target.id, e.target.answer)} placeholder={`Answer #${answer.id}`} required/> </td>\r\n                <td> <input   id={`radio_${answer.id}`  } type=\"radio\" checked={answer.correct}     onChange={(e) => handleAnswerClick(answer.id)} /> <label htmlFor={`answer_${answer.id}`}   >  Incorrect  </label> </td>\r\n              </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <div className=\"answer_layout__container\">\r\n            <label name=\"layout__label\"> Answers layout: </label>\r\n            <input id=\"vertical\"    type=\"radio\"  name=\"answer_layout\"  defaultChecked onChange={(e) => handleLayoutChange(e)} />    <label htmlFor=\"vertical\"   >  Vertical   </label>\r\n            <input id=\"horizontal\"  type=\"radio\"  name=\"answer_layout\"                 onChange={(e) => handleLayoutChange(e)} />    <label htmlFor=\"horizontal\" >  Horizontal </label>\r\n            <button onClick={() => addAnswer()}> Add an Answer </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"tags__container\">\r\n          <table id=\"tags__table\">\r\n            <tbody>\r\n              <tr>\r\n                <td> <label> Tags: </label> </td>\r\n                {/* <input id=\"tags__input\" type=\"text\" placeholder=\"Enter tags\"/> */}\r\n                <td> <TagsInput selectedTags={selectedTags}/> </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div id=\"buttons__container\">\r\n          <button onClick={() => back() }> {`<<` } Back  </button>\r\n          <button onClick={() => show() }>  Show         </button>\r\n          <button type=\"submit\"          >  Save {`>>` } </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};"]},"metadata":{},"sourceType":"module"}