{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\pages\\\\Admin\\\\MainPage\\\\Reports\\\\TestReport\\\\TestReport.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { SummaryTable } from '../../../../../Admin/SummaryTable/SummaryTable';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport styles from './TestReport.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TestReport = () => {\n  _s();\n\n  // ----------------------------- Fetch Info Hooks ----------------------------\n  const [studentTests, setStudentTests] = useState(null);\n  const [test, setTest] = useState(null);\n  const [field, setField] = useState(\"\");\n  const [dateRange, setDateRange] = useState(\"\"); // const [ questions,          setQuestions              ] = useState([]);\n  // ------------------------------ Summary Hooks ------------------------------\n\n  const [numOfSubmissions, setNumOfSubmissions] = useState(0);\n  const [numPassed, setNumPassed] = useState(0);\n  const [totalGrades, setTotalGrades] = useState(0);\n  const [passingPercentage, setPassingPercentage] = useState(0);\n  const [averageGrade, setAverageGrade] = useState(0);\n  const [medianGradse, setMedianGrade] = useState(0); // const [ numOfQuestions,      setNumOfQuestions      ]       = useState(0);\n  // ------------------------------ Grades Hooks -------------------------------\n\n  const [respondentChosen, setRespondentChosen] = useState(false); // ---------------------------- Statistics Hooks -----------------------------\n\n  const [filterContent, setFilterContent] = useState(\"\"); // ---------------------------------------------------------------------------\n\n  const location = useLocation(); // for location state\n\n  const history = useHistory();\n\n  const back = () => {\n    history.goBack();\n  };\n\n  const expandAll = () => {};\n\n  const exportToExecl = () => {};\n\n  const printReport = () => {};\n\n  const scanThroughStudentTests = () => {\n    let gradeArray = [];\n    studentTests && studentTests.map(studentTest => function () {\n      setNumOfSubmissions(numOfSubmissions + 1);\n      gradeArray.push(studentTest.grade);\n      setTotalGrades(totalGrades + studentTest.grade);\n      if (studentTest.grade >= test.passingGrade) setNumPassed(numPassed + 1);\n    });\n  };\n\n  const calc = () => {\n    // Calc passing percentage -> passed divide by total submissions (multiply by 100 to get the percentage)\n    setPassingPercentage(numPassed / numOfSubmissions * 100); // Calc average grade -> total grades divide by total submissions\n\n    setAverageGrade(totalGrades / numOfSubmissions); // Calc median grade ->\n  };\n\n  const countNumberOfQuestions = () => {\n    let counter = 0;\n    test && test.questions.map(() => counter++);\n    return counter;\n  };\n\n  const fetchStudentTests = () => {\n    fetch(\"http://localhost:8000/studentTests\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setStudentTests(data);\n      scanThroughStudentTests();\n    }).catch(err => console.log('error fetching student tests:' + err));\n  };\n\n  useEffect(() => {\n    document.title = \"Test Report\";\n  }, []);\n  useEffect(() => {\n    let isMounted = true; // note mutable flag\n\n    if (isMounted) {\n      // add conditional check\n      fetchStudentTests();\n    }\n\n    setField(location.state.field);\n    setTest(location.state.test);\n    setDateRange(location.state.dateRange);\n    countNumberOfQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test_report noselect\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"headers__container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" Test result for \", field, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"content__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"summary__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Summary \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"summary_tables__container\",\n          children: test && /*#__PURE__*/_jsxDEV(SummaryTable, {\n            test: test,\n            dateRange: dateRange,\n            numOfSubmissions: numOfSubmissions,\n            countNumberOfQuestions: countNumberOfQuestions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"grades__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"grades__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"header_row space_under border_bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"        ID                                      \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"        Respondent                              \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"        Submitted                               \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"        Number of Questions Answered            \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"        Grade                                   \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), studentTests && studentTests.map(studentTest => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"buttons__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"regular__button\",\n            onClick: () => back(),\n            children: [\"             \", `<<`, \" Back         \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"regular__button\",\n            onClick: () => exportToExecl(),\n            children: \"    Export To Excel     \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"regular__button\",\n            onClick: () => printReport(),\n            children: \"      Print Report        \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TestReport, \"vMHdplsXyW2cb8tT9/7782NKPMY=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = TestReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestReport\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Admin/MainPage/Reports/TestReport/TestReport.js"],"names":["React","useEffect","useState","SummaryTable","useHistory","useLocation","styles","TestReport","studentTests","setStudentTests","test","setTest","field","setField","dateRange","setDateRange","numOfSubmissions","setNumOfSubmissions","numPassed","setNumPassed","totalGrades","setTotalGrades","passingPercentage","setPassingPercentage","averageGrade","setAverageGrade","medianGradse","setMedianGrade","respondentChosen","setRespondentChosen","filterContent","setFilterContent","location","history","back","goBack","expandAll","exportToExecl","printReport","scanThroughStudentTests","gradeArray","map","studentTest","push","grade","passingGrade","calc","countNumberOfQuestions","counter","questions","fetchStudentTests","fetch","method","then","res","json","data","catch","err","console","log","document","title","isMounted","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAkBC,SAAlB,EAA6BC,QAA7B,QAAsD,OAAtD;AACA,SAAkBC,YAAlB,QAAsD,gDAAtD;AACA,SAAkBC,UAAlB,EAA8BC,WAA9B,QAAsD,kBAAtD;AACA,OAAOC,MAAP,MAAsD,kBAAtD;;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAE5B;AAEA,QAAM,CAAEC,YAAF,EAAsBC,eAAtB,IAAoDP,QAAQ,CAAC,IAAD,CAAlE;AAEA,QAAM,CAAEQ,IAAF,EAAsBC,OAAtB,IAAoDT,QAAQ,CAAC,IAAD,CAAlE;AACA,QAAM,CAAEU,KAAF,EAAsBC,QAAtB,IAAoDX,QAAQ,CAAC,EAAD,CAAlE;AACA,QAAM,CAAEY,SAAF,EAAsBC,YAAtB,IAAoDb,QAAQ,CAAC,EAAD,CAAlE,CAR4B,CAS5B;AAEA;;AAEA,QAAM,CAAEc,gBAAF,EAAsBC,mBAAtB,IAAoDf,QAAQ,CAAC,CAAD,CAAlE;AACA,QAAM,CAAEgB,SAAF,EAAsBC,YAAtB,IAAoDjB,QAAQ,CAAC,CAAD,CAAlE;AACA,QAAM,CAAEkB,WAAF,EAAsBC,cAAtB,IAAoDnB,QAAQ,CAAC,CAAD,CAAlE;AACA,QAAM,CAAEoB,iBAAF,EAAsBC,oBAAtB,IAAoDrB,QAAQ,CAAC,CAAD,CAAlE;AACA,QAAM,CAAEsB,YAAF,EAAsBC,eAAtB,IAAoDvB,QAAQ,CAAC,CAAD,CAAlE;AACA,QAAM,CAAEwB,YAAF,EAAsBC,cAAtB,IAAoDzB,QAAQ,CAAC,CAAD,CAAlE,CAlB4B,CAmB5B;AAEA;;AAEA,QAAM,CAAE0B,gBAAF,EAAsBC,mBAAtB,IAAoD3B,QAAQ,CAAC,KAAD,CAAlE,CAvB4B,CAyB5B;;AAEA,QAAM,CAAE4B,aAAF,EAAsBC,gBAAtB,IAAoD7B,QAAQ,CAAC,EAAD,CAAlE,CA3B4B,CA6B5B;;AAEA,QAAM8B,QAAQ,GAAG3B,WAAW,EAA5B,CA/B4B,CA+BI;;AAChC,QAAM4B,OAAO,GAAG7B,UAAU,EAA1B;;AAEA,QAAM8B,IAAI,GAAG,MAAM;AACfD,IAAAA,OAAO,CAACE,MAAR;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM,CAEvB,CAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM,CAE3B,CAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM,CAEzB,CAFD;;AAIA,QAAMC,uBAAuB,GAAG,MAAM;AAClC,QAAIC,UAAU,GAAG,EAAjB;AACAhC,IAAAA,YAAY,IAAIA,YAAY,CAACiC,GAAb,CAAkBC,WAAD,IAAiB,YAAU;AACxDzB,MAAAA,mBAAmB,CAACD,gBAAgB,GAAG,CAApB,CAAnB;AACAwB,MAAAA,UAAU,CAACG,IAAX,CAAgBD,WAAW,CAACE,KAA5B;AACAvB,MAAAA,cAAc,CAACD,WAAW,GAAGsB,WAAW,CAACE,KAA3B,CAAd;AAEA,UAAIF,WAAW,CAACE,KAAZ,IAAqBlC,IAAI,CAACmC,YAA9B,EAA4C1B,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;AAC/C,KANe,CAAhB;AAOH,GATD;;AAWA,QAAM4B,IAAI,GAAG,MAAM;AAEf;AACAvB,IAAAA,oBAAoB,CAAGL,SAAS,GAAGF,gBAAb,GAAiC,GAAnC,CAApB,CAHe,CAKf;;AACAS,IAAAA,eAAe,CAAEL,WAAW,GAAGJ,gBAAhB,CAAf,CANe,CAQf;AACH,GATD;;AAWA,QAAM+B,sBAAsB,GAAG,MAAM;AACjC,QAAIC,OAAO,GAAG,CAAd;AACAtC,IAAAA,IAAI,IAAIA,IAAI,CAACuC,SAAL,CAAeR,GAAf,CAAmB,MAAMO,OAAO,EAAhC,CAAR;AACA,WAAOA,OAAP;AACH,GAJD;;AAMA,QAAME,iBAAiB,GAAG,MAAM;AAC5BC,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,MAAAA,MAAM,EAAE;AADkC,KAAvC,CAAL,CAGCC,IAHD,CAGOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHf,EAICF,IAJD,CAIOG,IAAD,IAAU;AACd/C,MAAAA,eAAe,CAAC+C,IAAD,CAAf;AACAjB,MAAAA,uBAAuB;AACxB,KAPD,EAQCkB,KARD,CAQQC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,kCAAkCF,GAA9C,CARhB;AASH,GAVD;;AAYAzD,EAAAA,SAAS,CAAC,MAAM;AACZ4D,IAAAA,QAAQ,CAACC,KAAT,GAAiB,aAAjB;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA7D,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI8D,SAAS,GAAG,IAAhB,CADY,CACoB;;AAEhC,QAAIA,SAAJ,EAAe;AAAiB;AAC5Bb,MAAAA,iBAAiB;AACpB;;AAEDrC,IAAAA,QAAQ,CAACmB,QAAQ,CAACgC,KAAT,CAAepD,KAAhB,CAAR;AACAD,IAAAA,OAAO,CAACqB,QAAQ,CAACgC,KAAT,CAAetD,IAAhB,CAAP;AACAK,IAAAA,YAAY,CAACiB,QAAQ,CAACgC,KAAT,CAAelD,SAAhB,CAAZ;AAEAiC,IAAAA,sBAAsB;AACzB,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACI;AAAK,MAAA,EAAE,EAAC,oBAAR;AAAA,6BACI;AAAA,wCAAsBnC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,EAAE,EAAC,oBAAR;AAAA,8BACI;AAAK,QAAA,EAAE,EAAC,oBAAR;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,EAAE,EAAC,2BAAR;AAAA,oBACKF,IAAI,iBAAI,QAAC,YAAD;AAAc,YAAA,IAAI,EAAEA,IAApB;AAA0B,YAAA,SAAS,EAAEI,SAArC;AAAgD,YAAA,gBAAgB,EAAEE,gBAAlE;AAAqF,YAAA,sBAAsB,EAAE+B;AAA7G;AAAA;AAAA;AAAA;AAAA;AADb;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,EAAE,EAAC,mBAAR;AAAA,gCAEI;AAAO,UAAA,EAAE,EAAC,eAAV;AAAA,iCACI;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,sCAAd;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EASKvC,YAAY,IAAIA,YAAY,CAACiC,GAAb,CAAkBC,WAAD,iBAC9B,qCADa,CATrB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAmBI;AAAK,UAAA,EAAE,EAAC,oBAAR;AAAA,kCACI;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AAAoC,YAAA,OAAO,EAAE,MAAMR,IAAI,EAAvD;AAAA,wCAA0E,IAA1E;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AAAoC,YAAA,OAAO,EAAE,MAAMG,aAAa,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AAAoC,YAAA,OAAO,EAAE,MAAMC,WAAW,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH,CArJM;;GAAM/B,U;UA+BQF,W,EACDD,U;;;KAhCPG,U","sourcesContent":["import React,   { useEffect, useState }          from 'react';\r\nimport          { SummaryTable }                 from '../../../../../Admin/SummaryTable/SummaryTable';\r\nimport          { useHistory, useLocation }      from 'react-router-dom';\r\nimport styles                                    from './TestReport.css'\r\n\r\nexport const TestReport = () => {\r\n\r\n    // ----------------------------- Fetch Info Hooks ----------------------------\r\n\r\n    const [ studentTests,       setStudentTests           ] = useState(null);\r\n\r\n    const [ test,               setTest                   ] = useState(null);\r\n    const [ field,              setField                  ] = useState(\"\");\r\n    const [ dateRange,          setDateRange              ] = useState(\"\");\r\n    // const [ questions,          setQuestions              ] = useState([]);\r\n    \r\n    // ------------------------------ Summary Hooks ------------------------------\r\n    \r\n    const [ numOfSubmissions,   setNumOfSubmissions       ] = useState(0);\r\n    const [ numPassed,          setNumPassed              ] = useState(0);\r\n    const [ totalGrades,        setTotalGrades            ] = useState(0);\r\n    const [ passingPercentage,  setPassingPercentage      ] = useState(0);\r\n    const [ averageGrade,       setAverageGrade           ] = useState(0);\r\n    const [ medianGradse,       setMedianGrade            ] = useState(0);\r\n    // const [ numOfQuestions,      setNumOfQuestions      ]       = useState(0);\r\n\r\n    // ------------------------------ Grades Hooks -------------------------------\r\n\r\n    const [ respondentChosen,   setRespondentChosen       ] = useState(false);\r\n\r\n    // ---------------------------- Statistics Hooks -----------------------------\r\n\r\n    const [ filterContent,      setFilterContent          ] = useState(\"\");\r\n\r\n    // ---------------------------------------------------------------------------\r\n\r\n    const location = useLocation(); // for location state\r\n    const history = useHistory();\r\n\r\n    const back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const expandAll = () => {\r\n\r\n    }\r\n\r\n    const exportToExecl = () => {\r\n\r\n    }\r\n\r\n    const printReport = () => {\r\n\r\n    }\r\n\r\n    const scanThroughStudentTests = () => {\r\n        let gradeArray = [];\r\n        studentTests && studentTests.map((studentTest) => function(){\r\n            setNumOfSubmissions(numOfSubmissions + 1);\r\n            gradeArray.push(studentTest.grade);\r\n            setTotalGrades(totalGrades + studentTest.grade);\r\n\r\n            if (studentTest.grade >= test.passingGrade) setNumPassed(numPassed + 1);\r\n        });\r\n    }\r\n\r\n    const calc = () => {\r\n\r\n        // Calc passing percentage -> passed divide by total submissions (multiply by 100 to get the percentage)\r\n        setPassingPercentage( (numPassed / numOfSubmissions) * 100 );\r\n\r\n        // Calc average grade -> total grades divide by total submissions\r\n        setAverageGrade( totalGrades / numOfSubmissions);\r\n\r\n        // Calc median grade ->\r\n    }\r\n\r\n    const countNumberOfQuestions = () => {\r\n        let counter = 0;\r\n        test && test.questions.map(() => counter++);\r\n        return counter;\r\n    }\r\n\r\n    const fetchStudentTests = () => {\r\n        fetch(\"http://localhost:8000/studentTests\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n          setStudentTests(data); \r\n          scanThroughStudentTests();\r\n        })\r\n        .catch((err) => console.log('error fetching student tests:' + err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = \"Test Report\";\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n\r\n        if (isMounted) {                // add conditional check\r\n            fetchStudentTests();\r\n        }\r\n\r\n        setField(location.state.field);\r\n        setTest(location.state.test)\r\n        setDateRange(location.state.dateRange);\r\n\r\n        countNumberOfQuestions();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"test_report noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1> Test result for {field} </h1>\r\n            </div>\r\n\r\n            <div id=\"content__container\">\r\n                <div id=\"summary__container\">\r\n                    <h1> Summary </h1>\r\n                    <div id=\"summary_tables__container\">\r\n                        {test && <SummaryTable test={test} dateRange={dateRange} numOfSubmissions={numOfSubmissions}  countNumberOfQuestions={countNumberOfQuestions}/>}\r\n                    </div>\r\n                </div>\r\n                <div id=\"grades__container\">\r\n\r\n                    <table id=\"grades__table\">\r\n                        <tbody>\r\n                            <tr className=\"header_row space_under border_bottom\">\r\n                                <th>        ID                                      </th>\r\n                                <th>        Respondent                              </th>\r\n                                <th>        Submitted                               </th>\r\n                                <th>        Number of Questions Answered            </th>\r\n                                <th>        Grade                                   </th>\r\n                            </tr>\r\n\r\n                            {studentTests && studentTests.map((studentTest) => (                             \r\n                                <>\r\n                                </>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <div id=\"buttons__container\">\r\n                        <button className=\"regular__button\" onClick={() => back()}>             {`<<`} Back         </button>\r\n                        <button className=\"regular__button\" onClick={() => exportToExecl()}>    Export To Excel     </button>\r\n                        <button className=\"regular__button\" onClick={() => printReport()}>      Print Report        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}