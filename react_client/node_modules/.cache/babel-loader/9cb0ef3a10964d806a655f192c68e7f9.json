{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\pages\\\\Student\\\\StartPage\\\\StartPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styles from './StartPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StartPage = props => {\n  _s();\n\n  const [tests, setTests] = useState(null);\n  const [students, setStudents] = useState(null);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [linkID, setLinkID] = useState(\"\");\n  const [linkExists, setLinkExists] = useState(false);\n  const [student, setStudent] = useState(null);\n  const [test, setTest] = useState(null);\n  const history = useHistory();\n\n  const handleSubmit = event => {\n    console.log(\"handle submit\");\n    event.preventDefault();\n    findStudent();\n  };\n\n  const findStudent = () => {\n    students.map(student => {\n      let fullName = `${firstName} ${lastName}`;\n\n      if (student.fullName.includes(fullName.toLowerCase())) {\n        console.log(\"student was found\");\n        setStudent(student);\n      } else {\n        console.log(\"student wasn't found\");\n      }\n    });\n  };\n\n  const pushHistory = () => {\n    console.log(\"push history\");\n\n    if (student) {\n      console.log(\"student is defined\");\n      console.log(linkID);\n      history.push({\n        pathname: `/student/test/${linkID}`,\n        // search: '?update=true',  // query string\n        state: {\n          // location state\n          // update: true, \n          student: {\n            studentID: student.studentID,\n            fullName: student.fullName,\n            email: email\n          },\n          test: test\n        }\n      });\n    }\n  };\n\n  const checkLink = link => {\n    let exists = false;\n    console.log(\"inside check\");\n\n    if (tests !== null) {\n      tests.map(test => {\n        if (test.link === link) {\n          setTest(test);\n          setLinkID(props.match.params.randomID);\n          setLinkExists(true);\n          exists = true;\n        }\n      });\n\n      if (exists === false) {\n        history.push(\"/error404\");\n      }\n    }\n  };\n\n  const fetchStudents = () => {\n    fetch(\"http://localhost:8000/students\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setStudents(data);\n    }).catch(err => console.log('error students:' + err));\n  };\n\n  const fetchTests = () => {\n    fetch(\"http://localhost:8000/tests\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setTests(data);\n    }).catch(err => console.log('error fetching tests:' + err));\n  }; // Meant for fetching the necessary information on first render\n\n\n  useEffect(() => {\n    document.title = \"State Test\";\n  }, []);\n  useEffect(() => {\n    pushHistory();\n  }, [student, test]);\n  useEffect(() => {\n    if (props) {\n      console.log(props);\n\n      if (props.location.pathname) {\n        checkLink(props.location.pathname);\n      }\n    }\n  }, [tests]); // Meant for fetching the necessary information on first render\n\n  useEffect(() => {\n    let isMounted = true; // note mutable flag\n\n    if (isMounted) {\n      // add conditional check\n      fetchTests();\n      fetchStudents();\n    }\n\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"start_page noselect\",\n    children: linkExists && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"start_page_content__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Please complete the following form to begin: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"start_page__form\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"start_page_content__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            id: \"start_page__table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" First Name: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 42\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"asterisk_input\",\n                    value: firstName,\n                    type: \"text\",\n                    placeholder: \"Type something\",\n                    onChange: e => setFirstName(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 42\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Last Name: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 42\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"asterisk_input\",\n                    value: lastName,\n                    type: \"text\",\n                    placeholder: \"Type something\",\n                    onChange: e => setLastName(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 42\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Email: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 42\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"asterisk_input\",\n                    value: email,\n                    type: \"email\",\n                    placeholder: \"Type something\",\n                    onChange: e => setEmail(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 42\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \" Submit \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 29\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StartPage, \"RTF/S7ZrJ3FUjzfTvIBsn9NAxJo=\", false, function () {\n  return [useHistory];\n});\n\n_c = StartPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartPage\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Student/StartPage/StartPage.js"],"names":["React","useEffect","useState","useHistory","styles","StartPage","props","tests","setTests","students","setStudents","firstName","setFirstName","lastName","setLastName","email","setEmail","linkID","setLinkID","linkExists","setLinkExists","student","setStudent","test","setTest","history","handleSubmit","event","console","log","preventDefault","findStudent","map","fullName","includes","toLowerCase","pushHistory","push","pathname","state","studentID","checkLink","link","exists","match","params","randomID","fetchStudents","fetch","method","then","res","json","data","catch","err","fetchTests","document","title","location","isMounted","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,QAA5B,QAAqD,OAArD;AACA,SAAgBC,UAAhB,QAAqD,kBAArD;AACA,OAAOC,MAAP,MAAqD,iBAArD;;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAEhC,QAAM,CAAEC,KAAF,EAAkBC,QAAlB,IAA0CN,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAAEO,QAAF,EAAkBC,WAAlB,IAA0CR,QAAQ,CAAC,IAAD,CAAxD;AAEA,QAAM,CAAES,SAAF,EAAkBC,YAAlB,IAA0CV,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAAEW,QAAF,EAAkBC,WAAlB,IAA0CZ,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAAEa,KAAF,EAAkBC,QAAlB,IAA0Cd,QAAQ,CAAC,EAAD,CAAxD;AAEA,QAAM,CAAEe,MAAF,EAAkBC,SAAlB,IAA0ChB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAAEiB,UAAF,EAAkBC,aAAlB,IAA0ClB,QAAQ,CAAC,KAAD,CAAxD;AAEA,QAAM,CAAEmB,OAAF,EAAkBC,UAAlB,IAA0CpB,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAAEqB,IAAF,EAAkBC,OAAlB,IAA0CtB,QAAQ,CAAC,IAAD,CAAxD;AAEA,QAAMuB,OAAO,GAAGtB,UAAU,EAA1B;;AAEA,QAAMuB,YAAY,GAAIC,KAAD,IAAW;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAF,IAAAA,KAAK,CAACG,cAAN;AAEAC,IAAAA,WAAW;AACd,GALD;;AAOA,QAAMA,WAAW,GAAG,MAAM;AACtBtB,IAAAA,QAAQ,CAACuB,GAAT,CAAcX,OAAD,IAAa;AACtB,UAAIY,QAAQ,GAAK,GAAEtB,SAAU,IAAGE,QAAS,EAAzC;;AAEA,UAAIQ,OAAO,CAACY,QAAR,CAAiBC,QAAjB,CAA0BD,QAAQ,CAACE,WAAT,EAA1B,CAAJ,EAAuD;AACnDP,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAP,QAAAA,UAAU,CAACD,OAAD,CAAV;AACH,OAHD,MAGO;AACHO,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;AACJ,KATD;AAUH,GAXD;;AAaA,QAAMO,WAAW,GAAG,MAAM;AAEtBR,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,QAAIR,OAAJ,EAAa;AACTO,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAEAD,MAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AAEAQ,MAAAA,OAAO,CAACY,IAAR,CAAa;AACTC,QAAAA,QAAQ,EAAG,iBAAgBrB,MAAO,EADzB;AAET;AACAsB,QAAAA,KAAK,EAAE;AAAG;AACN;AACAlB,UAAAA,OAAO,EAAE;AACLmB,YAAAA,SAAS,EAAEnB,OAAO,CAACmB,SADd;AAELP,YAAAA,QAAQ,EAAEZ,OAAO,CAACY,QAFb;AAGLlB,YAAAA,KAAK,EAAEA;AAHF,WAFN;AAOHQ,UAAAA,IAAI,EAAEA;AAPH;AAHE,OAAb;AAaH;AACJ,GAtBD;;AAyBA,QAAMkB,SAAS,GAAIC,IAAD,IAAU;AACxB,QAAIC,MAAM,GAAG,KAAb;AAEAf,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AAEA,QAAItB,KAAK,KAAK,IAAd,EAAoB;AAChBA,MAAAA,KAAK,CAACyB,GAAN,CAAWT,IAAD,IAAU;AAChB,YAAIA,IAAI,CAACmB,IAAL,KAAcA,IAAlB,EAAwB;AACpBlB,UAAAA,OAAO,CAACD,IAAD,CAAP;AACAL,UAAAA,SAAS,CAACZ,KAAK,CAACsC,KAAN,CAAYC,MAAZ,CAAmBC,QAApB,CAAT;AACA1B,UAAAA,aAAa,CAAC,IAAD,CAAb;AACAuB,UAAAA,MAAM,GAAG,IAAT;AACH;AACJ,OAPD;;AASA,UAAIA,MAAM,KAAK,KAAf,EAAsB;AAClBlB,QAAAA,OAAO,CAACY,IAAR,CAAa,WAAb;AACH;AACJ;AACJ,GAnBD;;AAqBA,QAAMU,aAAa,GAAG,MAAM;AACxBC,IAAAA,KAAK,CAAC,gCAAD,EAAmC;AACpCC,MAAAA,MAAM,EAAE;AAD4B,KAAnC,CAAL,CAGGC,IAHH,CAGSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHjB,EAIGF,IAJH,CAISG,IAAD,IAAU;AACd3C,MAAAA,WAAW,CAAC2C,IAAD,CAAX;AACD,KANH,EAOGC,KAPH,CAOUC,GAAD,IAAS3B,OAAO,CAACC,GAAR,CAAY,oBAAoB0B,GAAhC,CAPlB;AAQH,GATD;;AAWA,QAAMC,UAAU,GAAG,MAAM;AACrBR,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,MAAAA,MAAM,EAAE;AAD2B,KAAhC,CAAL,CAGCC,IAHD,CAGOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHf,EAICF,IAJD,CAIOG,IAAD,IAAU;AACd7C,MAAAA,QAAQ,CAAC6C,IAAD,CAAR;AACD,KAND,EAOCC,KAPD,CAOQC,GAAD,IAAS3B,OAAO,CAACC,GAAR,CAAY,0BAA0B0B,GAAtC,CAPhB;AAQH,GATD,CA9FgC,CA0GhC;;;AACAtD,EAAAA,SAAS,CAAC,MAAM;AACZwD,IAAAA,QAAQ,CAACC,KAAT,GAAiB,YAAjB;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAzD,EAAAA,SAAS,CAAC,MAAM;AAEZmC,IAAAA,WAAW;AAEd,GAJQ,EAIN,CAACf,OAAD,EAAUE,IAAV,CAJM,CAAT;AAMAtB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,KAAJ,EAAW;AACPsB,MAAAA,OAAO,CAACC,GAAR,CAAYvB,KAAZ;;AACA,UAAIA,KAAK,CAACqD,QAAN,CAAerB,QAAnB,EAA6B;AACzBG,QAAAA,SAAS,CAACnC,KAAK,CAACqD,QAAN,CAAerB,QAAhB,CAAT;AACH;AACJ;AAEJ,GARQ,EAQN,CAAC/B,KAAD,CARM,CAAT,CArHgC,CA+H9B;;AACJN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI2D,SAAS,GAAG,IAAhB,CADc,CACkB;;AAEhC,QAAIA,SAAJ,EAAe;AAAiB;AAC5BJ,MAAAA,UAAU;AACVT,MAAAA,aAAa;AAChB;;AAED,WAAO,MAAM;AAAEa,MAAAA,SAAS,GAAG,KAAZ;AAAmB,KAAlC,CARc,CAQsB;AACrC,GATQ,EASN,EATM,CAAT;AAWE,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,cACMzC,UAAU,iBAAI;AAAK,MAAA,EAAE,EAAC,+BAAR;AAAA,8BACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADY,eAEZ;AAAM,QAAA,EAAE,EAAC,kBAAT;AAA4B,QAAA,QAAQ,EAAEO,YAAtC;AAAA,+BACI;AAAK,UAAA,EAAE,EAAC,+BAAR;AAAA,kCACI;AAAO,YAAA,EAAE,EAAC,mBAAV;AAAA,mCACI;AAAA,sCACI;AAAA,wCACI;AAAA,+CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAL;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,+CAAK;AAAO,oBAAA,SAAS,EAAC,gBAAjB;AAAkC,oBAAA,KAAK,EAAEf,SAAzC;AAAuD,oBAAA,IAAI,EAAC,MAA5D;AAAmE,oBAAA,WAAW,EAAC,gBAA/E;AAAmG,oBAAA,QAAQ,EAAGkD,CAAD,IAAOjD,YAAY,CAACiD,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhI;AAAmJ,oBAAA,QAAQ;AAA3J;AAAA;AAAA;AAAA;AAAA,0BAAL;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI;AAAA,wCACI;AAAA,+CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAL;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,+CAAK;AAAO,oBAAA,SAAS,EAAC,gBAAjB;AAAkC,oBAAA,KAAK,EAAElD,QAAzC;AAAuD,oBAAA,IAAI,EAAC,MAA5D;AAAmE,oBAAA,WAAW,EAAC,gBAA/E;AAAmG,oBAAA,QAAQ,EAAGgD,CAAD,IAAO/C,WAAW,CAAC+C,CAAC,CAACC,MAAF,CAASC,KAAV,CAA/H;AAAmJ,oBAAA,QAAQ;AAA3J;AAAA;AAAA;AAAA;AAAA,0BAAL;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,eAWI;AAAA,wCACI;AAAA,+CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAL;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,+CAAK;AAAO,oBAAA,SAAS,EAAC,gBAAjB;AAAkC,oBAAA,KAAK,EAAEhD,KAAzC;AAAuD,oBAAA,IAAI,EAAC,OAA5D;AAAoE,oBAAA,WAAW,EAAC,gBAAhF;AAAoG,oBAAA,QAAQ,EAAG8C,CAAD,IAAO7C,QAAQ,CAAC6C,CAAC,CAACC,MAAF,CAASC,KAAV,CAA7H;AAAoJ,oBAAA,QAAQ;AAA5J;AAAA;AAAA;AAAA;AAAA,0BAAL;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAoBI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFY;AAAA;AAAA;AAAA;AAAA;AAAA;AADpB;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CA1KM;;GAAM1D,S;UAeOF,U;;;KAfPE,S","sourcesContent":["import React, { useEffect,  useState        }   from 'react';\r\nimport        { useHistory     }                from 'react-router-dom';\r\nimport styles                                   from './StartPage.css';\r\n\r\nexport const StartPage = (props) => {\r\n\r\n    const [ tests,          setTests            ] = useState(null);\r\n    const [ students,       setStudents         ] = useState(null);\r\n\r\n    const [ firstName,      setFirstName        ] = useState(\"\");\r\n    const [ lastName,       setLastName         ] = useState(\"\");\r\n    const [ email,          setEmail            ] = useState(\"\");\r\n\r\n    const [ linkID,         setLinkID           ] = useState(\"\");\r\n    const [ linkExists,     setLinkExists       ] = useState(false);\r\n\r\n    const [ student,        setStudent          ] = useState(null);\r\n    const [ test,           setTest             ] = useState(null);\r\n\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (event) => {\r\n        console.log(\"handle submit\");\r\n        event.preventDefault();\r\n\r\n        findStudent();\r\n    }\r\n\r\n    const findStudent = () => {\r\n        students.map((student) => {\r\n            let fullName = (`${firstName} ${lastName}`);\r\n\r\n            if (student.fullName.includes(fullName.toLowerCase())) {\r\n                console.log(\"student was found\");\r\n                setStudent(student);\r\n            } else {\r\n                console.log(\"student wasn't found\");\r\n            }\r\n        })\r\n    }\r\n\r\n    const pushHistory = () => {\r\n\r\n        console.log(\"push history\")\r\n        if (student) {\r\n            console.log(\"student is defined\")\r\n\r\n            console.log(linkID);\r\n\r\n            history.push({\r\n                pathname: `/student/test/${linkID}`,\r\n                // search: '?update=true',  // query string\r\n                state: {  // location state\r\n                    // update: true, \r\n                    student: {\r\n                        studentID: student.studentID,\r\n                        fullName: student.fullName,\r\n                        email: email\r\n                    },\r\n                    test: test\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    const checkLink = (link) => {\r\n        let exists = false;\r\n\r\n        console.log(\"inside check\")\r\n\r\n        if (tests !== null) {\r\n            tests.map((test) => {\r\n                if (test.link === link) {\r\n                    setTest(test);\r\n                    setLinkID(props.match.params.randomID);\r\n                    setLinkExists(true);\r\n                    exists = true;\r\n                }\r\n            })\r\n            \r\n            if (exists === false) { \r\n                history.push(\"/error404\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const fetchStudents = () => {\r\n        fetch(\"http://localhost:8000/students\", {\r\n            method: 'GET',\r\n          })\r\n          .then((res) => res.json())\r\n          .then((data) => { \r\n            setStudents(data); \r\n          })\r\n          .catch((err) => console.log('error students:' + err))\r\n    }\r\n\r\n    const fetchTests = () => {\r\n        fetch(\"http://localhost:8000/tests\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n          setTests(data); \r\n        })\r\n        .catch((err) => console.log('error fetching tests:' + err))\r\n    }\r\n\r\n\r\n    // Meant for fetching the necessary information on first render\r\n    useEffect(() => {\r\n        document.title = \"State Test\";\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        pushHistory();\r\n\r\n    }, [student, test])\r\n\r\n    useEffect(() => {\r\n        if (props) {\r\n            console.log(props);\r\n            if (props.location.pathname) {\r\n                checkLink(props.location.pathname);\r\n            }\r\n        }\r\n\r\n    }, [tests])\r\n\r\n      // Meant for fetching the necessary information on first render\r\n  useEffect(() => {\r\n    let isMounted = true;           // note mutable flag\r\n\r\n    if (isMounted) {                // add conditional check\r\n        fetchTests();\r\n        fetchStudents();\r\n    }\r\n\r\n    return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n  }, [])\r\n\r\n    return (\r\n        <div className=\"start_page noselect\">\r\n            { linkExists && <div id=\"start_page_content__container\">\r\n                <label> Please complete the following form to begin: </label>\r\n                <form id=\"start_page__form\" onSubmit={handleSubmit}>\r\n                    <div id=\"start_page_content__container\">\r\n                        <table id=\"start_page__table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td> <label> First Name: </label> </td>\r\n                                    <td> <input className=\"asterisk_input\" value={firstName}    type=\"text\" placeholder=\"Type something\"    onChange={(e) => setFirstName(e.target.value)}  required/> </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td> <label> Last Name: </label> </td>\r\n                                    <td> <input className=\"asterisk_input\" value={lastName}     type=\"text\" placeholder=\"Type something\"    onChange={(e) => setLastName(e.target.value)}   required/> </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td> <label> Email: </label> </td>\r\n                                    <td> <input className=\"asterisk_input\" value={email}        type=\"email\" placeholder=\"Type something\"    onChange={(e) => setEmail(e.target.value)}      required/> </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <button type=\"submit\"> Submit </button>\r\n                    </div>\r\n                </form>\r\n            </div> }\r\n        </div>\r\n    )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}