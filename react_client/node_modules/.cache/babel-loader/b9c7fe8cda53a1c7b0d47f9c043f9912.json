{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\pages\\\\Student\\\\StartPage\\\\StartPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport styles from './StartPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StartPage() {\n  _s();\n\n  const [tests, setTests] = useState(null);\n  const [students, setStudents] = useState(null);\n  const [studentExists, setStudentExists] = useState(false);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const location = useLocation();\n  const history = useHistory();\n\n  const handleSubmit = event => {\n    console.log(\"handle submit\");\n    event.preventDefault();\n    let test = tests.some(test => test.link === link);\n    let student = findStudent();\n\n    if (studentExists) {\n      history.push({\n        pathname: `/student/${link}`,\n        // search: '?update=true',  // query string\n        state: {\n          // location state\n          // update: true, \n          student: {\n            studentID: student.studentID,\n            fullName: student.fullName,\n            email: email\n          },\n          test: test\n        }\n      });\n    }\n  };\n\n  const findStudent = () => {\n    students.map(student => {\n      if (student.fullName.includes().toLowerCase(`${firstName} ${lastName}`)) {\n        console.log(\"student was found\");\n        studentExists(true);\n        return student;\n      } else {\n        console.log(\"student wasn't found\");\n        return null;\n      }\n    });\n  };\n\n  const fetchStudents = () => {\n    fetch(\"http://localhost:8000/students\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setStudents(data);\n    }).catch(err => console.log('error students:' + err));\n  };\n\n  const fetchTests = () => {\n    fetch(\"http://localhost:8000/tests\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setTests(data);\n    }).catch(err => console.log('error fetching tests:' + err));\n  }; // Meant for fetching the necessary information on first render\n\n\n  useEffect(() => {\n    document.title = \"State Test\";\n\n    if (location.state) {\n      if (location.state.link) setLink(location.state.link);\n    }\n  }, []); // Meant for fetching the necessary information on first render\n\n  useEffect(() => {\n    let isMounted = true; // note mutable flag\n\n    if (isMounted) {\n      // add conditional check\n      fetchTests();\n      fetchStudents();\n    }\n\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"start_page noselect\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Please complete the following form to begin: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"start_page__form\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"start_page_content__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"start_page__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" First Name: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 38\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"asterisk_input\",\n                  value: firstName,\n                  type: \"text\",\n                  placeholder: \"Type something\",\n                  onChange: e => setFirstName(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 38\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Last Name: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 38\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"asterisk_input\",\n                  value: lastName,\n                  type: \"text\",\n                  placeholder: \"Type something\",\n                  onChange: e => setLastName(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 38\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Email: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 38\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"asterisk_input\",\n                  value: email,\n                  type: \"text\",\n                  placeholder: \"Type something\",\n                  onChange: e => setEmail(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 38\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"submit__button\",\n          type: \"submit\",\n          children: \" Submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StartPage, \"DwgHS8xf33+h3U11p1t/D3lwmGs=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = StartPage;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartPage\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Student/StartPage/StartPage.js"],"names":["React","useEffect","useState","useHistory","useLocation","styles","StartPage","tests","setTests","students","setStudents","studentExists","setStudentExists","firstName","setFirstName","lastName","setLastName","email","setEmail","link","setLink","location","history","handleSubmit","event","console","log","preventDefault","test","some","student","findStudent","push","pathname","state","studentID","fullName","map","includes","toLowerCase","fetchStudents","fetch","method","then","res","json","data","catch","err","fetchTests","document","title","isMounted","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect,  useState        }   from 'react';\r\nimport        { useHistory, useLocation     }   from 'react-router-dom';\r\nimport styles                                   from './StartPage.css';\r\n\r\nexport default function StartPage() {\r\n\r\n    const [ tests,          setTests            ] = useState(null);\r\n    const [ students,       setStudents         ] = useState(null);\r\n    const [ studentExists,  setStudentExists    ] = useState(false);\r\n\r\n    const [ firstName,      setFirstName        ] = useState(\"\");\r\n    const [ lastName,       setLastName         ] = useState(\"\");\r\n    const [ email,          setEmail            ] = useState(\"\");\r\n\r\n    const [ link,           setLink             ] = useState(\"\");\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (event) => {\r\n        console.log(\"handle submit\");\r\n        event.preventDefault();\r\n\r\n        let test = tests.some((test) => test.link === link);\r\n\r\n        let student = findStudent();\r\n\r\n        if (studentExists) {\r\n\r\n            history.push({\r\n                pathname: `/student/${link}`,\r\n                // search: '?update=true',  // query string\r\n                state: {  // location state\r\n                    // update: true, \r\n                    student: {\r\n                        studentID: student.studentID,\r\n                        fullName: student.fullName,\r\n                        email: email\r\n                    },\r\n                    test: test\r\n                },\r\n            }); \r\n        }\r\n    }\r\n\r\n    const findStudent = () => {\r\n        students.map((student) => {\r\n            if (student.fullName.includes().toLowerCase(`${firstName} ${lastName}`)) {\r\n                console.log(\"student was found\");\r\n                studentExists(true);\r\n                return student;\r\n            } else {\r\n                console.log(\"student wasn't found\");\r\n                return null;\r\n            }\r\n        })\r\n    }\r\n\r\n    const fetchStudents = () => {\r\n        fetch(\"http://localhost:8000/students\", {\r\n            method: 'GET',\r\n          })\r\n          .then((res) => res.json())\r\n          .then((data) => { \r\n            setStudents(data); \r\n          })\r\n          .catch((err) => console.log('error students:' + err))\r\n    }\r\n\r\n    const fetchTests = () => {\r\n        fetch(\"http://localhost:8000/tests\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n          setTests(data); \r\n        })\r\n        .catch((err) => console.log('error fetching tests:' + err))\r\n    }\r\n\r\n    // Meant for fetching the necessary information on first render\r\n    useEffect(() => {\r\n        document.title = \"State Test\";\r\n\r\n        if (location.state) {\r\n            if (location.state.link) setLink(location.state.link);\r\n        }\r\n    }, [])\r\n\r\n      // Meant for fetching the necessary information on first render\r\n  useEffect(() => {\r\n    let isMounted = true;           // note mutable flag\r\n\r\n    if (isMounted) {                // add conditional check\r\n        fetchTests();\r\n        fetchStudents();\r\n    }\r\n\r\n    return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n  }, [])\r\n\r\n    return (\r\n        <div className=\"start_page noselect\">\r\n            <label> Please complete the following form to begin: </label>\r\n            <form id=\"start_page__form\" onSubmit={handleSubmit}>\r\n                <div id=\"start_page_content__container\">\r\n                    <table id=\"start_page__table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td> <label> First Name: </label> </td>\r\n                                <td> <input className=\"asterisk_input\" value={firstName}    type=\"text\" placeholder=\"Type something\"    onChange={(e) => setFirstName(e.target.value)}  required/> </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td> <label> Last Name: </label> </td>\r\n                                <td> <input className=\"asterisk_input\" value={lastName}     type=\"text\" placeholder=\"Type something\"    onChange={(e) => setLastName(e.target.value)}   required/> </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td> <label> Email: </label> </td>\r\n                                <td> <input className=\"asterisk_input\" value={email}        type=\"text\" placeholder=\"Type something\"    onChange={(e) => setEmail(e.target.value)}      required/> </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <button id=\"submit__button\" type=\"submit\"> Submit </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}