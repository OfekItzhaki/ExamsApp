{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client\\\\src\\\\components\\\\pages\\\\Admin\\\\MainPage\\\\ManageTests\\\\CreateEditTest\\\\CreateEditTest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Filter } from '../../../../../Admin/Filter/Filter';\nimport { QuestionTable } from '../../../../../Admin/QuestionTable/QuestionTable';\nimport styles from './CreateEditTest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateEditTest() {\n  _s();\n\n  // -------------------------------------------- Fetch Info Hooks --------------------------------------------\n  const [field, setField] = useState(null);\n  const [test, setTest] = useState(null);\n  const [tests, setTests] = useState(null);\n  const [testTypes, setTestTypes] = useState(null);\n  const [certificateTemplates, setCertificateTemplates] = useState(null);\n  const [languages, setLanguages] = useState(null);\n  const [questions, setQuestions] = useState(null);\n  const [filteredQuestions, setFilteredQuestions] = useState(null); // -------------------------------------------- Top Content Hooks -------------------------------------------\n  // *General Details Table*\n\n  const [testID, setTestID] = useState(0);\n  const [testCode, setTestCode] = useState(0);\n  const [testType, setTestType] = useState(\"\");\n  const [testName, setTestName] = useState(\"\");\n  const [language, setLanguage] = useState(\"\");\n  const [passingGrade, setPassingGrade] = useState(\"\");\n  const [header, setHeader] = useState(\"\");\n  const [messageSuccess, setMessageSuccess] = useState(\"\");\n  const [messageFailure, setMessageFailure] = useState(\"\");\n  const [version, setVersion] = useState(1);\n  const [certificateTemplateID, setCertificateTemplateID] = useState(0);\n  const [reviewTest, setReviewTest] = useState(false);\n  const [lastUpdate, setLastUpdate] = useState(Date.now());\n  const [link, setLink] = useState(\"\"); // *Email Delivery Table*         \n  // Status Container          \n\n  const [status, setStatus] = useState(\"OFF\");\n  const [from, setFrom] = useState(\"\");\n  const [cc, setCC] = useState(\"\");\n  const [bcc, setBCC] = useState(\"\"); // Passing the Test Container\n\n  const [passingSubject, setPassingSubject] = useState(\"\");\n  const [passingBody, setPassingBody] = useState(\"\"); // Failing the Test Container\n\n  const [failingSubject, setFailingSubject] = useState(\"\");\n  const [failingBody, setFailingBody] = useState(\"\"); // -------------------------------------------- Bottom Content Hooks ----------------------------------------\n  // *Filter Container*\n\n  const [filterStatus, setFilterStatus] = useState(false);\n  const [filterByTags, setFilterByTags] = useState(true); // *Questions Table\n\n  const [questionsAmount, setQuestionsAmount] = useState(0);\n  const [selectedQuestions, setSelectedQuestions] = useState([]); // ----------------------------------------------------------------------------------------------------------\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const handleShow = () => {};\n\n  const handleShowSelected = () => {};\n\n  const handleShowAll = () => {};\n\n  const initialStates = () => {};\n\n  const handleSelectedQuestion = newSelectedQuestions => {\n    setSelectedQuestions(newSelectedQuestions);\n  };\n\n  const handleFilterByChange = value => {\n    if (value === \"tags\") setFilterByTags(true);else setFilterByTags(false);\n  };\n\n  const handleFilterContentChange = value => {\n    if (value === \"\") setFilterStatus(false);else setFilterStatus(true);\n    let newQuestionList = questions;\n    setFilteredQuestions(newQuestionList.filter(question => {\n      let contains = false;\n\n      if (filterByTags === true) {\n        question.tags.map(tag => {\n          if (tag.toLowerCase().includes(value)) contains = true;\n        });\n      } else {\n        if (question.title.toLowerCase().includes(value)) contains = true;\n      }\n\n      if (contains === true) return question;else return null;\n    }));\n  };\n\n  const handleStatus = value => {\n    if (value === \"\") setStatus(\"OFF\");else setStatus(\"ON\");\n  };\n\n  const handleFromChange = value => {\n    handleStatus(value);\n    setFrom(value);\n  };\n\n  const generateRandomID = length => {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return result;\n  };\n\n  const generateRandomLink = () => {\n    let length = 10;\n    let randomID = generateRandomID(length);\n    setTestCode(randomID);\n    let randomLink = `/student/${randomID}`;\n    tests.map(test => {\n      if (test.testCode === randomID) {\n        randomID = generateRandomID(length);\n        setTestCode(randomID);\n        randomLink = `/student/${randomID}`;\n      }\n    });\n    return randomLink;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let link = generateRandomLink();\n    setLink(link);\n    submitTest(link);\n  };\n\n  const submitTest = link => {\n    console.log(testID);\n    fetch('http://localhost:8000/tests', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        testID: testID,\n        testCode: testCode,\n        testName: testName,\n        testType: testType,\n        language: language,\n        questions: selectedQuestions,\n        passingGrade: passingGrade,\n        header: header,\n        messageSuccess: messageSuccess,\n        messageFailure: messageFailure,\n        passingSubject: passingSubject,\n        passingBody: passingBody,\n        failingSubject: failingSubject,\n        failingBody: failingBody,\n        link: link,\n        version: version,\n        reviewTest: reviewTest,\n        lastUpdate: lastUpdate\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data); // initialState(); \n    }).catch(err => console.log(`error ${err}`));\n  };\n\n  const caseEditTest = () => {\n    let editTest = location.state.test;\n    setTest(editTest);\n    setTestID(editTest.testID);\n    setTestCode(editTest.testCode);\n    setTestType(editTest.testType);\n    setTestName(editTest.testName);\n    setLanguage(editTest.language);\n    setSelectedQuestions(editTest.questions);\n    setPassingGrade(editTest.passingGrade);\n    setHeader(editTest.header);\n    setMessageSuccess(editTest.messageSuccess);\n    setMessageFailure(editTest.messageFailure);\n    setPassingSubject(editTest.passingSubject);\n    setPassingBody(editTest.passingBody);\n    setFailingSubject(editTest.failingSubject);\n    setFailingBody(editTest.failingBody);\n    setLink(editTest.link);\n    setVersion(editTest.version + 1);\n    setCertificateTemplateID(editTest.certificateTemplate);\n    setReviewTest(editTest.reviewTest);\n    setLastUpdate(editTest.lastUpdate);\n  };\n\n  const fetchLanguages = () => {\n    fetch(\"http://localhost:8000/languages\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setLanguages(data);\n      setLanguage(language !== \"\" ? language : data[0].languageType);\n    }).catch(err => console.log('error fetching languages:' + err));\n  };\n\n  const fetchTestTypes = () => {\n    fetch(\"http://localhost:8000/testTypes\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setTestTypes(data);\n      setTestType(testType !== \"\" ? testType : data[0].typeName);\n    }).catch(err => console.log('error fetching test types:' + err));\n  };\n\n  const fetchCertificateTemplates = () => {\n    fetch(\"http://localhost:8000/certificateTemplates\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setCertificateTemplates(data);\n      setCertificateTemplateID(certificateTemplateID !== \"\" ? certificateTemplateID : data[0].templateID);\n    }).catch(err => console.log('error fetching certificate templates:' + err));\n  };\n\n  const fetchQuestions = () => {\n    fetch(\"http://localhost:8000/questions\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setQuestions(data);\n      setFilteredQuestions(data);\n    }).catch(err => console.log('error fetching questions:' + err));\n  };\n\n  const fetchTests = () => {\n    fetch(\"http://localhost:8000/tests\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setTests(data);\n      if (test === null) setTestID(data[data.length - 1].testID + 1);\n    }).catch(err => console.log('error fetching test types:' + err));\n  };\n\n  useEffect(() => {\n    document.title = `${test === null ? \"Create\" : \"Edit\"} Question`;\n\n    if (location.state) {\n      if (location.state.field) {\n        console.log(location.state.field);\n        setField(location.state.field);\n      }\n\n      if (location.state.test) {\n        console.log(location.state.test);\n        caseEditTest();\n      }\n    }\n  }, [location.state]); // Meant for fetching the necessary information on first render\n\n  useEffect(() => {\n    let isMounted = true; // note mutable flag\n\n    if (isMounted) {\n      // add conditional check\n      fetchLanguages();\n      fetchTestTypes();\n      fetchCertificateTemplates();\n      fetchTests();\n      fetchQuestions();\n    }\n\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create_edit_test noselect\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page__header\",\n      children: [\" \", test === null ? \"Create\" : \"Edit\", \" Test \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"new_test__form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"top_content__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content__section\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            id: \"general_details__table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"space_under header_row border_bottom\",\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  colSpan: \"2\",\n                  children: \" General Test Details \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Field of Study: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    id: \"field__label\",\n                    children: [\" \", field === null ? \"undefined\" : field, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Language: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"  \", /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"language__select\",\n                    onChange: e => setLanguage(e.target.value),\n                    children: languages && languages.map(language => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: language.languageName,\n                      children: [\" \", language.languageName, \" \"]\n                    }, language.languageID, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 25\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Test Type: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"test_type__select\",\n                    onChange: e => setTestType(e.target.value),\n                    children: testTypes && testTypes.map(testType => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: testType.typeName,\n                      children: [\" \", testType.typeName, \" \"]\n                    }, testType.typeID, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 352,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Test Name:                                                                                                                                                           \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"test_name__input\",\n                    type: \"text\",\n                    placeholder: \"Insert test name\",\n                    value: testName,\n                    onChange: e => setTestName(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Passing Grade:                                                                                                                                                       \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"passing_grade__input\",\n                    type: \"text\",\n                    placeholder: \"Insert passing grade\",\n                    value: passingGrade,\n                    onChange: e => setPassingGrade(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Show correct answers after submission:                                                                                                                               \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"show_answers__checkbox\",\n                    type: \"checkbox\",\n                    value: reviewTest,\n                    onChange: e => setReviewTest(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Message header:                                                                                                                                                      \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"message_header__input\",\n                    type: \"text\",\n                    placeholder: \"Insert header\",\n                    value: header,\n                    onChange: e => setHeader(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Message to show on success:                                                                                                                                          \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"message_success__input\",\n                    type: \"text\",\n                    placeholder: \"Insert success message\",\n                    value: messageSuccess,\n                    onChange: e => setMessageSuccess(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Message to show on failure:                                                                                                                                         \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"message_failure__input\",\n                    type: \"text\",\n                    placeholder: \"Insert failure message\",\n                    value: messageFailure,\n                    onChange: e => setMessageFailure(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Certificate Templates: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"certificate__select\",\n                    onChange: e => setCertificateTemplateID(e.target.key),\n                    children: certificateTemplates && certificateTemplates.map(certificate => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: certificate.templateName,\n                      children: [\" \", certificate.templateName, \" \"]\n                    }, certificate.templateID, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 391,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content__section\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            id: \"email_delivery__table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"space_under header_row border_bottom\",\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  colSpan: \"2\",\n                  children: \" Email Delivery Upon Test Completion \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\" Current Status: \\\"\", status === \"OFF\" ? `OFF` : \"ON\", \"\\\"                                                                                                         \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"sending_emails__container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      id: \"sending_emails__label\",\n                      children: [\" Emails \", status === \"OFF\" ? `won't` : \"will\", \" be sent upon test completion.                                                   \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\" to turn \", status === \"OFF\" ? \"ON\" : \"OFF\", \" email delivery, \", status === \"OFF\" ? \"fill out\" : \"reset\", \" the mandatory                    \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \" fields in this section:                                                                                                              \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 410,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" From: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"from__input\",\n                    type: \"text\",\n                    value: from,\n                    onChange: e => handleFromChange(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" CC: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"cc__input\",\n                    type: \"text\",\n                    value: cc,\n                    onChange: e => setCC(e.target.value),\n                    disabled: from ? false : true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" BCC: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"bcc__input\",\n                    type: \"text\",\n                    value: bcc,\n                    onChange: e => setBCC(e.target.value),\n                    disabled: from ? false : true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            id: \"passing_test__table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"space_under sub_header_row border_bottom\",\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  colSpan: \"2\",\n                  children: \" Passing the test \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Message subject:                                                                                                                                            \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"message_subject__input\",\n                    type: \"text\",\n                    value: passingSubject,\n                    onChange: e => setPassingSubject(e.target.value),\n                    disabled: from ? false : true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Message body:                                                                                                                                               \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"message_body__input\",\n                    type: \"text\",\n                    value: passingBody,\n                    onChange: e => setPassingBody(e.target.value),\n                    disabled: from ? false : true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 24\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    style: {\n                      fontWeight: 'bold'\n                    },\n                    children: \" Predefined Templated - Click to copy to clipboard \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" NEED TO ADD TEMPLATES HERE \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"failing_test__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"space_under sub_header_row border_bottom\",\n              children: /*#__PURE__*/_jsxDEV(\"th\", {\n                colspan: \"2\",\n                children: \" Failing the test \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Message subject:                                                                                                                                     \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"message_subject__input\",\n                  type: \"text\",\n                  value: failingSubject,\n                  onChange: e => setFailingSubject(e.target.value),\n                  disabled: from ? false : true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Message body:                                                                                                                                        \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"message_body__input\",\n                  type: \"text\",\n                  value: failingBody,\n                  onChange: e => setFailingBody(e.target.value),\n                  disabled: from ? false : true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    fontWeight: 'bold'\n                  },\n                  children: \" Predefined Templated - Click to copy to clipboard \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" NEED TO ADD TEMPLATES HERE \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bottom_content__container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"questions__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section__headers\",\n            children: \" Questions \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"explanation\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: [\" Note: This test is set to be a \\\"\", `${testType}`, \"\\\" test, which means:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \" All the questions that you select here will be included in the test. \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\" All respondents will receive \", `${testType.includes(\"random\") ? \"a DIFFERENT\" : \"the SAME\"}`, \" set of questions, presented in a different order. \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"sub__label\",\n              children: [\" *TIP: if you want each respondent to receive \", `${testType.includes(\"random\") ? \"the SAME\" : \"a DIFFERENT\"}`, \" set of questions, change the test type to \\\"\", `${testType.includes(\"random\") ? \"Predefined\" : \"Random\"}`, \"\\\" in the\", /*#__PURE__*/_jsxDEV(Link, {\n                to: `/admin/${test === null ? \"create\" : \"edit\"}-test#test_type__select`,\n                children: \" Test Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 19\n              }, this), \" section.* \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"question_table__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                fontWeight: 'bold',\n                color: 'orange'\n              },\n              children: \" Select the questions that you want to include in the test \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" You can use the tag filter to narrow down the list to a specific subject - Don't worry, filtering won't affect your previous selections. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 15\n            }, this), questions && filteredQuestions && /*#__PURE__*/_jsxDEV(Filter, {\n              filterStatus: filterStatus,\n              totalAmount: questions.length,\n              filteredAmount: filteredQuestions.length,\n              handleFilterByChange: handleFilterByChange,\n              handleFilterContentChange: handleFilterContentChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 51\n            }, this), /*#__PURE__*/_jsxDEV(QuestionTable, {\n              createEditTest: true,\n              questions: filteredQuestions,\n              filteredQuestions: filteredQuestions,\n              selectedQuestions: selectedQuestions,\n              tests: tests,\n              handleSelectedQuestion: handleSelectedQuestion,\n              handleShowAll: handleShowAll,\n              handleShowSelected: handleShowSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\" The test will include \", selectedQuestions.length, \" questions in total \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"buttons__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"regular__button\",\n          onClick: () => handleBack(),\n          children: [\" \", `<<`, \" Back  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"regular__button\",\n          onClick: () => handleShow(),\n          children: \"  Show         \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"regular__button\",\n          type: \"submit\",\n          children: [\"  Save \", `>>`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateEditTest, \"758C6P6w9L6wyUsJ4R0b4AS3as8=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = CreateEditTest;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateEditTest\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client/src/components/pages/Admin/MainPage/ManageTests/CreateEditTest/CreateEditTest.js"],"names":["React","useState","useEffect","HashLink","Link","useHistory","useLocation","Filter","QuestionTable","styles","CreateEditTest","field","setField","test","setTest","tests","setTests","testTypes","setTestTypes","certificateTemplates","setCertificateTemplates","languages","setLanguages","questions","setQuestions","filteredQuestions","setFilteredQuestions","testID","setTestID","testCode","setTestCode","testType","setTestType","testName","setTestName","language","setLanguage","passingGrade","setPassingGrade","header","setHeader","messageSuccess","setMessageSuccess","messageFailure","setMessageFailure","version","setVersion","certificateTemplateID","setCertificateTemplateID","reviewTest","setReviewTest","lastUpdate","setLastUpdate","Date","now","link","setLink","status","setStatus","from","setFrom","cc","setCC","bcc","setBCC","passingSubject","setPassingSubject","passingBody","setPassingBody","failingSubject","setFailingSubject","failingBody","setFailingBody","filterStatus","setFilterStatus","filterByTags","setFilterByTags","questionsAmount","setQuestionsAmount","selectedQuestions","setSelectedQuestions","location","history","handleBack","goBack","handleShow","handleShowSelected","handleShowAll","initialStates","handleSelectedQuestion","newSelectedQuestions","handleFilterByChange","value","handleFilterContentChange","newQuestionList","filter","question","contains","tags","map","tag","toLowerCase","includes","title","handleStatus","handleFromChange","generateRandomID","length","result","characters","charactersLength","i","charAt","Math","floor","random","generateRandomLink","randomID","randomLink","handleSubmit","event","preventDefault","submitTest","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","data","catch","err","caseEditTest","editTest","state","certificateTemplate","fetchLanguages","languageType","fetchTestTypes","typeName","fetchCertificateTemplates","templateID","fetchQuestions","fetchTests","document","isMounted","e","target","languageName","languageID","typeID","key","certificate","templateName","fontWeight","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect     }   from  'react';\r\nimport        { HashLink as Link        }   from  'react-router-hash-link';\r\nimport        { useHistory, useLocation }   from  'react-router-dom';\r\nimport        { Filter                  }   from '../../../../../Admin/Filter/Filter';\r\nimport        { QuestionTable           }   from '../../../../../Admin/QuestionTable/QuestionTable';\r\nimport styles                               from  './CreateEditTest.css';\r\n\r\nexport default function CreateEditTest() {\r\n\r\n  // -------------------------------------------- Fetch Info Hooks --------------------------------------------\r\n\r\n  const [ field,                      setField                  ] = useState(null);\r\n  const [ test,                       setTest                   ] = useState(null);\r\n\r\n  const [ tests,                      setTests                  ] = useState(null);\r\n  const [ testTypes,                  setTestTypes              ] = useState(null);\r\n  const [ certificateTemplates,       setCertificateTemplates   ] = useState(null);\r\n  const [ languages,                  setLanguages              ] = useState(null);\r\n  const [ questions,                  setQuestions              ] = useState(null);\r\n  const [ filteredQuestions,          setFilteredQuestions      ] = useState(null);\r\n\r\n  // -------------------------------------------- Top Content Hooks -------------------------------------------\r\n\r\n  // *General Details Table*\r\n  const [ testID,                     setTestID                 ] = useState(0);\r\n  const [ testCode,                   setTestCode               ] = useState(0);\r\n  const [ testType,                   setTestType               ] = useState(\"\");\r\n  const [ testName,                   setTestName               ] = useState(\"\");\r\n  const [ language,                   setLanguage               ] = useState(\"\");\r\n  const [ passingGrade,               setPassingGrade           ] = useState(\"\");\r\n  const [ header,                     setHeader                 ] = useState(\"\");\r\n  const [ messageSuccess,             setMessageSuccess         ] = useState(\"\");\r\n  const [ messageFailure,             setMessageFailure         ] = useState(\"\");\r\n  const [ version,                    setVersion                ] = useState(1);\r\n  const [ certificateTemplateID,      setCertificateTemplateID  ] = useState(0);\r\n  const [ reviewTest,                 setReviewTest             ] = useState(false);\r\n  const [ lastUpdate,                 setLastUpdate             ] = useState(Date.now());\r\n  const [ link,                       setLink                   ] = useState(\"\");\r\n\r\n  // *Email Delivery Table*         \r\n  // Status Container          \r\n  const [ status,                     setStatus                 ] = useState(\"OFF\");\r\n  const [ from,                       setFrom                   ] = useState(\"\");\r\n  const [ cc,                         setCC                     ] = useState(\"\");\r\n  const [ bcc,                        setBCC                    ] = useState(\"\");    \r\n\r\n  // Passing the Test Container\r\n  const [ passingSubject,             setPassingSubject         ] = useState(\"\");\r\n  const [ passingBody,                setPassingBody            ] = useState(\"\");    \r\n\r\n  // Failing the Test Container\r\n  const [ failingSubject,             setFailingSubject         ] = useState(\"\");   \r\n  const [ failingBody,                setFailingBody            ] = useState(\"\");    \r\n\r\n  // -------------------------------------------- Bottom Content Hooks ----------------------------------------\r\n\r\n  // *Filter Container*\r\n  const [ filterStatus,               setFilterStatus           ]  = useState(false);\r\n  const [ filterByTags,               setFilterByTags           ]  = useState(true);\r\n\r\n  // *Questions Table\r\n  const [ questionsAmount,            setQuestionsAmount        ] = useState(0); \r\n  const [ selectedQuestions,          setSelectedQuestions      ] = useState([]);\r\n\r\n  // ----------------------------------------------------------------------------------------------------------\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  \r\n  const handleBack = () => {\r\n    history.goBack();\r\n  }\r\n  \r\n  const handleShow = () => {\r\n    \r\n  }\r\n  \r\n  const handleShowSelected = () => {\r\n    \r\n  }\r\n\r\n  const handleShowAll = () => {\r\n    \r\n  }\r\n\r\n  const initialStates = () => {\r\n\r\n  }\r\n\r\n  const handleSelectedQuestion = (newSelectedQuestions) => {\r\n    setSelectedQuestions(newSelectedQuestions);\r\n  }\r\n\r\n  const handleFilterByChange = (value) => {\r\n    if (value === \"tags\") setFilterByTags(true);\r\n    else setFilterByTags(false);\r\n  }\r\n\r\n  const handleFilterContentChange = (value) => {\r\n        \r\n    if (value === \"\") setFilterStatus(false);\r\n    else setFilterStatus(true);\r\n\r\n    let newQuestionList = questions;\r\n    setFilteredQuestions(newQuestionList.filter((question) => { \r\n        \r\n        let contains = false;\r\n\r\n        if (filterByTags === true) {\r\n            question.tags.map((tag) => {\r\n                if (tag.toLowerCase().includes(value)) contains = true;\r\n            });\r\n        } else {\r\n            if (question.title.toLowerCase().includes(value)) contains = true;\r\n        }\r\n\r\n        if (contains === true) return question;\r\n        else return null;\r\n\r\n    }));\r\n}\r\n\r\n  const handleStatus = (value) => {\r\n    if (value === \"\") setStatus(\"OFF\");\r\n    else setStatus(\"ON\");\r\n  }\r\n\r\n  const handleFromChange = (value) => {\r\n    handleStatus(value);\r\n    setFrom(value);\r\n  }\r\n\r\n  const generateRandomID = (length) => {\r\n\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const generateRandomLink = () => {\r\n    let length = 10;\r\n    let randomID = generateRandomID(length);\r\n    setTestCode(randomID);\r\n    let randomLink = `/student/${randomID}`\r\n\r\n    tests.map((test) => {\r\n      if (test.testCode === randomID) {\r\n            randomID = generateRandomID(length);\r\n            setTestCode(randomID);\r\n            randomLink = `/student/${randomID}`\r\n      }\r\n    });\r\n\r\n    return randomLink;\r\n  }\r\n\r\n  const handleSubmit = (event) => {  \r\n    event.preventDefault();\r\n    let link = generateRandomLink();\r\n    setLink(link);\r\n\r\n    submitTest(link);\r\n  }\r\n\r\n  const submitTest = (link) => {\r\n    console.log(testID);\r\n    fetch('http://localhost:8000/tests', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      testID: testID,\r\n      testCode: testCode,\r\n      testName: testName,\r\n      testType: testType,\r\n      language: language,\r\n      questions: selectedQuestions,\r\n      passingGrade: passingGrade,\r\n      header: header,\r\n      messageSuccess: messageSuccess,\r\n      messageFailure: messageFailure,\r\n      passingSubject: passingSubject,\r\n      passingBody: passingBody,\r\n      failingSubject: failingSubject,\r\n      failingBody: failingBody,\r\n      link: link,\r\n      version: version,\r\n      reviewTest: reviewTest,\r\n      lastUpdate: lastUpdate\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => { \r\n        console.log(data); \r\n        // initialState(); \r\n      })\r\n      .catch((err) => console.log(`error ${err}`))\r\n  }\r\n\r\n  const caseEditTest = () => {\r\n\r\n    let editTest = location.state.test;\r\n    setTest(editTest);\r\n    setTestID(editTest.testID);\r\n    setTestCode(editTest.testCode);\r\n    setTestType(editTest.testType);\r\n    setTestName(editTest.testName);\r\n    setLanguage(editTest.language);\r\n    setSelectedQuestions(editTest.questions);\r\n    setPassingGrade(editTest.passingGrade);\r\n    setHeader(editTest.header);\r\n    setMessageSuccess(editTest.messageSuccess);\r\n    setMessageFailure(editTest.messageFailure);\r\n    setPassingSubject(editTest.passingSubject);\r\n    setPassingBody(editTest.passingBody);\r\n    setFailingSubject(editTest.failingSubject);\r\n    setFailingBody(editTest.failingBody);\r\n    setLink(editTest.link);\r\n    setVersion(editTest.version + 1);\r\n    setCertificateTemplateID(editTest.certificateTemplate);\r\n    setReviewTest(editTest.reviewTest);\r\n    setLastUpdate(editTest.lastUpdate);\r\n  }\r\n\r\n  const fetchLanguages = () => {\r\n    fetch(\"http://localhost:8000/languages\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setLanguages(data); \r\n      setLanguage(language !== \"\" ? language : data[0].languageType); \r\n    })\r\n    .catch((err) => console.log('error fetching languages:' + err))\r\n  }\r\n\r\n  const fetchTestTypes = () => {\r\n    fetch(\"http://localhost:8000/testTypes\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setTestTypes(data); \r\n      setTestType(testType !== \"\" ? testType : data[0].typeName); \r\n    })\r\n    .catch((err) => console.log('error fetching test types:' + err))\r\n  }\r\n\r\n  const fetchCertificateTemplates = () => {\r\n    fetch(\"http://localhost:8000/certificateTemplates\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setCertificateTemplates(data); \r\n      setCertificateTemplateID(certificateTemplateID !== \"\" ? certificateTemplateID : data[0].templateID); \r\n    })\r\n    .catch((err) => console.log('error fetching certificate templates:' + err))\r\n  }\r\n\r\n  const fetchQuestions = () => {\r\n    fetch(\"http://localhost:8000/questions\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setQuestions(data);\r\n      setFilteredQuestions(data); \r\n    })\r\n    .catch((err) => console.log('error fetching questions:' + err))\r\n  }\r\n\r\n  const fetchTests = () => {\r\n    fetch(\"http://localhost:8000/tests\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setTests(data); \r\n      if (test === null) setTestID(data[data.length - 1].testID + 1); \r\n    })\r\n    .catch((err) => console.log('error fetching test types:' + err))\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = `${test === null ? \"Create\" : \"Edit\"} Question`;\r\n\r\n    if (location.state) {\r\n\r\n      if (location.state.field) {\r\n        console.log(location.state.field);\r\n        setField(location.state.field);\r\n      }\r\n\r\n      if (location.state.test) {\r\n        console.log(location.state.test);\r\n        caseEditTest();\r\n      }\r\n    }\r\n  }, [location.state])\r\n\r\n    // Meant for fetching the necessary information on first render\r\n  useEffect(() => {\r\n    let isMounted = true;           // note mutable flag\r\n\r\n    if (isMounted) {                // add conditional check\r\n      fetchLanguages();\r\n      fetchTestTypes();\r\n      fetchCertificateTemplates();\r\n      fetchTests();\r\n      fetchQuestions();\r\n    }\r\n\r\n    return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"create_edit_test noselect\">\r\n      <h1 className=\"page__header\"> {test === null ? \"Create\" : \"Edit\"} Test </h1> {/* className=\"page__header\" */}\r\n      <form className=\"new_test__form\" onSubmit={handleSubmit}>\r\n        <div id=\"top_content__container\">\r\n          \r\n          <div className=\"content__section\">\r\n            <table id=\"general_details__table\">\r\n              <tbody>\r\n                <tr className=\"space_under header_row border_bottom\">\r\n                  <th colSpan=\"2\"> General Test Details </th>\r\n                </tr>\r\n                <tr>\r\n                  <td> <label> Field of Study: </label> </td>\r\n                  <td> <label id=\"field__label\"> {field === null ? \"undefined\" : field} </label> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Language: </label> </td>\r\n                  <td>  <select id=\"language__select\" onChange={(e) => setLanguage (e.target.value)}>\r\n                          {languages && languages.map((language) => (\r\n                            <option key={language.languageID} value={language.languageName}> {language.languageName} </option>\r\n                          ))} \r\n                        </select> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Test Type: </label> </td>\r\n                  <td> <select id=\"test_type__select\" onChange={(e) => setTestType (e.target.value)}>\r\n                          {testTypes && testTypes.map((testType) => (\r\n                            <option key={testType.typeID} value={testType.typeName}> {testType.typeName} </option>\r\n                          ))}\r\n                        </select> </td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td> <label> Test Name:                                                                                                                                                           </label> </td>\r\n                  <td> <input id=\"test_name__input\"       type=\"text\"       placeholder=\"Insert test name\"            value={testName}        onChange={(e) => setTestName(e.target.value)}         required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Passing Grade:                                                                                                                                                       </label> </td>\r\n                  <td> <input id=\"passing_grade__input\"   type=\"text\"       placeholder=\"Insert passing grade\"        value={passingGrade}    onChange={(e) => setPassingGrade(e.target.value)}     required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Show correct answers after submission:                                                                                                                               </label> </td>\r\n                  <td> <input id=\"show_answers__checkbox\" type=\"checkbox\"                                           value={reviewTest}      onChange={(e) => setReviewTest(e.target.value)}       required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Message header:                                                                                                                                                      </label> </td>\r\n                  <td> <input id=\"message_header__input\"  type=\"text\"       placeholder=\"Insert header\"               value={header}          onChange={(e) => setHeader(e.target.value)}           required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Message to show on success:                                                                                                                                          </label> </td>\r\n                  <td> <input id=\"message_success__input\" type=\"text\"       placeholder=\"Insert success message\"      value={messageSuccess}  onChange={(e) => setMessageSuccess(e.target.value)}   required/> </td>\r\n                </tr>   \r\n\r\n                <tr>    \r\n                  <td> <label> Message to show on failure:                                                                                                                                         </label> </td>\r\n                  <td> <input id=\"message_failure__input\" type=\"text\"       placeholder=\"Insert failure message\"      value={messageFailure}   onChange={(e) => setMessageFailure(e.target.value)}  required/> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> Certificate Templates: </label> </td>\r\n                  <td> <select id=\"certificate__select\" onChange={(e) => setCertificateTemplateID(e.target.key)}>\r\n                          {certificateTemplates && certificateTemplates.map((certificate) => (\r\n                            <option key={certificate.templateID} value={certificate.templateName}> {certificate.templateName} </option>\r\n                          ))}\r\n                        </select> </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div className=\"content__section\">\r\n            <table id=\"email_delivery__table\">\r\n              <tbody>\r\n                <tr className=\"space_under header_row border_bottom\">\r\n                  <th colSpan=\"2\"> Email Delivery Upon Test Completion </th>\r\n                </tr>\r\n                <tr>\r\n                  <td> <label> Current Status: \"{status === \"OFF\" ? `OFF` : \"ON\"}\"                                                                                                         </label> </td>\r\n                  <td> <div id=\"sending_emails__container\">      \r\n                          <label id=\"sending_emails__label\" > Emails {status === \"OFF\" ? `won't` : \"will\"} be sent upon test completion.                                                   </label>\r\n                          <label                    > to turn {status === \"OFF\" ? \"ON\" : \"OFF\"} email delivery, {status === \"OFF\" ? \"fill out\" : \"reset\"} the mandatory                    </label>\r\n                          <label                    > fields in this section:                                                                                                              </label>\r\n                        </div> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td> <label> From: </label> </td>\r\n                  <td> <input id=\"from__input\"  type=\"text\" value={from}  onChange={(e) => handleFromChange(e.target.value)}                                                                     /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> CC: </label> </td>      \r\n                  <td> <input id=\"cc__input\"    type=\"text\" value={cc}    onChange={(e) => setCC(e.target.value)}   disabled={from ? false : true}                                               /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> BCC: </label> </td>       \r\n                  <td> <input id=\"bcc__input\"   type=\"text\" value={bcc}   onChange={(e) => setBCC(e.target.value)}  disabled={from ? false : true}                                               /> </td>\r\n                </tr>      \r\n              </tbody>\r\n            </table>       \r\n         \r\n         \r\n            <table id=\"passing_test__table\">   \r\n              <tbody>\r\n                <tr className=\"space_under sub_header_row border_bottom\">\r\n                  <th colSpan=\"2\"> Passing the test </th>\r\n                </tr>\r\n                <tr>       \r\n                  <td> <label> Message subject:                                                                                                                                            </label> </td>\r\n                  <td> <input id=\"message_subject__input\" type=\"text\" value={passingSubject} onChange={(e) => setPassingSubject(e.target.value)}  disabled={from ? false : true}   /> </td>\r\n                </tr>      \r\n          \r\n                <tr>       \r\n                  <td> <label> Message body:                                                                                                                                               </label> </td>\r\n                  <td> <input id=\"message_body__input\"    type=\"text\" value={passingBody}    onChange={(e) => setPassingBody(e.target.value)} disabled={from ? false : true}       /> </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td>\r\n                    <label style={{fontWeight: 'bold'}}> Predefined Templated - Click to copy to clipboard </label>\r\n                    <label> NEED TO ADD TEMPLATES HERE </label>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n\r\n          <table id=\"failing_test__table\">\r\n            <tbody>\r\n              <tr className=\"space_under sub_header_row border_bottom\">\r\n                  <th colspan=\"2\"> Failing the test </th>\r\n                </tr>\r\n              <tr>\r\n                <td> <label> Message subject:                                                                                                                                     </label> </td>\r\n                <td> <input id=\"message_subject__input\" type=\"text\" value={failingSubject} onChange={(e) => setFailingSubject(e.target.value)}  disabled={from ? false : true}   /> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td> <label> Message body:                                                                                                                                        </label> </td>\r\n                <td> <input id=\"message_body__input\"    type=\"text\" value={failingBody}    onChange={(e) => setFailingBody(e.target.value)} disabled={from ? false : true}       /> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  <label style={{fontWeight: 'bold'}}> Predefined Templated - Click to copy to clipboard </label>\r\n                  <label> NEED TO ADD TEMPLATES HERE </label>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div id=\"bottom_content__container\">\r\n          <div id=\"questions__container\">\r\n            <h2 className=\"section__headers\"> Questions </h2>\r\n            <div id=\"explanation\">\r\n              <label style={{fontWeight: 'bold'}}> Note: This test is set to be a \"{`${testType}`}\" test, which means:</label>\r\n              \r\n              <ul>\r\n                <li> All the questions that you select here will be included in the test. </li>\r\n                <li> All respondents will receive {`${testType.includes(\"random\") ? \"a DIFFERENT\" : \"the SAME\"}`} set of questions, presented in a different order. </li>\r\n              </ul>\r\n\r\n              <label className=\"sub__label\"> *TIP: if you want each respondent to receive {`${testType.includes(\"random\") ? \"the SAME\" : \"a DIFFERENT\"}`} set of questions, change the test type to \"{`${testType.includes(\"random\") ? \"Predefined\" : \"Random\"}`}\" in the \r\n                  <Link to={`/admin/${test === null ? \"create\" : \"edit\"}-test#test_type__select`} > Test Details</Link> section.* </label>\r\n            </div>\r\n\r\n            <div id=\"question_table__container\">\r\n              <label style={{fontWeight: 'bold', color: 'orange'}}> Select the questions that you want to include in the test </label>\r\n              <label> You can use the tag filter to narrow down the list to a specific subject - Don't worry, filtering won't affect your previous selections. </label>\r\n\r\n              { questions && filteredQuestions && <Filter filterStatus={filterStatus} totalAmount={questions.length} filteredAmount={filteredQuestions.length} \r\n                handleFilterByChange={handleFilterByChange} handleFilterContentChange={handleFilterContentChange}/> }\r\n\r\n              { <QuestionTable createEditTest={true} questions={filteredQuestions} filteredQuestions={filteredQuestions} selectedQuestions={selectedQuestions} tests={tests} \r\n                handleSelectedQuestion={handleSelectedQuestion} handleShowAll={handleShowAll} handleShowSelected={handleShowSelected}/> }\r\n\r\n                <label> The test will include {selectedQuestions.length} questions in total </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"buttons__container\">\r\n            <button className=\"regular__button\" onClick={() => handleBack() }> {`<<` } Back  </button>\r\n            <button className=\"regular__button\" onClick={() => handleShow() }>  Show         </button>\r\n            <button className=\"regular__button\" type=\"submit\"                >  Save {`>>` } </button>\r\n          </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};"]},"metadata":{},"sourceType":"module"}