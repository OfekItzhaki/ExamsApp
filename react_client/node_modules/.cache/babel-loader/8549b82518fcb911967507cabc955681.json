{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\Admin\\\\QuestionTable\\\\QuestionTable.js\";\nimport styles from './QuestionTable.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const QuestionTable = ({\n  questions,\n  handleDelete\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    id: \"questions__table\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"space_under header_row border_bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \" ID                     \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \" Question Text and Tags \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \" Last Update            \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \" Question Type          \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \" # of Tests             \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), questions.map(question => {\n        console.log(question.id)( /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"space_under border_bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"question_id\",\n            children: [\"            \", question.id, \"                           \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"question_title_tags\",\n            children: [\"    \", question.title, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 78\n            }, this), \" \", question.tags.map(tag => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"like_link_button\",\n                  children: [\" \", tag, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"like_link_label\",\n                  children: [\" \", tag !== question.tags[question.tags.length - 1] ? \" | \" : \"\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 25,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true);\n            }), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"question_update\",\n            children: [\"        \", question.lastUpdate, \"                   \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"question_type\",\n            children: [\"          \", question.type, \"                         \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"question_tests\",\n            children: [\"         \", question.numOfTests, \"                   \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"regular__button\",\n              children: \" Show       \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"regular__button\",\n              children: \" Edit       \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"regular__button\",\n              children: \" Duplicate  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"regular__button\",\n              onClick: () => handleDelete(question.id),\n              children: \" Delete \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this)]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this));\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = QuestionTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionTable\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/Admin/QuestionTable/QuestionTable.js"],"names":["styles","Link","QuestionTable","questions","handleDelete","map","question","console","log","id","title","tags","tag","length","lastUpdate","type","numOfTests"],"mappings":"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","sourcesContent":["import styles                   from './QuestionTable.css';\r\nimport { Link }                 from 'react-router-dom';\r\n\r\nexport const QuestionTable = ({ questions, handleDelete }) => {\r\n    return (\r\n        <table id=\"questions__table\">\r\n            <tbody>\r\n                <tr className=\"space_under header_row border_bottom\">\r\n                    <th> ID                     </th>\r\n                    <th> Question Text and Tags </th>\r\n                    <th> Last Update            </th>\r\n                    <th> Question Type          </th>\r\n                    <th> # of Tests             </th>\r\n                    <th></th>\r\n                </tr>\r\n                \r\n\r\n                {questions.map((question) => { console.log(question.id) (\r\n                <tr className=\"space_under border_bottom\" key={question.id}>\r\n                    <td className=\"question_id\">            {question.id}                           </td>\r\n                    <td className=\"question_title_tags\">    {question.title} <br/> {question.tags.map((tag) => { \r\n                        return (\r\n                        <>\r\n                            <button className=\"like_link_button\"> {tag} </button> \r\n                            <label className=\"like_link_label\"> {tag !== question.tags[question.tags.length - 1] ? \" | \" : \"\"} </label>\r\n                        </>)\r\n                        })} </td>\r\n                    <td className=\"question_update\">        {question.lastUpdate}                   </td>\r\n                    <td className=\"question_type\">          {question.type}                         </td>\r\n                    <td className=\"question_tests\">         {question.numOfTests}                   </td>\r\n                    <td className=\"buttons\">\r\n                        <button className=\"regular__button\"> Show       </button>\r\n                        <button className=\"regular__button\"> Edit       </button>\r\n                        <button className=\"regular__button\"> Duplicate  </button>\r\n                        <button className=\"regular__button\"  onClick={() => handleDelete(question.id)}> Delete </button>\r\n                    </td>\r\n                </tr> )})}\r\n            \r\n            </tbody>\r\n        </table>\r\n    )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}