{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\pages\\\\Admin\\\\ManageQuestions\\\\ManageQuestions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { QuestionTable } from '../../../Admin/QuestionTable/QuestionTable';\nimport { useHistory } from 'react-router-dom';\nimport styles from './ManageQuestions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ManageQuestions = ({\n  field\n}) => {\n  _s();\n\n  // ---------------------------- Fetch Info Hooks ---------------------------\n  const [questions, setQuestions] = useState(null);\n  const [tags, setTags] = useState(null); // ----------------------------- Content Hooks -----------------------------    \n\n  const [filter, setFilter] = useState(false);\n  const [filterByTags, setFilterByTags] = useState(true);\n  const [filteredQuestions, setFilteredQuestions] = useState([]); // ----------------------------------------------------------------------------\n\n  const history = useHistory();\n\n  const back = () => {\n    history.goBack();\n  };\n\n  const newQuestion = () => {\n    history.push(\"/admin/create-question\");\n  };\n\n  const next = () => {};\n\n  const handleDelete = id => {\n    const newQuestions = questions.filter(question => questions.id !== id);\n    setQuestions(newQuestions);\n  };\n\n  const handleFilterByChange = value => {\n    if (value === \"tags\") setFilterByTags(true);else setFilterByTags(false);\n  };\n\n  const handleFilterContentChange = value => {\n    if (value === \"\") setFilter(false);else setFilter(true);\n    let newQuestionList = questions;\n    setFilteredQuestions(newQuestionList.filter(question => {\n      let contains = false;\n\n      if (filterByTags === true) {\n        question.tags.map(tag => {\n          if (tag.toLowerCase().includes(value)) contains = true;\n        });\n      } else {\n        if (question.title.includes(value)) contains = true;\n      }\n\n      if (contains === true) return question;\n    }));\n  };\n\n  const fetchTags = () => {\n    fetch(\"http://localhost:8000/tags\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setTags(data);\n    }).catch(err => console.log('error fetching tags:' + err));\n  };\n\n  const fetchQuestions = () => {\n    fetch(\"http://localhost:8000/questions\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setQuestions(data);\n      setFilteredQuestions(data);\n    }).catch(err => console.log('error fetching questions:' + err));\n  }; // Meant for fetching the necessary information on first render\n\n\n  useEffect(() => {\n    document.title = \"Manage Questions\";\n    let isMounted = true; // note mutable flag\n\n    if (isMounted) {\n      // add conditional check \n      fetchQuestions();\n      fetchTags();\n    }\n\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage_questions noselect\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"headers__container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page__header\",\n        children: [\" Available Questions for \", field ? field : \"\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"filter_by__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Filter by: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => handleFilterByChange(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"tags\",\n          children: \" tags \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"content\",\n          children: \" content \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"filter__input\",\n        type: \"text\",\n        onChange: e => handleFilterContentChange(e.target.value),\n        placeholder: \"Enter a list of keywords separated by commas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"filter__state\",\n        children: [\" Filter is \", filter === false ? \"OFF\" : \"ON\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"amount__filtered\",\n        children: [\" Filtered \", filteredQuestions && filteredQuestions.length, \" of total \", questions && questions.length, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"filter__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"table__container\",\n        children: [questions && /*#__PURE__*/_jsxDEV(QuestionTable, {\n          questions: filteredQuestions,\n          tags: tags,\n          handleDelete: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          type: \"text\",\n          id: \"showing_questions\",\n          children: [\" showing 1-\", `AMOUNT`, \" of filtered Questions \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"regular__button\",\n          onClick: () => next(),\n          children: [\" Next \", `>>`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttons__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"regular__button\",\n        onClick: () => back(),\n        children: [\"  \", `<<`, \" Back         \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"regular__button\",\n        onClick: () => newQuestion(),\n        children: [\"  New Question \", `>>`, \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ManageQuestions, \"uh9L3D+VW/MOi8PiSYAoQbBa8lw=\", false, function () {\n  return [useHistory];\n});\n\n_c = ManageQuestions;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageQuestions\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Admin/ManageQuestions/ManageQuestions.js"],"names":["React","useEffect","useState","QuestionTable","useHistory","styles","ManageQuestions","field","questions","setQuestions","tags","setTags","filter","setFilter","filterByTags","setFilterByTags","filteredQuestions","setFilteredQuestions","history","back","goBack","newQuestion","push","next","handleDelete","id","newQuestions","question","handleFilterByChange","value","handleFilterContentChange","newQuestionList","contains","map","tag","toLowerCase","includes","title","fetchTags","fetch","method","then","res","json","data","catch","err","console","log","fetchQuestions","document","isMounted","e","target","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState }   from 'react';\r\nimport        { QuestionTable }      from '../../../Admin/QuestionTable/QuestionTable';\r\nimport        { useHistory }            from 'react-router-dom';\r\nimport styles                           from './ManageQuestions.css';\r\n\r\nexport const ManageQuestions = ({ field }) => {\r\n\r\n    // ---------------------------- Fetch Info Hooks ---------------------------\r\n\r\n    const [ questions,          setQuestions     ]  = useState(null);\r\n    const [ tags,               setTags          ]  = useState(null);\r\n\r\n    // ----------------------------- Content Hooks -----------------------------    \r\n\r\n    const [ filter,             setFilter        ]  = useState(false);\r\n    const [ filterByTags,       setFilterByTags  ]  = useState(true);\r\n\r\n    const [ filteredQuestions,  setFilteredQuestions  ] = useState([]);\r\n\r\n    // ----------------------------------------------------------------------------\r\n\r\n    const history = useHistory();\r\n\r\n    const back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const newQuestion = () => {\r\n        history.push(\"/admin/create-question\");\r\n    }\r\n\r\n    const next = () => {\r\n        \r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        const newQuestions = questions.filter(question => questions.id !== id);\r\n        setQuestions(newQuestions);\r\n    }\r\n\r\n    const handleFilterByChange = (value) => {\r\n        if (value === \"tags\") setFilterByTags(true);\r\n        else setFilterByTags(false);\r\n    }\r\n\r\n    const handleFilterContentChange = (value) => {\r\n        \r\n        if (value === \"\") setFilter(false);\r\n        else setFilter(true);\r\n\r\n        let newQuestionList = questions;\r\n        setFilteredQuestions(newQuestionList.filter((question) => { \r\n            \r\n            let contains = false;\r\n\r\n            if (filterByTags === true) {\r\n                question.tags.map((tag) => {\r\n                    if (tag.toLowerCase().includes(value)) contains = true;\r\n                });\r\n            } else {\r\n                if (question.title.includes(value)) contains = true;\r\n            }\r\n\r\n            if (contains === true) return question;\r\n\r\n        }));\r\n    }\r\n\r\n    const fetchTags = () => {\r\n        fetch(\"http://localhost:8000/tags\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n          setTags(data); \r\n        })\r\n        .catch((err) => console.log('error fetching tags:' + err))\r\n      }\r\n\r\n    const fetchQuestions = () => {\r\n        fetch(\"http://localhost:8000/questions\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            setQuestions(data)\r\n            setFilteredQuestions(data);\r\n        })\r\n        .catch((err) => console.log('error fetching questions:' + err))\r\n      }\r\n\r\n    // Meant for fetching the necessary information on first render\r\n    useEffect(() => {\r\n        document.title = \"Manage Questions\";\r\n\r\n        let isMounted = true;           // note mutable flag\r\n\r\n        if (isMounted) {                // add conditional check \r\n            fetchQuestions();\r\n            fetchTags();\r\n        }\r\n\r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"manage_questions noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1 className=\"page__header\"> Available Questions for {field ? field : \"\"} </h1>\r\n            </div>\r\n            <div id=\"filter_by__container\">\r\n                <label> Filter by: </label>\r\n                <select onChange={ (e) => handleFilterByChange(e.target.value) }>\r\n                    <option value=\"tags\"> tags </option>\r\n                    <option value=\"content\"> content </option>\r\n                </select>\r\n                <input id=\"filter__input\" type=\"text\" onChange={ (e) => handleFilterContentChange(e.target.value) } placeholder=\"Enter a list of keywords separated by commas\"/>\r\n                <label id=\"filter__state\"> Filter is {filter === false ? \"OFF\" : \"ON\"} </label>\r\n                <label id=\"amount__filtered\"> Filtered {filteredQuestions && filteredQuestions.length} of total {questions && questions.length} </label>\r\n            </div>\r\n            <div id=\"filter__container\">\r\n                <div id=\"table__container\">\r\n                    {questions && <QuestionTable questions={filteredQuestions} tags={tags} handleDelete={handleDelete} /> }\r\n                    <label type=\"text\" id=\"showing_questions\"> showing 1-{`AMOUNT`} of filtered Questions </label>\r\n                    <button className=\"regular__button\" onClick={() =>   next()          }> Next {`>>`} </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"buttons__container\">\r\n                <button className=\"regular__button\" onClick={() =>   back()          }>  {`<<` } Back         </button>\r\n                <button className=\"regular__button\" onClick={() =>   newQuestion()   }>  New Question {`>>`}  </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}