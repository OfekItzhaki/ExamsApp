{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\pages\\\\Admin\\\\ManageQuestions\\\\ManageQuestions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { QuestionTable } from '../../../Admin/QuestionTable/QuestionTable';\nimport { useHistory } from 'react-router-dom';\nimport styles from './ManageQuestions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ManageQuestions = ({\n  field\n}) => {\n  _s();\n\n  // ---------------------------- Fetch Info Hooks ---------------------------\n  const [questions, setQuestions] = useState(null);\n  const [tags, setTags] = useState(question ? question.tags : \"\"); // ----------------------------- Content Hooks -----------------------------    \n\n  const [filter, setFilter] = useState(false);\n  const [filterContent, setFilterContent] = useState(\"\"); // ----------------------------------------------------------------------------\n\n  const history = useHistory();\n\n  const back = () => {\n    history.goBack();\n  };\n\n  const newQuestion = () => {\n    history.push(\"/admin/create-question\");\n  };\n\n  const handleDelete = id => {\n    const newQuestions = questions.filter(question => questions.id !== id);\n    setQuestions(newQuestions);\n  };\n\n  const handleFilterContentChange = value => {\n    setFilterContent(value);\n    setTags();\n  };\n\n  const fetchTags = () => {\n    fetch(\"http://localhost:8000/tags\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setTags(data);\n    }).catch(err => console.log('error fetching tags:' + err));\n  };\n\n  const fetchQuestions = () => {\n    fetch(\"http://localhost:8000/questions\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => setQuestions(data)).catch(err => console.log('error fetching student tests:' + err));\n  }; // Meant for fetching the necessary information on first render\n\n\n  useEffect(() => {\n    document.title = \"Manage Questions\";\n    let isMounted = true; // note mutable flag\n\n    if (isMounted) {\n      // add conditional check \n      fetchQuestions();\n    }\n\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, []);\n  useEffect(() => {\n    let isMounted = true; // note mutable flag\n\n    if (isMounted) {\n      // add conditional check \n      setFilter(filterContent === \"\" ? false : true);\n    }\n\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, [filterContent]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage_questions noselect\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"headers__container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page__header\",\n        children: [\" Available Questions for \", field ? field : \"\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"filter__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"filter_tags__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Filter by tags or content: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"filter__input\",\n          type: \"text\",\n          value: filterContent,\n          onChange: e => {\n            handleFilterContentChange(e.target.value);\n          },\n          placeholder: \"Enter a list of keywords separated by commas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"filter__state\",\n          children: [\" Filter is \", filter === false ? \"OFF\" : \"ON\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"amount__filtered\",\n        children: [\" Filtered \", `AMOUNT`, \" of total \", `AMOUNT`, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"table__container\",\n      children: [questions && /*#__PURE__*/_jsxDEV(QuestionTable, {\n        questions: questions,\n        handleDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        type: \"text\",\n        id: \"showing_questions\",\n        children: [\" showing 1-\", `AMOUNT`, \" of filtered Questions \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttons__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"regular__button\",\n        onClick: () => back(),\n        children: [\"  \", `<<`, \" Back         \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"regular__button\",\n        onClick: () => newQuestion(),\n        children: [\"  New Question \", `>>`, \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ManageQuestions, \"PjanczvNDz1L2bBL6CLDmo56Z0g=\", false, function () {\n  return [useHistory];\n});\n\n_c = ManageQuestions;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageQuestions\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Admin/ManageQuestions/ManageQuestions.js"],"names":["React","useEffect","useState","QuestionTable","useHistory","styles","ManageQuestions","field","questions","setQuestions","tags","setTags","question","filter","setFilter","filterContent","setFilterContent","history","back","goBack","newQuestion","push","handleDelete","id","newQuestions","handleFilterContentChange","value","fetchTags","fetch","method","then","res","json","data","catch","err","console","log","fetchQuestions","document","title","isMounted","e","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState }   from 'react';\r\nimport        { QuestionTable }      from '../../../Admin/QuestionTable/QuestionTable';\r\nimport        { useHistory }            from 'react-router-dom';\r\nimport styles                           from './ManageQuestions.css';\r\n\r\nexport const ManageQuestions = ({ field }) => {\r\n\r\n    // ---------------------------- Fetch Info Hooks ---------------------------\r\n\r\n    const [ questions,          setQuestions     ]  = useState(null);\r\n    const [ tags,               setTags          ]  = useState(question ? question.tags : \"\");\r\n\r\n    // ----------------------------- Content Hooks -----------------------------    \r\n\r\n    const [ filter,             setFilter        ]  = useState(false);\r\n    const [ filterContent,      setFilterContent ]  = useState(\"\");\r\n\r\n    // ----------------------------------------------------------------------------\r\n\r\n    const history = useHistory();\r\n\r\n    const back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const newQuestion = () => {\r\n        history.push(\"/admin/create-question\");\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        const newQuestions = questions.filter(question => questions.id !== id);\r\n        setQuestions(newQuestions);\r\n    }\r\n\r\n    const handleFilterContentChange = (value) => {\r\n        setFilterContent(value);\r\n        setTags();\r\n    }\r\n\r\n    const fetchTags = () => {\r\n        fetch(\"http://localhost:8000/tags\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n          setTags(data); \r\n        })\r\n        .catch((err) => console.log('error fetching tags:' + err))\r\n      }\r\n\r\n    const fetchQuestions = () => {\r\n        fetch(\"http://localhost:8000/questions\", {\r\n          method: 'GET',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => setQuestions(data))\r\n        .catch((err) => console.log('error fetching student tests:' + err))\r\n      }\r\n\r\n    // Meant for fetching the necessary information on first render\r\n    useEffect(() => {\r\n        document.title = \"Manage Questions\";\r\n\r\n        let isMounted = true;           // note mutable flag\r\n\r\n        if (isMounted) {                // add conditional check \r\n            fetchQuestions();\r\n        }\r\n\r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;           // note mutable flag\r\n\r\n        if (isMounted) {                // add conditional check \r\n            setFilter(filterContent === \"\" ? false : true)\r\n        }\r\n\r\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n    }, [filterContent])\r\n\r\n    return (\r\n        <div className=\"manage_questions noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1 className=\"page__header\"> Available Questions for {field ? field : \"\"} </h1>\r\n            </div>\r\n            <div id=\"filter__container\">\r\n                <div id=\"filter_tags__container\">    \r\n                    <label> Filter by tags or content: </label>\r\n                    <input id=\"filter__input\" type=\"text\" value={filterContent} onChange={ (e) => {handleFilterContentChange(e.target.value)} } placeholder=\"Enter a list of keywords separated by commas\"/>\r\n                    <label id=\"filter__state\"> Filter is {filter === false ? \"OFF\" : \"ON\"} </label>\r\n                </div>\r\n                <label id=\"amount__filtered\"> Filtered {`AMOUNT`} of total {`AMOUNT`} </label>\r\n            </div>\r\n            <div id=\"table__container\">\r\n                {questions && <QuestionTable questions={questions} handleDelete={handleDelete} /> }\r\n                <label type=\"text\" id=\"showing_questions\"> showing 1-{`AMOUNT`} of filtered Questions </label>\r\n            </div>\r\n\r\n            <div id=\"buttons__container\">\r\n                <button className=\"regular__button\" onClick={() =>   back()          }>  {`<<` } Back         </button>\r\n                <button className=\"regular__button\" onClick={() =>   newQuestion()  }>  New Question {`>>`}  </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}