{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\pages\\\\Admin\\\\CreateEditQuestion\\\\CreateEditQuestion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '../../../shared/Button/Button';\nimport { useHistory } from 'react-router-dom';\nimport { TagsInput } from '../../../Admin/TagsInput/TagsInput';\nimport styles from './CreateEditQuestion.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateEditQuestion = ({\n  action,\n  field,\n  question\n}) => {\n  _s();\n\n  // ------------------------- Content Hooks -------------------------\n  const [questionTypes, setQuestionTypes] = useState(null);\n  const [questions, setQuestions] = useState(null); // *Question Table*\n\n  const [type, setType] = useState(question && question ? question.type : \"\");\n  const [questionHeader, setQuestionHeader] = useState(question && question ? question.title : \"\");\n  const [questionText, setQuestionText] = useState(question && question ? question.text : \"\");\n  const [questionID, setQuestionID] = useState(question && question ? question.id + 1 : 0); // *Answers Table*\n\n  const [possibleAnswers, setPossibleAnswers] = useState([{\n    \"id\": 0,\n    \"answer\": \"\",\n    \"correct\": false\n  }, {\n    \"id\": 1,\n    \"answer\": \"\",\n    \"correct\": false\n  }, {\n    \"id\": 2,\n    \"answer\": \"\",\n    \"correct\": false\n  }]);\n  const [answerID, setAnswerID] = useState(possibleAnswers && possibleAnswers ? possibleAnswers[possibleAnswers.length - 1].id + 1 : 0);\n  const [answersLayout, setAnswersLayout] = useState(\"\"); // *Tags Table*\n\n  const [tags, setTags] = useState(\"\"); // -----------------------------------------------------------------\n\n  const selectedTags = tags => console.log(tags);\n\n  const initialState = () => {\n    console.log(\"initial state\");\n    setQuestionHeader(\"\");\n    setQuestionText(\"\");\n    let newPossibleAnswers = [{\n      \"id\": 0,\n      \"answer\": \"\",\n      \"correct\": false\n    }, {\n      \"id\": 1,\n      \"answer\": \"\",\n      \"correct\": false\n    }, {\n      \"id\": 2,\n      \"answer\": \"\",\n      \"correct\": false\n    }];\n    setPossibleAnswers(newPossibleAnswers);\n    setAnswerID(newPossibleAnswers && newPossibleAnswers ? newPossibleAnswers[newPossibleAnswers.length - 1].id + 1 : 0);\n  };\n\n  const addAnswer = () => {\n    let newPossibleAnswers = possibleAnswers;\n    newPossibleAnswers.push({\n      \"id\": answerID,\n      \"answer\": \"\",\n      correct: false\n    });\n    setPossibleAnswers(newPossibleAnswers);\n    setAnswerID(answerID + 1);\n  };\n\n  const removeAnswer = id => {\n    console.log(\"got to remove answer func\");\n    console.log(\"id \" + id);\n    let newPossibleAnswers = possibleAnswers;\n    newPossibleAnswers.filter(answer => answer.id !== id);\n    setPossibleAnswers(newPossibleAnswers);\n  };\n\n  const history = useHistory();\n\n  const back = () => {\n    history.goBack();\n  };\n\n  const show = () => {};\n\n  const handleAnswerClick = id => {\n    console.log(\"handle answer click\");\n    let newPossibleAnswers = possibleAnswers;\n    newPossibleAnswers.filter(answer => answer.id === id).map(answer => {\n      console.log(answer.correct);\n      answer.correct = !answer.correct;\n    });\n    setPossibleAnswers(newPossibleAnswers);\n  };\n\n  const handleLayoutChange = e => {\n    if (e.target.checked === true) {\n      setAnswersLayout(e.target.id);\n    }\n  };\n\n  const handleAnswerChanged = (id, a) => {\n    console.log(\"handle answer changed\");\n    let newPossibleAnswers = possibleAnswers;\n    newPossibleAnswers.filter(answer => answer.id === id).map(answer => {\n      answer.answer = a;\n      console.log(a);\n    });\n    setPossibleAnswers(newPossibleAnswers);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    saveQuestion();\n  };\n\n  const saveQuestion = () => {\n    fetch('http://localhost:8000/questions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: questionID,\n        tags: tags,\n        last_update: Date.now,\n        type: type,\n        title: questionHeader,\n        text: questionText,\n        difficulty: question && question.difficulty ? question.difficulty : \"low\",\n        answers: possibleAnswers,\n        num_of_tests: question && question.num_of_tests ? question.num_of_tests : 0,\n        answersLayout: answersLayout\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      setQuestionID(questionID + 1);\n      initialState();\n    }).catch(err => console.log(`error ${err}`));\n  };\n\n  const fetchQuestions = () => {\n    fetch(\"http://localhost:8000/questions\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setQuestions(data);\n      setQuestionID(questionID ? questionID : data[data.length - 1].id + 1);\n      console.log(questionID);\n    }).catch(err => console.log('error fetching questions:' + err));\n  };\n\n  const fetchQuestionTypes = () => {\n    fetch(\"http://localhost:8000/questionTypes\", {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setQuestionTypes(data);\n      setType(type ? type : data[1].type);\n    }).catch(err => console.log('error fetching question types:' + err));\n  };\n\n  useEffect(() => {\n    document.title = `${action === undefined ? \"Create\" : \"Edit\"} Question`;\n  }, [action]);\n  useEffect(() => {\n    let isMounted = true; // note mutable flag\n\n    if (isMounted) {\n      // add conditional check\n      fetchQuestions();\n      fetchQuestionTypes();\n    }\n\n    possibleAnswers.map(answer => document.getElementById(`radio_${answer.id}`).checked = answer.correct // ,console.log(document.getElementById(`radio_${answer.id}`).checked)\n    );\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, [question, possibleAnswers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create_edit_question noselect\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page__header\",\n      children: [\" \", action === undefined ? \"Create\" : \"Edit\", \" Question \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"new_question__form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content__section\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"question__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Field: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  id: \"field__label\",\n                  children: [\" \", field === undefined ? \"undefined\" : field, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Question type: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 24\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"question_type__select\",\n                  defaultValue: type,\n                  children: questionTypes && questionTypes.map(questionType => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: questionType.type,\n                    onChange: e => setType(e.target.value),\n                    children: [\" \", questionType.type, \" \"]\n                  }, questionType.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 24\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Question header: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"question_header__input\",\n                  value: questionHeader,\n                  type: \"text\",\n                  placeholder: \"Enter your question here\",\n                  onChange: e => setQuestionHeader(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Question additional information: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"question_information__input\",\n                  value: questionText,\n                  type: \"text\",\n                  placeholder: \"Type something\",\n                  onChange: e => setQuestionText(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"answers__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: possibleAnswers && possibleAnswers.map(answer => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", answer.id === 0 && /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Possible answers: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 43\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => removeAnswer(answer.id),\n                  children: \" X \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: `answer_${answer.id}`,\n                  name: \"answer\",\n                  type: \"text\",\n                  onChange: e => handleAnswerChanged(answer.id, e.target.value),\n                  placeholder: `Answer #${answer.id}`,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: `radio_${answer.id}`,\n                  name: type !== \"\" ? type : \"\",\n                  type: \"radio\",\n                  defaultChecked: answer.correct,\n                  onChange: e => handleAnswerClick(answer.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 22\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `answer_${answer.id}`,\n                  children: \"  Incorrect  \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 185\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)]\n            }, answer.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer_layout__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            name: \"layout__label\",\n            children: \" Answers layout: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"vertical\",\n            type: \"radio\",\n            name: \"answer_layout\",\n            defaultChecked: true,\n            onChange: e => handleLayoutChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), \"    \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"vertical\",\n            children: \"  Vertical   \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 134\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"horizontal\",\n            type: \"radio\",\n            name: \"answer_layout\",\n            onChange: e => handleLayoutChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), \"    \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"horizontal\",\n            children: \"  Horizontal \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 134\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addAnswer(),\n            children: \" Add an Answer \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"tags__container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"tags__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Tags: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(TagsInput, {\n                  selectedTags: selectedTags\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 22\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"buttons__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => back(),\n          children: [\" \", `<<`, \" Back  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => show(),\n          children: \"  Show         \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: [\"  Save \", `>>`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateEditQuestion, \"HFIMBy3toWTyMFFh40V4t6nn5/U=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateEditQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateEditQuestion\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Admin/CreateEditQuestion/CreateEditQuestion.js"],"names":["React","useState","useEffect","Button","useHistory","TagsInput","styles","CreateEditQuestion","action","field","question","questionTypes","setQuestionTypes","questions","setQuestions","type","setType","questionHeader","setQuestionHeader","title","questionText","setQuestionText","text","questionID","setQuestionID","id","possibleAnswers","setPossibleAnswers","answerID","setAnswerID","length","answersLayout","setAnswersLayout","tags","setTags","selectedTags","console","log","initialState","newPossibleAnswers","addAnswer","push","correct","removeAnswer","filter","answer","history","back","goBack","show","handleAnswerClick","map","handleLayoutChange","e","target","checked","handleAnswerChanged","a","handleSubmit","event","preventDefault","saveQuestion","fetch","method","headers","body","JSON","stringify","last_update","Date","now","difficulty","answers","num_of_tests","then","res","json","data","catch","err","fetchQuestions","fetchQuestionTypes","document","undefined","isMounted","getElementById","questionType","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport        { Button }              from '../../../shared/Button/Button';\r\nimport        { useHistory }          from 'react-router-dom';\r\nimport        { TagsInput }           from '../../../Admin/TagsInput/TagsInput';\r\nimport styles                         from './CreateEditQuestion.css';\r\n\r\n  export const CreateEditQuestion = ({ action, field, question }) => {\r\n\r\n  // ------------------------- Content Hooks -------------------------\r\n\r\n  const [questionTypes,       setQuestionTypes    ]  = useState(null);\r\n  const [questions,           setQuestions        ]  = useState(null);\r\n\r\n  // *Question Table*\r\n  const [ type,               setType             ]  = useState(question && question ? question.type : \"\");\r\n  const [ questionHeader,     setQuestionHeader   ]  = useState(question && question ? question.title : \"\");\r\n  const [ questionText,       setQuestionText     ]  = useState(question && question ? question.text : \"\");\r\n  const [ questionID,         setQuestionID       ]  = useState(question && question ? question.id + 1 : 0);\r\n\r\n  // *Answers Table*\r\n  const [ possibleAnswers,    setPossibleAnswers  ]  = useState([\r\n    { \"id\": 0, \"answer\": \"\", \"correct\": false},\r\n    { \"id\": 1, \"answer\": \"\", \"correct\": false},\r\n    { \"id\": 2, \"answer\": \"\", \"correct\": false}\r\n  ]);\r\n  const [ answerID,           setAnswerID         ]  = useState(possibleAnswers && possibleAnswers ? possibleAnswers[possibleAnswers.length - 1].id + 1: 0);\r\n  const [ answersLayout,      setAnswersLayout    ]  = useState(\"\");\r\n\r\n  // *Tags Table*\r\n  const [ tags,               setTags             ]  = useState(\"\");\r\n\r\n  // -----------------------------------------------------------------\r\n\r\n  const selectedTags = tags => console.log(tags);\r\n\r\n  const initialState = () => {\r\n    console.log(\"initial state\");\r\n    setQuestionHeader(\"\");\r\n    setQuestionText(\"\");\r\n\r\n    let newPossibleAnswers = ([\r\n      { \"id\": 0, \"answer\": \"\", \"correct\": false},\r\n      { \"id\": 1, \"answer\": \"\", \"correct\": false},\r\n      { \"id\": 2, \"answer\": \"\", \"correct\": false}\r\n    ]);\r\n\r\n    setPossibleAnswers(newPossibleAnswers);\r\n    setAnswerID(newPossibleAnswers && newPossibleAnswers ? newPossibleAnswers[newPossibleAnswers.length - 1].id + 1: 0)\r\n  }\r\n  \r\n  const addAnswer = () => {  \r\n    let newPossibleAnswers = possibleAnswers;\r\n    newPossibleAnswers.push({ \"id\": answerID, \"answer\": \"\", correct: false });\r\n    setPossibleAnswers(newPossibleAnswers);\r\n    setAnswerID(answerID + 1);\r\n  }\r\n\r\n  const removeAnswer = (id) => {  \r\n    console.log(\"got to remove answer func\")\r\n    console.log(\"id \" + id)\r\n    let newPossibleAnswers = possibleAnswers;\r\n    newPossibleAnswers.filter((answer) => answer.id !== id);\r\n    setPossibleAnswers(newPossibleAnswers);\r\n  }\r\n  \r\n  const history = useHistory();\r\n  const back = () => {\r\n      history.goBack();\r\n  }\r\n\r\n  const show = () => {\r\n    \r\n  }\r\n\r\n  const handleAnswerClick = (id) => {\r\n    console.log(\"handle answer click\");\r\n    let newPossibleAnswers = possibleAnswers;\r\n    newPossibleAnswers.filter((answer) => answer.id === id).map((answer) => {\r\n      console.log(answer.correct);\r\n      answer.correct = !answer.correct;\r\n    });\r\n    setPossibleAnswers(newPossibleAnswers);\r\n  }\r\n\r\n  const handleLayoutChange = (e) => {\r\n    if (e.target.checked === true) {\r\n      setAnswersLayout(e.target.id);\r\n    }\r\n  }\r\n\r\n  const handleAnswerChanged = (id, a) => {\r\n    console.log(\"handle answer changed\");\r\n    let newPossibleAnswers = possibleAnswers;\r\n    newPossibleAnswers.filter((answer) => answer.id === id).map((answer) => {\r\n      answer.answer = a;\r\n      console.log(a);\r\n    });\r\n    setPossibleAnswers(newPossibleAnswers);\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    saveQuestion();\r\n  }\r\n\r\n  const saveQuestion = () => {\r\n    fetch('http://localhost:8000/questions', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n        id: questionID,\r\n        tags: tags,\r\n        last_update: Date.now,\r\n        type: type,\r\n        title: questionHeader,\r\n        text: questionText,\r\n        difficulty: (question && question.difficulty ? question.difficulty : \"low\"),\r\n        answers: possibleAnswers,\r\n        num_of_tests: (question && question.num_of_tests ? question.num_of_tests : 0),\r\n        answersLayout: answersLayout\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => { \r\n        console.log(data); \r\n        setQuestionID(questionID + 1); \r\n        initialState(); \r\n      })\r\n      .catch((err) => console.log(`error ${err}`))\r\n  }\r\n\r\n  const fetchQuestions = () => {\r\n    fetch(\"http://localhost:8000/questions\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setQuestions(data); \r\n      setQuestionID(questionID ? questionID : data[data.length - 1].id + 1); \r\n      console.log(questionID); \r\n    })\r\n    .catch((err) => console.log('error fetching questions:' + err))\r\n  }\r\n\r\n  const fetchQuestionTypes = () => {\r\n    fetch(\"http://localhost:8000/questionTypes\", {\r\n      method: 'GET',\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => { \r\n      setQuestionTypes(data); \r\n      setType(type ? type : data[1].type); \r\n    })\r\n    .catch((err) => console.log('error fetching question types:' + err))\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = `${action === undefined ? \"Create\" : \"Edit\"} Question`;\r\n  }, [action])\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;           // note mutable flag\r\n\r\n    if (isMounted) {                // add conditional check\r\n      fetchQuestions();\r\n      fetchQuestionTypes();\r\n    }\r\n\r\n    possibleAnswers.map((answer) => (\r\n      document.getElementById(`radio_${answer.id}`).checked = answer.correct\r\n      // ,console.log(document.getElementById(`radio_${answer.id}`).checked)\r\n    ))\r\n\r\n    return () => { isMounted = false }; // cleanup toggles value, if unmounted\r\n  }, [question, possibleAnswers])\r\n\r\n  return (\r\n    <div className=\"create_edit_question noselect\">\r\n      <h1 className=\"page__header\"> { action === undefined ? \"Create\" : \"Edit\" } Question </h1>\r\n      <form className=\"new_question__form\" onSubmit={handleSubmit}>\r\n\r\n        <div className=\"content__section\">\r\n\r\n          {/* Might not work, JUST FOR NOW !!! */}\r\n          <table id=\"question__table\">\r\n            <tbody>\r\n              <tr>\r\n                <td> <label> Field: </label> </td>\r\n                <td> <label id=\"field__label\"> { field === undefined ? \"undefined\" : field } </label> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                  <td> <label> Question type: </label> </td>\r\n                  <td> <select id=\"question_type__select\" defaultValue={type}>\r\n                            {questionTypes && questionTypes.map((questionType) => (\r\n                              <option key={questionType.id} value={questionType.type} onChange={(e) => setType(e.target.value)} > {questionType.type} </option>\r\n                            ))}\r\n                        </select> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td> <label> Question header: </label> </td>\r\n                <td> <input id=\"question_header__input\"      value={questionHeader} type=\"text\" placeholder=\"Enter your question here\"  onChange={(e) => setQuestionHeader(e.target.value)} required/> </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td> <label> Question additional information: </label> </td>\r\n                <td> <input id=\"question_information__input\" value={questionText}   type=\"text\" placeholder=\"Type something\"            onChange={(e) => setQuestionText(e.target.value)}    required/> </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div className=\"content__section\">\r\n          <table id=\"answers__table\">\r\n            <tbody>\r\n\r\n              {possibleAnswers && possibleAnswers.map((answer) => (\r\n              <tr key={answer.id}>\r\n                <td> { answer.id === 0 && <label> Possible answers: </label> } </td>\r\n                <td> <button  onClick={() => removeAnswer(answer.id)} > X </button> </td>\r\n                <td> <input   id={`answer_${answer.id}` } name=\"answer\" type=\"text\" onChange={(e) => handleAnswerChanged(answer.id, e.target.value)} placeholder={`Answer #${answer.id}`} required/> </td>\r\n                <td> <input   id={`radio_${answer.id}`  } name={type !== \"\" ? type : \"\"} type=\"radio\" defaultChecked={answer.correct} onChange={(e) => handleAnswerClick(answer.id)} /> <label htmlFor={`answer_${answer.id}`}   >  Incorrect  </label> </td>\r\n              </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <div className=\"answer_layout__container\">\r\n            <label name=\"layout__label\"> Answers layout: </label>\r\n            <input id=\"vertical\"    type=\"radio\"  name=\"answer_layout\"  defaultChecked onChange={(e) => handleLayoutChange(e)} />    <label htmlFor=\"vertical\"   >  Vertical   </label>\r\n            <input id=\"horizontal\"  type=\"radio\"  name=\"answer_layout\"                 onChange={(e) => handleLayoutChange(e)} />    <label htmlFor=\"horizontal\" >  Horizontal </label>\r\n            <button onClick={() => addAnswer()}> Add an Answer </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"tags__container\">\r\n          <table id=\"tags__table\">\r\n            <tbody>\r\n              <tr>\r\n                <td> <label> Tags: </label> </td>\r\n                {/* <input id=\"tags__input\" type=\"text\" placeholder=\"Enter tags\"/> */}\r\n                <td> <TagsInput selectedTags={selectedTags}/> </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div id=\"buttons__container\">\r\n          <button onClick={() => back() }> {`<<` } Back  </button>\r\n          <button onClick={() => show() }>  Show         </button>\r\n          <button type=\"submit\"          >  Save {`>>` } </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};"]},"metadata":{},"sourceType":"module"}