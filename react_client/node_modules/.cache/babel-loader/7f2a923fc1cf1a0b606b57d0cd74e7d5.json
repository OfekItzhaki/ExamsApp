{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\Admin\\\\QuestionTable\\\\QuestionTable.js\";\nimport styles from './QuestionTable.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const QuestionTable = ({\n  questions,\n  filteredQuestions,\n  tests,\n  handleNext,\n  handleShowAll,\n  handleDelete\n}) => {\n  let numOfQuestions = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"questions__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"table__container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"questions__table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"space_under header_row border_bottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" ID                     \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Question Text and Tags \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Last Update            \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Question Type          \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" # of Tests             \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 25\n          }, this), questions.map((question, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"space_under border_bottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"question_id\",\n              children: [\"        \", question.id, \"                                                   \"]\n            }, question.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"question_title_tags\",\n              children: [\"     \", question.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 29\n              }, this), question.tags.map(tag => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"like_tag_button\",\n                    children: [\"      \", tag, \"                                                           \"]\n                  }, tag, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 31,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"like_link_label\",\n                    children: [\"                 \", tag !== question.tags[question.tags.length - 1] ? \" | \" : \"\", \"  \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 32,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true);\n              }), \" \"]\n            }, question.title, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"question_update\",\n              children: [\"      \", question.lastUpdate, \"       \"]\n            }, question.lastUpdate, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"question_type\",\n              children: [\"            \", question.type, \"             \"]\n            }, question.type, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), tests.map(test => {\n              /*#__PURE__*/\n              _jsxDEV(\"td\", {\n                children: [test.questions.map(questionID => {\n                  console.log(\"questionID \" + questionID + \" - \" + numOfQuestions);\n                  if (test.questions[test.questions.length - 1].questionID !== questionID) return ++numOfQuestions;else return \"\";\n                }), \";\"]\n              }, test.testID, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this);\n\n              if (numOfQuestions !== 0) return numOfQuestions;else return \"\";\n            }), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                display: \"none\"\n              },\n              children: [\" \", numOfQuestions = 0, \" \"]\n            }, \"hidden\", true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"regular__button\",\n                children: \" Show                                               \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"regular__button\",\n                children: \" Edit                                               \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"regular__button\",\n                children: \" Duplicate                                          \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"regular__button\",\n                onClick: () => handleDelete(question.id),\n                children: \" Delete  \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, question, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"under_table__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        type: \"text\",\n        id: \"showing_questions\",\n        children: [\" showing 1-\", filteredQuestions ? filteredQuestions.length : \"\", \" of filtered Questions \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"regular__button\",\n        onClick: () => handleNext(),\n        children: [\" Next \", `>>`, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"regular__button\",\n        onClick: () => handleShowAll(),\n        children: [\" Show All \", questions && questions.length, \" questions \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = QuestionTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionTable\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/Admin/QuestionTable/QuestionTable.js"],"names":["styles","useState","QuestionTable","questions","filteredQuestions","tests","handleNext","handleShowAll","handleDelete","numOfQuestions","map","question","i","id","title","tags","tag","length","lastUpdate","type","test","questionID","console","log","testID","display"],"mappings":"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","sourcesContent":["import styles                   from './QuestionTable.css';\r\nimport { useState }             from 'react';\r\n\r\nexport const QuestionTable = ({ questions, filteredQuestions, tests, handleNext, handleShowAll, handleDelete }) => {\r\n\r\n    let numOfQuestions = 0;\r\n\r\n    return (\r\n        <div id=\"questions__container\">\r\n            <div id=\"table__container\">\r\n                <table id=\"questions__table\">\r\n                    <tbody>\r\n                        <tr className=\"space_under header_row border_bottom\">\r\n                            <th> ID                     </th>\r\n                            <th> Question Text and Tags </th>\r\n                            <th> Last Update            </th>\r\n                            <th> Question Type          </th>\r\n                            <th> # of Tests             </th>\r\n                            <th></th>\r\n                        </tr>\r\n                        \r\n\r\n                        {questions.map((question, i) => (\r\n                        <tr className=\"space_under border_bottom\" key={question}>\r\n                            <td className=\"question_id\"           key={question.id}>        {question.id}                                                   </td>\r\n                            <td className=\"question_title_tags\"   key={question.title}>     {question.title} \r\n                            <br/>\r\n                                {question.tags.map((tag) => { \r\n                                    return (\r\n                                    <>\r\n                                        <button className=\"like_tag_button\" key={tag}>      {tag}                                                           </button> \r\n                                        <label className=\"like_link_label\">                 {tag !== question.tags[question.tags.length - 1] ? \" | \" : \"\"}  </label>\r\n                                    </>)\r\n                                })} </td>\r\n                            <td className=\"question_update\" key={question.lastUpdate}>      {question.lastUpdate}       </td>\r\n                            <td className=\"question_type\"   key={question.type}>            {question.type}             </td>\r\n\r\n                            { tests.map((test) => {\r\n                                <td key={test.testID}>\r\n                                    { test.questions.map((questionID) => {\r\n                                        console.log(\"questionID \" + questionID + \" - \" + numOfQuestions);\r\n\r\n                                        if (test.questions[test.questions.length - 1].questionID !== questionID) return ++numOfQuestions;\r\n                                        else return \"\";\r\n                                    }) };\r\n                                </td>\r\n                                \r\n                                if (numOfQuestions !== 0) return numOfQuestions;\r\n                                else return \"\";\r\n                            })}                         \r\n\r\n                            <td key=\"hidden\" style={{display: \"none\"}}> {  numOfQuestions = 0  } </td>\r\n\r\n                            <td className=\"buttons\">\r\n                                <button className=\"regular__button\"> Show                                               </button>\r\n                                <button className=\"regular__button\"> Edit                                               </button>\r\n                                <button className=\"regular__button\"> Duplicate                                          </button>\r\n                                <button className=\"regular__button\"  onClick={() => handleDelete(question.id)}> Delete  </button>\r\n                            </td>\r\n                        </tr> ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div id=\"under_table__container\">\r\n                <label type=\"text\" id=\"showing_questions\"> showing 1-{filteredQuestions ? filteredQuestions.length : \"\"} of filtered Questions </label>\r\n                <button className=\"regular__button\" onClick={() =>   handleNext()          }> Next {`>>`} </button>\r\n                <button className=\"regular__button\" onClick={() =>   handleShowAll()       }> Show All {questions && questions.length} questions </button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}