{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ofeki\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExamApp design ver\\\\ExamsApp\\\\react_client_exams_app\\\\src\\\\components\\\\pages\\\\Admin\\\\ReportByRespondentName\\\\ReportByRespondentName.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from './ReportByRespondentName.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ReportByRespondentName = ({}) => {\n  _s();\n\n  const [students, setStudents] = useState(null);\n  const [studentTests, setStudentTests] = useState(null);\n  const [filterContent, setFilterContent] = useState(\"\");\n  const [respondentName, setRespondentName] = useState(\"\");\n  const [respondentID, setRespondentID] = useState(0);\n\n  const handleRespondentClick = (name, id) => {\n    setRespondentName(name);\n    setRespondentID(id);\n  }; // let input = document.getElementById(\"filter__input\");\n  // if (input) {\n  //     input.addEventListener(\"keyup\", (event) => {\n  //         if (event.key === \"Enter\") {\n  //             if (filterContent === \"\") {\n  //                 setRespondentChosen(false)\n  //             } else {\n  //                 setRespondentChosen(true)}\n  //             }\n  //     });\n  // }\n\n\n  useEffect(() => {\n    const calcAverageGrade = () => {\n      const tests = [];\n\n      if (studentTests !== null && respondentID !== 0) {\n        studentTests.filter(studentTest => studentTest.studentID === respondentID).map(studentTest => tests.push(studentTest));\n      }\n\n      console.log(tests);\n    };\n  }, [respondentID]);\n  useEffect(() => {\n    document.title = \"Report by Name\";\n    fetch(\"http://localhost:8000/students\").then(res => {\n      return res.json();\n    }).then(data => {\n      //    console.log(data); \n      setStudents(data);\n    });\n    fetch(\"http://localhost:8000/studentTests\").then(res => {\n      return res.json();\n    }).then(data => {\n      //    console.log(data); \n      setStudentTests(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"report_by_name noselect\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"headers__container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Report by Respondent Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"content__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"respondent__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Find a respondent \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"To find a respondent, start typing a name below. Then select a respondent from the list that will appear.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), \"*Tip: To show all respondents, press the enter.*\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"filter_name__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Respondent's name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"filter__input\",\n            type: \"text\",\n            value: filterContent,\n            onChange: e => setFilterContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"respondents__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" ID             \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Respondent     \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Email          \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Last Activity  \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), students && students.filter(student => student.fullName.includes(filterContent)).map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n              onClick: () => handleRespondentClick(student.fullName, student.id),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", student.id, \"               \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", student.fullName, \"         \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", student.email, \"            \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", student.lastActivity, \"     \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)]\n            }, student.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"activity_report__container\",\n        className: respondentID === 0 ? \"hidden\" : \"visible\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\" Activity Report for: \", respondentName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"above_activity_table\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            type: \"text\",\n            id: \"explanation\",\n            children: \"    Click a test to show its results           \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            type: \"text\",\n            id: \"average_grade\",\n            children: [\"  Average grade for a test: \", \"               \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"activity_report__table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Instance       \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Test ID        \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Test Name      \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Grade          \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Last Activity  \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), studentTests && studentTests.filter(studentTest => studentTest.studentID !== respondentID).map(studentTest => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", studentTest.instance, \"             \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", studentTest.testID, \"               \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", studentTest.testName, \"             \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", studentTest.grade, \"                \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", studentTest.lastActivity, \"         \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this)]\n            }, studentTest.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"buttons__container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: Back(),\n          children: [\" \", `<<`, \" Back \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}; // NEED TO CHECK WHY THESE GUYS AUTOMATICALLY START\n\n_s(ReportByRespondentName, \"BsWLrRClNMILZTHXakO0VTrirbg=\");\n\n_c = ReportByRespondentName;\n\nfunction Back() {// window.location.href = history.back;\n}\n\n_c2 = Back;\n\nfunction Create_A_Test() {// window.location.href = \"/new-question\";\n}\n\n_c3 = Create_A_Test;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ReportByRespondentName\");\n$RefreshReg$(_c2, \"Back\");\n$RefreshReg$(_c3, \"Create_A_Test\");","map":{"version":3,"sources":["C:/Users/ofeki/OneDrive/שולחן העבודה/ExamApp design ver/ExamsApp/react_client_exams_app/src/components/pages/Admin/ReportByRespondentName/ReportByRespondentName.js"],"names":["React","useEffect","useState","styles","ReportByRespondentName","students","setStudents","studentTests","setStudentTests","filterContent","setFilterContent","respondentName","setRespondentName","respondentID","setRespondentID","handleRespondentClick","name","id","calcAverageGrade","tests","filter","studentTest","studentID","map","push","console","log","document","title","fetch","then","res","json","data","e","target","value","student","fullName","includes","email","lastActivity","instance","testID","testName","grade","Back","Create_A_Test"],"mappings":"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","sourcesContent":["import React, { useEffect, useState }   from 'react';\r\nimport styles                           from './ReportByRespondentName.css';\r\n\r\nexport const ReportByRespondentName = ({}) => {\r\n    \r\n    const [ students,            setStudents         ]       = useState(null); \r\n    const [ studentTests,        setStudentTests     ]       = useState(null); \r\n\r\n    const [ filterContent,       setFilterContent    ]       = useState(\"\");\r\n    const [ respondentName,      setRespondentName   ]       = useState(\"\");\r\n    const [ respondentID,        setRespondentID     ]       = useState(0);\r\n\r\n    const handleRespondentClick = (name, id) => {\r\n        setRespondentName(name);\r\n        setRespondentID(id);\r\n    }\r\n    \r\n    // let input = document.getElementById(\"filter__input\");\r\n    // if (input) {\r\n    //     input.addEventListener(\"keyup\", (event) => {\r\n    //         if (event.key === \"Enter\") {\r\n    //             if (filterContent === \"\") {\r\n    //                 setRespondentChosen(false)\r\n    //             } else {\r\n    //                 setRespondentChosen(true)}\r\n    //             }\r\n    //     });\r\n    // }\r\n\r\n    useEffect(() => {\r\n        const calcAverageGrade = () => {\r\n            const tests = [];\r\n            if (studentTests !== null && respondentID !== 0) {\r\n                studentTests.filter((studentTest) => studentTest.studentID === respondentID).map((studentTest) =>\r\n                    tests.push(studentTest)\r\n                );\r\n            }\r\n            console.log(tests);\r\n        }\r\n    }, [respondentID])\r\n\r\n    useEffect(() => {\r\n        document.title = \"Report by Name\";\r\n\r\n        fetch(\"http://localhost:8000/students\")\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .then((data) => {\r\n        //    console.log(data); \r\n           setStudents(data);\r\n        });\r\n\r\n        fetch(\"http://localhost:8000/studentTests\")\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .then((data) => {\r\n        //    console.log(data); \r\n            setStudentTests(data);\r\n        });\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"report_by_name noselect\">\r\n            <div id=\"headers__container\">\r\n                <h1> Report by Respondent Name </h1>\r\n            </div>\r\n\r\n            <div id=\"content__container\">\r\n                <div id=\"respondent__container\">\r\n                    <h2> Find a respondent </h2>\r\n                    <p>\r\n                        To find a respondent, start typing a name below.\r\n                        Then select a respondent from the list that will appear.\r\n                        <br></br>\r\n                        *Tip: To show all respondents, press the enter.*\r\n                    </p>\r\n                    <div id=\"filter_name__container\">    \r\n                        <label> Respondent's name: </label>\r\n                        <input id=\"filter__input\" type='text' value={filterContent} onChange={(e) => setFilterContent(e.target.value) } />\r\n                    </div>\r\n\r\n                    <table id=\"respondents__table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th> ID             </th>\r\n                                <th> Respondent     </th>\r\n                                <th> Email          </th>\r\n                                <th> Last Activity  </th>\r\n                            </tr>\r\n\r\n                            {students && students.filter((student) => student.fullName.includes(filterContent)).map((student) => (\r\n                            <tr key={student.id} onClick={() => handleRespondentClick(student.fullName, student.id)}>\r\n                                <td> {student.id}               </td>\r\n                                <td> {student.fullName}         </td>\r\n                                <td> {student.email}            </td>\r\n                                <td> {student.lastActivity}     </td>\r\n                            </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div id=\"activity_report__container\" className={respondentID === 0 ? \"hidden\" : \"visible\"}>\r\n                    <h2> Activity Report for: {respondentName} </h2>\r\n                    <div id=\"above_activity_table\">\r\n                        <label type=\"text\" id=\"explanation\">    Click a test to show its results           </label>\r\n                        <label type=\"text\" id=\"average_grade\">  Average grade for a test: {}               </label>\r\n                    </div>\r\n\r\n                    <table id=\"activity_report__table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th> Instance       </th>\r\n                                <th> Test ID        </th>\r\n                                <th> Test Name      </th>\r\n                                <th> Grade          </th>\r\n                                <th> Last Activity  </th>\r\n                            </tr>\r\n\r\n                            {studentTests && studentTests.filter((studentTest) => studentTest.studentID !== respondentID).map((studentTest) => (\r\n                            <tr key={studentTest.id}>\r\n                                <td> {studentTest.instance}             </td>\r\n                                <td> {studentTest.testID}               </td>\r\n                                <td> {studentTest.testName}             </td>\r\n                                <td> {studentTest.grade}                </td>\r\n                                <td> {studentTest.lastActivity}         </td>\r\n                            </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div id=\"buttons__container\">\r\n                        <button onClick={ Back() }> {`<<` } Back </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n// NEED TO CHECK WHY THESE GUYS AUTOMATICALLY START\r\n\r\nfunction Back() {\r\n    // window.location.href = history.back;\r\n}\r\n\r\nfunction Create_A_Test() {\r\n    // window.location.href = \"/new-question\";\r\n}"]},"metadata":{},"sourceType":"module"}